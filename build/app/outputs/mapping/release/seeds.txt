zendesk.chat.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzw,long)
io.flutter.embedding.engine.FlutterJNI
zendesk.chat.ProfileProvider: void appendVisitorNote(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzw,long)
zendesk.chat.RequestSender: void enqueue(zendesk.chat.Request)
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider emailInputValidatorProvider
zendesk.chat.ChatProvider: void requestChat()
zendesk.chat.DnModels$Profile: java.lang.String nick
zendesk.chat.PathValueSender: java.lang.String LOG_TAG
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.FirebaseInstanceId getInstance(com.google.firebase.FirebaseApp)
zendesk.chat.FileUploader$MeteredRequestBody: FileUploader$MeteredRequestBody(java.lang.String,java.io.File,zendesk.chat.FileUploadListener,zendesk.chat.FileUploader$1)
zendesk.chat.ChatEngineModule_EngineStatusObservableFactory: zendesk.chat.ChatEngineModule_EngineStatusObservableFactory INSTANCE
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Title
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
zendesk.chat.R$styleable: int MenuItem_tooltipText
zendesk.chat.Tls12SocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
zendesk.chat.R$id
zendesk.chat.ChatConversationOngoingChecker: zendesk.chat.ChatProvider chatProvider
zendesk.chat.ChatEngineModule_ChatFormStageFactory: javax.inject.Provider idProvider
zendesk.chat.ChatEngineModule: zendesk.messaging.components.IdProvider provideIdProvider()
zendesk.chat.R$style: int Base_V26_Theme_AppCompat
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
zendesk.chat.AnonymousLoginDetailsProvider$1: void update(zendesk.chat.DnModels$Profile)
com.squareup.picasso.Picasso$LoadedFrom: com.squareup.picasso.Picasso$LoadedFrom[] values()
zendesk.chat.ObservableData: java.lang.Object data
zendesk.chat.ChatModel: void onPreChatFormCompleted(zendesk.chat.ChatContext,zendesk.chat.VisitorInfo,zendesk.chat.Department,java.lang.String)
zendesk.chat.R$style: int Base_Widget_AppCompat_Light_PopupMenu
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.core.app.RemoteActionCompat
zendesk.chat.KeepAliveSignal: void stopKeepAlive()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
zendesk.chat.R$styleable: int ActionBar_contentInsetEndWithActions
zendesk.messaging.ui.ResponseOptionSelectedView: ResponseOptionSelectedView(android.content.Context,android.util.AttributeSet)
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider cacheManagerProvider
zendesk.chat.DnModels$LiveChat: java.util.Map departments
zendesk.chat.FormField
zendesk.chat.R$styleable: int Spinner_android_prompt
zendesk.chat.ChatEngine$2
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
zendesk.chat.TextField: boolean hasValidInput()
com.google.android.gms.internal.measurement.zzcd$zzg: int zzd
zendesk.chat.VisitorInfo
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
zendesk.messaging.ui.AgentFileCellView: void setBubbleClickListeners(zendesk.messaging.ui.AgentFileCellView$State)
zendesk.chat.DnModels$Settings
zendesk.chat.DnUpdateModels$RequestChat: DnUpdateModels$RequestChat()
zendesk.chat.DataStore$1: void update(java.lang.Object)
zendesk.chat.DnUpdateModels$Field: DnUpdateModels$Field(java.lang.String,java.lang.String,zendesk.chat.DnUpdateModels$1)
com.google.android.material.chip.Chip: float getIconStartPadding()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
zendesk.chat.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
zendesk.chat.DnModels$LiveChat: zendesk.chat.DnModels$Channel channel
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory: javax.inject.Provider okHttpClientProvider
zendesk.chat.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.google.android.gms.internal.measurement.zzcd$zze: com.google.android.gms.internal.measurement.zzju zzk
com.google.android.gms.internal.measurement.zzca$zzc: int zzc
zendesk.chat.ObservationScope: boolean isCancelled()
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzab
zendesk.chat.R$color
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
zendesk.chat.DnUpdateModels$ChatCommentValue: java.lang.String chatComment
zendesk.chat.VisitorActiveSignal: zendesk.chat.ConnectionStateMachine connectionStateMachine
zendesk.chat.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
zendesk.chat.ChatLogMapper: zendesk.messaging.MessagingItem$Query$Status queryStatus(zendesk.chat.ChatLog)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
zendesk.chat.MainThreadPoster$2$1: MainThreadPoster$2$1(zendesk.chat.MainThreadPoster$2,java.lang.Object)
zendesk.chat.ChatMenuAction: zendesk.chat.ChatMenuAction END_CHAT
zendesk.chat.R$attr: int borderlessButtonStyle
zendesk.chat.R$color: int tooltip_background_light
zendesk.chat.FileUploadListener: void onProgress(java.lang.String,long,long)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
com.google.android.gms.internal.measurement.zzbv$zzd$zza: com.google.android.gms.internal.measurement.zzbv$zzd$zza[] values()
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: zendesk.chat.ChatEngine$EngineStartedCompletion engineStartedCompletion(zendesk.chat.ChatProvider,java.lang.Object,java.lang.Object,zendesk.messaging.components.bot.BotMessageDispatcher,zendesk.messaging.components.DateProvider,zendesk.messaging.components.IdProvider,zendesk.chat.ChatStringProvider)
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.ObservableData observableChatState()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_observableChatSettings: java.lang.Object get()
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
zendesk.chat.R$drawable: int abc_ic_star_black_48dp
zendesk.chat.R$styleable: int AppCompatTheme_buttonStyle
zendesk.chat.VisitorInfo$Builder: VisitorInfo$Builder()
zendesk.chat.ChatFormDriver$1: void onDispatch()
zendesk.chat.ChatLog: java.lang.String nick
zendesk.chat.R$id: int action_bar_root
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.ChatSocketListener listener
zendesk.chat.ChatObserverFactory_Factory: javax.inject.Provider chatConnectionSupervisorProvider
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
zendesk.chat.R$drawable: int abc_vector_test
zendesk.chat.Connection: boolean isConnectionOpen()
zendesk.chat.DnModels$Connection$Status: zendesk.chat.DnModels$Connection$Status[] values()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
zendesk.chat.ZendeskChatProvider_Factory: zendesk.chat.ZendeskChatProvider_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$color: int foreground_material_dark
zendesk.chat.ChatProvidersComponent: zendesk.chat.ChatSessionManager chatSessionManager()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
zendesk.chat.PathUpdate$1
zendesk.chat.DepartmentStatus: DepartmentStatus(java.lang.String,int)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
zendesk.chat.Form: java.util.List fields
androidx.fragment.app.Fragment$2
zendesk.chat.LoginDetailsFactory: java.lang.String title
zendesk.chat.R$color: int abc_tint_default
zendesk.chat.SharedPreferencesStorage_Factory: zendesk.chat.SharedPreferencesStorage_Factory create(javax.inject.Provider,javax.inject.Provider)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String getType()
zendesk.chat.ChatProvidersModule_ObservableChatSettingsFactory: zendesk.chat.ChatProvidersModule_ObservableChatSettingsFactory create()
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.google.android.material.appbar.MaterialToolbar
zendesk.chat.VisitorInfo$Builder: zendesk.chat.VisitorInfo$Builder withEmail(java.lang.String)
zendesk.chat.DnUpdateModels$ChatTranscriptValue: java.lang.String transcriptEmail
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.ObservableData observableChatSettings()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.core.app.RemoteActionCompatParcelizer
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
zendesk.chat.ChatLog$OptionsMessage: java.util.List getMessageOptions()
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue offlineForm(zendesk.chat.OfflineForm)
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
zendesk.chat.ChatModel: java.lang.String LOG_TAG
com.google.android.material.button.MaterialButton: void setPressed(boolean)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
zendesk.chat.ChatStateStore: void extendLocalWithRemote(java.util.Map,java.util.Map,zendesk.chat.ChatStateStore$ChatLogMerger)
com.google.android.gms.internal.measurement.zzcd$zzh$zzb: com.google.android.gms.internal.measurement.zzcd$zzh$zzb[] values()
com.google.android.material.checkbox.MaterialCheckBox
zendesk.chat.R$attr: int keylines
zendesk.chat.ChatSession: void appendVisitorNote(java.lang.String,com.zendesk.service.ZendeskCallback)
android.support.v4.media.RatingCompat
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
zendesk.chat.BuildConfig
zendesk.chat.R
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
zendesk.chat.ZendeskPushNotificationsProvider: ZendeskPushNotificationsProvider(com.google.gson.Gson,zendesk.chat.ChatSessionManager)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String getDt()
zendesk.chat.ZendeskConnectionProvider_Factory: ZendeskConnectionProvider_Factory(javax.inject.Provider,javax.inject.Provider)
zendesk.chat.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
zendesk.chat.ChatConfiguration$Builder: boolean access$100(zendesk.chat.ChatConfiguration$Builder)
zendesk.chat.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
com.google.android.material.appbar.AppBarLayout$Behavior
com.zendesk.service.ZendeskCallback: void onSuccess(java.lang.Object)
zendesk.chat.AndroidModule_BaseStorageFactory: AndroidModule_BaseStorageFactory(javax.inject.Provider,javax.inject.Provider)
zendesk.chat.R$attr: int dividerVertical
zendesk.chat.ChatProvidersModule: zendesk.chat.PushNotificationsProvider pushNotificationsProvider(zendesk.chat.ZendeskPushNotificationsProvider)
zendesk.chat.SendMessageRequest: void onDeliveryStatusChanged(zendesk.chat.DeliveryStatus)
zendesk.chat.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
zendesk.chat.JwtLoginDetailsProvider$2
zendesk.chat.DnUpdateModels$VisitorPathUpdate: java.lang.String url
zendesk.chat.JwtAuthenticator$JwtCompletion: void onError()
zendesk.chat.ZendeskChatProvider_Factory: ZendeskChatProvider_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ZendeskChatProvider: java.lang.String LOG_TAG
zendesk.chat.R$styleable: int Toolbar_android_minHeight
zendesk.chat.DnModels$ChatLog: int hashCode()
com.google.android.gms.internal.measurement.zzbv$zzc
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
zendesk.chat.ChatConversationOngoingChecker$1: zendesk.chat.ChatConversationOngoingChecker this$0
zendesk.chat.UserAgentAndClientHeadersInterceptor_Factory: java.lang.Object get()
zendesk.chat.R$attr: int elevation
zendesk.chat.IdentityManager_Factory: javax.inject.Provider cacheManagerProvider
zendesk.chat.PersistentCookieJar$Data
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
zendesk.chat.Frames$Command: zendesk.chat.Frames$Command PING
zendesk.chat.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
zendesk.chat.ChatEngineModule$2
com.google.android.gms.signin.internal.zaj: android.os.Parcelable$Creator CREATOR
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
zendesk.chat.SharedPreferencesStorage_Factory: javax.inject.Provider sharedPreferencesProvider
zendesk.chat.R$dimen: int hint_alpha_material_light
zendesk.chat.ChatStringProvider: java.lang.String offlineFormWelcomeMessage()
zendesk.chat.R$string: int abc_action_bar_up_description
zendesk.chat.JwtLoginDetailsProvider$1: void onTokenLoaded(java.lang.String)
zendesk.chat.TextField: TextField(zendesk.chat.FormField$Status,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,zendesk.messaging.AgentDetails,zendesk.chat.TextField$InputValidator)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
zendesk.chat.SendFileRequest: void onDeliveryStatusChanged(zendesk.chat.DeliveryStatus)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Display3
zendesk.chat.AndroidModule_NetworkConnectivityFactory: java.lang.Object get()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
zendesk.chat.RequestSender: zendesk.chat.ConnectionStateMachine connectionStateMachine
zendesk.chat.FormField: void setValue(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
zendesk.chat.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
zendesk.chat.UserAgentAndClientHeadersInterceptor: java.lang.String zendeskClient
zendesk.chat.FrameFactory: double smoothSkewedTransitTimeIn
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
zendesk.chat.R$attr: int autoSizeMinTextSize
zendesk.chat.Department
zendesk.chat.AuthenticationStorage: void clearAuthenticationWrapper()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
zendesk.chat.PushNotificationsProvider: zendesk.chat.PushData processPushNotification(java.util.Map)
zendesk.chat.R$string: int abc_toolbar_collapse_description
zendesk.chat.ZendeskSettingsProvider_Factory: ZendeskSettingsProvider_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ZendeskPushNotificationsProvider: void update(zendesk.chat.ChatSession)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)
zendesk.chat.ChatSessionManager_Factory: zendesk.chat.ChatSessionManager newInstance(zendesk.chat.ObservableData,zendesk.chat.ChatVisitorClient,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzac
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
zendesk.chat.R$attr: int initialActivityCount
zendesk.chat.R$id: int submit_area
zendesk.chat.OptionSelectField: java.util.List getMessagingItems(java.lang.String)
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
zendesk.chat.ChatState: zendesk.chat.Agent getAgentByNick(java.lang.String)
zendesk.chat.R$dimen: int abc_text_size_body_1_material
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
zendesk.chat.ChatEngineModule_ChatFormStageFactory: zendesk.chat.ChatFormStage get()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.annotation.Keep
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
zendesk.chat.ZendeskChatProvider: void requestChat()
zendesk.chat.FormField: zendesk.messaging.Update$State$UpdateInputFieldState getInputFieldState()
zendesk.chat.R$styleable: int FontFamily_fontProviderFetchStrategy
zendesk.chat.R$styleable: int SwitchCompat_switchPadding
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
zendesk.chat.R$styleable: int TextAppearance_fontFamily
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.ChatVisitorClient build()
zendesk.chat.LoginDetails
zendesk.chat.R$styleable: int AppCompatTextView_drawableStartCompat
zendesk.chat.SendMessageRequest: java.lang.String message
zendesk.chat.R$drawable: int abc_text_cursor_material
zendesk.chat.AndroidModule_V1StorageFactory: zendesk.chat.BaseStorage v1Storage(android.content.Context,com.google.gson.Gson)
zendesk.chat.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
zendesk.chat.AuthenticationService: retrofit2.Call reAuthenticate(java.lang.String,java.lang.String,java.lang.String)
zendesk.chat.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
zendesk.chat.R$style: int Base_Widget_AppCompat_Toolbar
zendesk.chat.R$style: int Widget_AppCompat_ActionButton_Overflow
zendesk.chat.ChatEngineModule: zendesk.chat.ChatAgentAvailabilityStage getChatAgentAvailabilityStage(zendesk.chat.AccountProvider,zendesk.chat.ChatModel,zendesk.chat.ChatFormStage)
zendesk.chat.R$dimen: int abc_action_bar_overflow_padding_start_material
zendesk.chat.ChatSocketClient$1: zendesk.chat.ChatSocketListener val$listener
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
zendesk.chat.ChatProvider: zendesk.chat.ChatLog$AttachmentMessage sendFile(java.io.File,zendesk.chat.FileUploadListener)
zendesk.chat.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
zendesk.chat.CompletionCallback: void onCompleted(java.lang.Object)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
zendesk.chat.PushNotificationsProvider: void unregisterPushToken()
zendesk.chat.ZendeskChatProvider: java.util.concurrent.atomic.AtomicReference observationScopeReference
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
kotlinx.coroutines.android.AndroidExceptionPreHandler: kotlin.reflect.KProperty[] $$delegatedProperties
zendesk.chat.ZendeskSettingsProvider_Factory: zendesk.chat.ZendeskSettingsProvider get()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
zendesk.chat.OkHttpUtils: java.lang.StringBuilder appendQuotedString(java.lang.StringBuilder,java.lang.String)
androidx.core.widget.NestedScrollView
zendesk.chat.R$attr: int actionModeSelectAllDrawable
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.R$styleable: int DrawerArrowToggle_gapBetweenBars
androidx.core.graphics.drawable.IconCompatParcelizer
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
zendesk.chat.ChatLog: zendesk.chat.ChatParticipant getChatParticipant()
zendesk.chat.FormField: java.lang.String id
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
zendesk.chat.R$styleable: int MenuItem_android_title
zendesk.chat.Utils: java.util.Random random
zendesk.chat.R$string: int abc_action_menu_overflow_description
zendesk.chat.ChatEngine: zendesk.chat.ProfileProvider profileProvider
zendesk.chat.R$layout: int abc_screen_content_include
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String dt
zendesk.chat.DefaultChatSession: void disconnect()
zendesk.chat.DnModels$LiveChat: zendesk.chat.DnModels$Settings getSettings()
zendesk.chat.AndroidModule: android.os.Handler mainHandler()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
zendesk.chat.R$attr: int tint
zendesk.chat.ZendeskPushNotificationsProvider: java.util.concurrent.atomic.AtomicReference pushTokenRef
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.ChatSocketListener getListener()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
zendesk.chat.SettingsProvider: void observeChatSettings(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.R$attr: int colorControlNormal
zendesk.chat.DataStore$1
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus valueOf(java.lang.String)
com.google.gson.reflect.TypeToken: boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzab)
zendesk.chat.R$dimen: int abc_action_bar_overflow_padding_end_material
zendesk.chat.DefaultChatSession$3: void run()
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus access$900(zendesk.chat.ChatConfiguration$Builder)
zendesk.chat.R$styleable: int AppCompatTheme_switchStyle
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
zendesk.chat.ChatBotMessagingItems_Factory: zendesk.chat.ChatBotMessagingItems get()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$styleable: int TextAppearance_android_textStyle
zendesk.chat.R$style: int Base_V7_Widget_AppCompat_Toolbar
zendesk.chat.DefaultChatSession$5: DefaultChatSession$5(zendesk.chat.DefaultChatSession,com.zendesk.service.ZendeskCallback,java.lang.String)
zendesk.chat.R$dimen: int notification_subtext_size
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.google.android.gms.internal.measurement.zzcd$zzd
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
zendesk.chat.IdentityManager_Factory: IdentityManager_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.DefaultChatSession$17: zendesk.chat.DefaultChatSession this$0
zendesk.chat.ChatStringProvider: java.lang.String requestTranscriptText()
zendesk.chat.SendFileRequest: zendesk.chat.CompletionCallback internalCompletion
zendesk.chat.R$attr: int buttonBarNeutralButtonStyle
zendesk.chat.CacheManager: CacheManager(zendesk.chat.ObservableData,zendesk.chat.ObservableData,zendesk.chat.ObservableData)
zendesk.chat.ObservableData$1: zendesk.chat.Observer val$observer
zendesk.chat.AndroidModule: zendesk.chat.BaseStorage baseStorage(android.content.Context,com.google.gson.Gson)
zendesk.chat.ConnectionStatus: zendesk.chat.ConnectionStatus UNREACHABLE
com.google.android.gms.internal.measurement.zzcd$zzk: long zzd
zendesk.chat.EmailInputValidator_Factory: javax.inject.Provider chatStringProvider
zendesk.chat.R$styleable: int AppCompatTextHelper_android_drawableLeft
zendesk.chat.TimerModule_ProvideHandlerFactory: zendesk.chat.TimerModule_ProvideHandlerFactory INSTANCE
zendesk.chat.R$id: int topPanel
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.Clock access$700(zendesk.chat.JwtLoginDetailsProvider)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
zendesk.chat.ChatVisitorClient: java.lang.String userAgent
zendesk.chat.ChatModel_Factory: zendesk.chat.ChatModel_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.DnModels$FileSending: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
zendesk.chat.R$styleable: int GradientColorItem_android_color
zendesk.chat.VisitorActiveSignal$VisitorActiveRunnable: void run()
zendesk.chat.ChatAgentAvailabilityStage: ChatAgentAvailabilityStage(zendesk.chat.AccountProvider,zendesk.chat.ChatStatusCheckStage$ChatInitCompletion,zendesk.chat.ChatAgentAvailabilityStage$AgentAvailableContinuation,zendesk.chat.ChatAgentAvailabilityStage$AgentUnavailableContinuation)
zendesk.chat.R$string
zendesk.chat.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
zendesk.chat.DataStore: zendesk.chat.ChatStateStore chatStateStore
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
zendesk.chat.R$attr: int customNavigationLayout
zendesk.chat.R$layout: int abc_expanded_menu_layout
zendesk.chat.ChatRating
zendesk.chat.R$styleable: int[] AppCompatSeekBar
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
zendesk.chat.R$style: int TextAppearance_AppCompat_Small
zendesk.chat.R$string: int zch_pre_chat_response_accepted_message
zendesk.chat.FileUploader$MeteredRequestBody: zendesk.chat.FileUploadListener access$300(zendesk.chat.FileUploader$MeteredRequestBody)
com.google.android.gms.internal.measurement.zzck$zzb$zza: com.google.android.gms.internal.measurement.zzck$zzb$zza[] values()
zendesk.chat.Frames$Command: java.lang.String getRawCommand()
com.google.android.gms.internal.measurement.zzcd$zza: boolean zzg
androidx.appcompat.widget.FitWindowsFrameLayout
zendesk.chat.R$dimen: int tooltip_precise_anchor_threshold
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
zendesk.chat.DefaultChatSession$7: zendesk.chat.DefaultChatSession this$0
zendesk.chat.DefaultChatSession: zendesk.chat.ChatLog$Message resendFailedMessage(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatLog$Message: java.lang.String message
zendesk.chat.Chat: zendesk.chat.Chat[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
zendesk.chat.R$styleable: int PopupWindow_overlapAnchor
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus emailFieldStatus
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
zendesk.chat.R$styleable: int AppCompatTheme_colorPrimary
zendesk.chat.R$style: int Base_Widget_AppCompat_ListView_DropDown
zendesk.chat.DnUpdateModels$Field
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
zendesk.chat.ZendeskChatProvider: void clearDepartment(com.zendesk.service.ZendeskCallback)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
zendesk.chat.AuthenticationStorage$InMemory: AuthenticationStorage$InMemory()
zendesk.chat.ChatForm: java.lang.String extractDepartmentName()
zendesk.chat.ChatEngineModule_ProvideBotMessageDispatcherFactory: zendesk.chat.ChatEngineModule_ProvideBotMessageDispatcherFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ChatProvidersComponent
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
zendesk.chat.FrameFactory: java.lang.String generateRawMessage(zendesk.chat.Frames$Command,java.lang.String)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
zendesk.chat.R$layout: int abc_screen_toolbar
zendesk.chat.R$attr: int drawerArrowStyle
zendesk.chat.ChatLog: java.lang.String getDisplayName()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$style: int Theme_AppCompat_Light_NoActionBar
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
zendesk.chat.ChatEngineModule: zendesk.messaging.components.bot.BotMessageDispatcher provideBotMessageDispatcher(zendesk.messaging.components.bot.BotMessageDispatcher$MessageIdentifier,zendesk.messaging.components.ActionListener,zendesk.messaging.components.ActionListener,zendesk.messaging.components.Timer$Factory)
zendesk.chat.ProfileProvider: void clearVisitorNotes(com.zendesk.service.ZendeskCallback)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
zendesk.chat.FileUploader: FileUploader(okhttp3.OkHttpClient,zendesk.chat.DataNode,zendesk.chat.Connection)
com.google.android.gms.common.SupportErrorDialogFragment
zendesk.chat.R$styleable: int FontFamily_fontProviderQuery
zendesk.chat.FileUploader$MeteredRequestBody$1: void write(okio.Buffer,long)
zendesk.chat.DefaultChatSession$17: zendesk.chat.ChatLog$AttachmentMessage val$attachmentMessage
zendesk.chat.R$styleable: int MenuItem_android_visible
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.JwtAuthenticator jwtAuthenticator
com.google.android.material.internal.BaselineLayout
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String getUrl()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
zendesk.chat.ZendeskConnectionProvider_Factory: java.lang.Object get()
zendesk.messaging.ui.EndUserMessageView: EndUserMessageView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzbv$zze: int zzc
zendesk.chat.R$styleable: int Spinner_android_dropDownWidth
zendesk.chat.ChatConfiguration: zendesk.chat.ChatConfiguration$Builder builder(zendesk.chat.ChatConfiguration)
zendesk.chat.ChatSettings
zendesk.chat.SendMessageRequest: zendesk.chat.CompletionCallback internalCompletion
zendesk.chat.R$styleable: int AppCompatTheme_windowFixedHeightMinor
zendesk.chat.R$color: int abc_tint_btn_checkable
com.google.android.gms.internal.measurement.zzc: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
zendesk.chat.ZendeskPushNotificationsProvider: java.lang.String PUSH_KEY_DATA
zendesk.chat.R$color: int dim_foreground_disabled_material_light
zendesk.chat.R$drawable: int abc_ab_share_pack_mtrl_alpha
zendesk.chat.IdentityManager: java.util.concurrent.atomic.AtomicBoolean access$1000(zendesk.chat.IdentityManager)
zendesk.chat.R$drawable: int abc_ic_arrow_drop_right_black_24dp
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
zendesk.chat.ChatConfig: zendesk.chat.VisitorPath getVisitorPath()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String title
zendesk.chat.ChatConfiguration$Builder: java.util.List access$502(zendesk.chat.ChatConfiguration$Builder,java.util.List)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
zendesk.chat.R$style: int TextAppearance_AppCompat_Display3
zendesk.chat.ChatEngineModule_ProvideIdProviderFactory: zendesk.messaging.components.IdProvider provideIdProvider()
zendesk.chat.R$attr: int dropdownListPreferredItemHeight
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int terminationState
zendesk.chat.ChatSocketClient$1
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue createDepartmentPref(java.lang.Long)
zendesk.chat.Utils: java.lang.String randomId()
zendesk.chat.DnModels$Account: boolean equals(java.lang.Object)
zendesk.chat.ChatProvidersComponent: zendesk.chat.ObservableData observableChatSettings()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
zendesk.chat.ChatEngine_Factory: ChatEngine_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.VisitorPath: java.text.DateFormat ISO_8601_DATE_FORMAT
zendesk.chat.R$drawable: int notification_action_background
zendesk.chat.PushData: zendesk.chat.PushData$Type getType()
zendesk.chat.ChatObserverFactory$2
zendesk.chat.IdentityManager$IdentityResetCompletion: com.zendesk.service.ZendeskCallback access$200(zendesk.chat.IdentityManager$IdentityResetCompletion)
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzii zzf
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzbv$zzb zzl
zendesk.chat.R$attr: int colorControlHighlight
zendesk.chat.R$drawable: int abc_ic_star_black_16dp
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.ChatNetworkModule
zendesk.chat.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
zendesk.chat.DnUpdateModels$ChatMessage: boolean unverified
zendesk.chat.R$attr: int showTitle
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
zendesk.chat.PathValue: java.lang.String getId()
zendesk.chat.R$styleable: int View_android_theme
zendesk.chat.FileUploader: okhttp3.Request buildRequest(java.lang.String,java.lang.String,java.io.File,zendesk.chat.FileUploadListener)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
zendesk.chat.R$styleable: int MenuView_preserveIconSpacing
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
zendesk.chat.MainThreadPoster: android.os.Handler access$000(zendesk.chat.MainThreadPoster)
zendesk.chat.DataStore: zendesk.chat.ObservableData access$300(zendesk.chat.DataStore)
zendesk.chat.ChatEngine: zendesk.chat.ChatStringProvider chatStringProvider
zendesk.chat.R$dimen: int hint_pressed_alpha_material_light
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
zendesk.chat.ZendeskAccountProvider: zendesk.chat.ObservableData access$000(zendesk.chat.ZendeskAccountProvider)
zendesk.chat.ChatConnectionSupervisor: androidx.lifecycle.LifecycleOwner lifecycleOwner
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider chatFormStageProvider
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$id: int alertTitle
zendesk.chat.NetworkConnectivity$State: zendesk.chat.NetworkConnectivity$State[] values()
zendesk.chat.AnonymousLoginDetailsProvider
zendesk.chat.DnModels$Account$Status: zendesk.chat.DnModels$Account$Status[] $VALUES
okhttp3.WebSocketListener: void onOpen(okhttp3.WebSocket,okhttp3.Response)
zendesk.chat.DataNode
zendesk.chat.ChatFormDriver: zendesk.chat.ChatForm form
zendesk.chat.R$dimen: int notification_large_icon_height
zendesk.chat.R$string: int abc_shareactionprovider_share_with
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
zendesk.chat.R$styleable: int ActionBar_logo
zendesk.chat.FrameFactory: zendesk.chat.Clock clock
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
zendesk.chat.ChatEngineModule$1
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
zendesk.chat.ChatSdkScope
zendesk.chat.ChatBotMessagingItems: java.util.concurrent.atomic.AtomicReference botMessagingItemsRef
zendesk.chat.DnConverterUtils: java.util.List convertDepartments(java.util.Map)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
zendesk.chat.AuthenticationService: retrofit2.Call authenticate(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
zendesk.chat.ChatSettings: boolean fileSendingEnabled
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
zendesk.chat.MessageAck: MessageAck(java.lang.String,zendesk.chat.MessageAck$Status,java.lang.Integer,java.lang.String)
zendesk.chat.MediatorEndpoint: java.lang.String generateUrl(java.lang.String)
zendesk.chat.ProfileProvider: void setVisitorNote(java.lang.String)
zendesk.chat.R$styleable: int TextAppearance_android_textFontWeight
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
zendesk.chat.ChatState: java.util.List getChatLogs()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
zendesk.chat.DefaultChatStringProvider: java.lang.String phoneFieldHint()
zendesk.chat.R$style: int Widget_AppCompat_Button
zendesk.chat.ZendeskChatProvider$1: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.R$styleable: int SearchView_voiceIcon
zendesk.chat.ObservableData: void removeObserver(zendesk.chat.Observer)
com.google.gson.reflect.TypeToken: java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])
zendesk.chat.ChatFormDriver_Factory: zendesk.chat.ChatFormDriver newInstance(zendesk.messaging.components.bot.BotMessageDispatcher,zendesk.messaging.components.DateProvider,zendesk.messaging.components.IdProvider,zendesk.chat.ChatStringProvider,java.lang.Object)
zendesk.chat.MessageAck$Status: MessageAck$Status(java.lang.String,int)
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzii zzf
zendesk.chat.DefaultChatSocketConnection: java.lang.String getSocketId()
zendesk.chat.R$styleable: int AppCompatTheme_actionModeStyle
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String ref
zendesk.chat.R$anim: int abc_tooltip_enter
zendesk.chat.DefaultChatStringProvider: java.lang.String phoneFieldPrompt()
zendesk.chat.R$color: int primary_material_dark
zendesk.chat.Frames
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
zendesk.chat.ChatEngineModule_ProvideUpdateActionListenerFactory: zendesk.messaging.components.ActionListener get()
zendesk.chat.DnModels: java.util.List PATH_CHANNEL
zendesk.chat.FormField$Status: zendesk.chat.FormField$Status HIDDEN
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
zendesk.chat.ChatProvidersModule$1: ChatProvidersModule$1()
zendesk.chat.SharedPreferencesStorage: void put(java.lang.String,java.lang.Object)
zendesk.chat.AnonymousLoginDetailsProvider$1: zendesk.chat.ObservationScope val$observationScope
com.google.android.material.transformation.FabTransformationSheetBehavior
zendesk.chat.R$id: int src_over
zendesk.chat.R$styleable: int SearchView_defaultQueryHint
zendesk.chat.IdentityManager_Factory
zendesk.chat.ChatForm: zendesk.chat.TextField createMessageFormField(java.lang.String,zendesk.messaging.AgentDetails)
zendesk.chat.ChatConfiguration: boolean transcriptEnabled
zendesk.chat.R$styleable: int Toolbar_titleMargin
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
zendesk.chat.FileUploader: okhttp3.Headers buildMultiPartHeaders(java.lang.String,java.lang.String)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.Class)
zendesk.chat.R$attr: int dialogCornerRadius
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
zendesk.chat.R$style: int Widget_AppCompat_Button_Small
zendesk.chat.PathUpdate: com.google.gson.JsonObject update
zendesk.chat.R$color: int background_material_light
zendesk.chat.R$style: int Widget_Compat_NotificationActionText
zendesk.chat.DefaultChatSession$9: DefaultChatSession$9(zendesk.chat.DefaultChatSession,boolean)
zendesk.chat.R$styleable: int AppCompatTheme_actionBarTabBarStyle
zendesk.chat.DefaultChatSession$18: zendesk.chat.DefaultChatSession this$0
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
zendesk.chat.SendFileRequest: void cancel()
zendesk.chat.WebSocket$WebSocketListener$WebSocketState: zendesk.chat.WebSocket$WebSocketListener$WebSocketState[] values()
zendesk.chat.VisitorInfo$1
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
zendesk.chat.R$dimen: int abc_progress_bar_height_material
zendesk.chat.KeepAliveSignal: java.util.concurrent.ScheduledFuture scheduledFuture
zendesk.chat.ChatEngineModule_ProvideUpdateActionListenerFactory: zendesk.messaging.components.ActionListener provideUpdateActionListener(zendesk.messaging.components.CompositeActionListener)
zendesk.chat.LoginDetailsFactory: java.lang.String sourceVersion
zendesk.chat.R$styleable: int AppCompatTextView_lineHeight
zendesk.chat.R$attr: int toolbarStyle
zendesk.chat.R$styleable: int AppCompatTheme_editTextStyle
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)
zendesk.chat.JwtLoginDetailsProvider: java.lang.String access$200(zendesk.chat.JwtLoginDetailsProvider)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.provider.BuildConfig
zendesk.chat.DaggerChatSdkComponent: void initialize(zendesk.chat.ChatProvidersComponent)
zendesk.chat.AuthenticationWrapper: AuthenticationWrapper(long,zendesk.chat.AuthenticationResponse)
zendesk.chat.R$styleable: int ActionMode_backgroundSplit
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus FAILED_UNKNOWN_REASON
zendesk.chat.R$color: int abc_search_url_text
zendesk.chat.SharedPreferencesStorage: com.google.gson.Gson gson
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
zendesk.chat.ChatEngineModule$2: ChatEngineModule$2(zendesk.messaging.components.CompositeActionListener)
zendesk.chat.PathValueSender: java.util.Queue requestQueue
zendesk.chat.SendCallbackManager: long ACK_RECEIVE_TIMEOUT
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
zendesk.chat.R$dimen: int compat_button_inset_vertical_material
zendesk.chat.DeliveryStatus
zendesk.chat.DnModels$LiveChat: zendesk.chat.DnModels$Profile getProfile()
zendesk.chat.ChatConfiguration$Builder
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
kotlinx.coroutines.scheduling.TaskMode: kotlinx.coroutines.scheduling.TaskMode valueOf(java.lang.String)
zendesk.chat.ChatObserverFactory$4: int[] $SwitchMap$zendesk$chat$ChatMenuAction
zendesk.chat.ZendeskProfileProvider: void removeVisitorTags(java.util.List,com.zendesk.service.ZendeskCallback)
zendesk.chat.ZendeskChatProvider$1: ZendeskChatProvider$1(zendesk.chat.ZendeskChatProvider,com.zendesk.service.ZendeskCallback)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
zendesk.chat.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
zendesk.chat.R$styleable: int View_theme
zendesk.chat.BaseModule: java.util.concurrent.ScheduledExecutorService scheduledExecutorService()
zendesk.chat.R$color: int notification_action_color_filter
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
zendesk.chat.R$attr: int submitBackground
zendesk.chat.DnModels$Department$Status: DnModels$Department$Status(java.lang.String,int)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] values()
zendesk.chat.ChatModel: zendesk.chat.ConnectionProvider connectionProvider
zendesk.chat.OkHttpWebSocket$1: void onOpen(okhttp3.WebSocket,okhttp3.Response)
zendesk.chat.TextField: java.util.List getMessagingItems(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_connectionProvider: DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_connectionProvider(zendesk.chat.ChatProvidersComponent)
zendesk.chat.ChatSettings: java.util.Set allowedFileTypes
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
zendesk.chat.R$style: int TextAppearance_AppCompat_Large
zendesk.chat.EmailInputValidator_Factory: zendesk.chat.EmailInputValidator newInstance(zendesk.chat.ChatStringProvider)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.google.android.gms.internal.measurement.zzcd$zzg: int zzag
zendesk.chat.DefaultChatSession$10: zendesk.chat.DefaultChatSession this$0
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String source
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatEngineModule_ChatFormStageFactory: javax.inject.Provider chatFormDriverProvider
androidx.appcompat.widget.SearchView: int getPreferredHeight()
zendesk.chat.ChatParticipant: zendesk.chat.ChatParticipant AGENT
zendesk.chat.VisitorInfo$Builder: zendesk.chat.VisitorInfo$Builder withName(java.lang.String)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_cacheManager: zendesk.chat.ChatProvidersComponent chatProvidersComponent
zendesk.chat.ConnectionStatus: zendesk.chat.ConnectionStatus valueOf(java.lang.String)
zendesk.chat.ZendeskConnectionProvider: void disconnect()
zendesk.chat.FormField: java.lang.String SKIP_OPTION_ID
zendesk.chat.MessageIdGenerator: java.lang.String LOG_TAG
zendesk.chat.Connection$1: zendesk.chat.Connection this$0
zendesk.chat.R$dimen: int zch_avatar_size
com.squareup.picasso.MemoryPolicy: com.squareup.picasso.MemoryPolicy[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzw)
zendesk.chat.R$drawable: int notification_template_icon_bg
zendesk.chat.DaggerChatSdkComponent$Builder: DaggerChatSdkComponent$Builder()
zendesk.chat.AccountProvider: void getAccount(com.zendesk.service.ZendeskCallback)
zendesk.chat.ZendeskConnectionProvider_Factory: zendesk.chat.ZendeskConnectionProvider newInstance(java.lang.Object,java.lang.Object)
zendesk.chat.AuthenticationStorage: zendesk.chat.AuthenticationWrapper loadAuthenticationWrapper()
zendesk.chat.ChatEngineModule_ProvideBotMessageIdentifierFactory: zendesk.messaging.components.bot.BotMessageDispatcher$MessageIdentifier get()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
zendesk.chat.R$attr: int displayOptions
zendesk.chat.ChatEngineModule_ProvideIdProviderFactory: zendesk.chat.ChatEngineModule_ProvideIdProviderFactory create()
zendesk.chat.ChatStringProvider: java.lang.String nameFieldPrompt()
zendesk.chat.OfflineForm$Builder: java.lang.Long departmentId
zendesk.chat.ChatState: boolean isChatting
com.google.android.material.button.MaterialButton
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzii zzf
zendesk.chat.BaseModule_GetOkHttpClientFactory: okhttp3.OkHttpClient get()
zendesk.chat.ChatStringProvider
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$style: int Platform_ThemeOverlay_AppCompat
zendesk.chat.DefaultChatSession: DefaultChatSession(zendesk.chat.DataStore,zendesk.chat.Connection,java.util.Queue,zendesk.chat.PathValueSender,zendesk.chat.RequestSender,zendesk.chat.MessageIdGenerator)
com.google.android.material.transformation.TransformationChildLayout
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
zendesk.chat.DefaultChatSession: void observeVisitorInfo(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.ChatStringProvider: java.lang.String invalidEmailMessage()
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider engineStartedCompletionProvider
zendesk.chat.R$styleable: int MenuItem_android_menuCategory
zendesk.chat.R$color: int primary_text_disabled_material_dark
zendesk.chat.ChatEngineModule$3: void onAction(zendesk.messaging.Update)
zendesk.chat.DataStore: DataStore(zendesk.chat.DataNode)
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String getIdToken()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.measurement.zzbv$zza: boolean zzg
zendesk.chat.DefaultChatSocketConnection: void messageFrameReceived(zendesk.chat.Frames$Base)
zendesk.chat.DepartmentField: zendesk.messaging.MessagingItem$Option optionFromObject(java.lang.Object)
zendesk.chat.DefaultChatSession$1$1: zendesk.chat.DefaultChatSession$1 this$1
zendesk.chat.IdentityManager_Factory: java.lang.Object get()
zendesk.chat.R$style: int TextAppearance_AppCompat_Display2
zendesk.chat.R$attr: int textAppearancePopupMenuHeader
zendesk.chat.R$drawable: int abc_text_select_handle_right_mtrl_light
zendesk.chat.PersistentCookieJar
zendesk.chat.FileUploader$MeteredRequestBody
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String getUserAgent()
zendesk.chat.BuildConfig: java.lang.String VERSION_NAME
zendesk.chat.DnModels$Account: zendesk.chat.DnModels$Account$Status getStatus()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
com.google.android.gms.internal.measurement.zzcd$zzj: com.google.android.gms.internal.measurement.zzju zzg
zendesk.chat.ChatProvidersModule_ObservableChatSettingsFactory: zendesk.chat.ObservableData observableChatSettings()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
zendesk.chat.ChatProvider: boolean deleteFailedMessage(java.lang.String)
zendesk.chat.Connection: zendesk.chat.ConnectionStateMachine access$000(zendesk.chat.Connection)
zendesk.chat.Chat: java.lang.String SDK_VARIANT
zendesk.chat.ChatConfiguration: boolean preChatFormEnabled
zendesk.chat.FileUploader
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
zendesk.chat.IdentityManager$IdentityResetCompletion: boolean access$302(zendesk.chat.IdentityManager$IdentityResetCompletion,boolean)
zendesk.chat.R$style: int Widget_AppCompat_PopupWindow
zendesk.chat.ChatSessionStatus: ChatSessionStatus(java.lang.String,int)
zendesk.chat.ChatLogMapper: zendesk.messaging.MessagingItem convertMemberLeave(zendesk.chat.ChatLog)
zendesk.chat.JwtAuthenticator$JwtCompletion: void onTokenLoaded(java.lang.String)
zendesk.chat.R$drawable: int abc_text_select_handle_left_mtrl_light
com.google.android.material.floatingactionbutton.FloatingActionButton
zendesk.chat.FileUploader$1: void onResponse(okhttp3.Call,okhttp3.Response)
zendesk.chat.R$dimen: int tooltip_y_offset_non_touch
zendesk.chat.DeliveryStatusMonitor: DeliveryStatusMonitor()
zendesk.chat.ZendeskChatProvider_Factory: zendesk.chat.ZendeskChatProvider newInstance(java.lang.Object,java.lang.Object,zendesk.chat.ObservableData,zendesk.chat.ObservableData,java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
zendesk.chat.ChatEngine$1
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
zendesk.chat.R$style: int TextAppearance_AppCompat_Title_Inverse
zendesk.chat.ChatMenuAction: ChatMenuAction(java.lang.String,int)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
zendesk.chat.R$styleable: int MenuItem_actionViewClass
zendesk.chat.ChatEngine$3: zendesk.chat.ChatEngine this$0
zendesk.chat.PayloadAnonymousVisitorLogin: boolean isCookieLaw()
zendesk.chat.PathValue: java.lang.Object value
zendesk.chat.R$styleable: int Toolbar_subtitle
zendesk.chat.DefaultChatSocketConnection: void disconnect()
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
zendesk.chat.ZendeskAccountProvider_Factory: zendesk.chat.ZendeskAccountProvider_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.SendCallbackManager$1: void run()
zendesk.chat.R$attr: int suggestionRowLayout
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
zendesk.chat.FileUploader: int PORT
zendesk.chat.ChatBotMessagingItems_Factory: zendesk.chat.ChatBotMessagingItems_Factory create()
zendesk.chat.R$id: int top
zendesk.chat.R$attr: int actionBarSize
zendesk.belvedere.FixedWidthImageView
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method invoke()
zendesk.chat.CompletionCallback
zendesk.chat.DnModels$ChatLog: java.lang.Boolean unverified
zendesk.chat.ChatEngine$4: ChatEngine$4(zendesk.chat.ChatEngine,zendesk.messaging.Event$DialogItemClicked)
zendesk.chat.MainThreadPoster_Factory
zendesk.chat.BaseModule_GsonFactory: com.google.gson.Gson get()
zendesk.chat.Agent: java.lang.String getDisplayName()
zendesk.chat.R$style: int Base_Widget_AppCompat_ListView
zendesk.chat.ChatProvidersModule
zendesk.chat.R$id: int textSpacerNoButtons
zendesk.chat.DataNode: zendesk.chat.ObservationToken observe(java.util.List,java.lang.Class,zendesk.chat.Observer)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
zendesk.chat.OptionSelectField: java.lang.String messagePrompt
zendesk.chat.ChatObserverFactory$3: void update(zendesk.chat.ConnectionStatus)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
zendesk.chat.DefaultChatSession$8
zendesk.chat.FrameMapper: com.google.gson.Gson gson
zendesk.chat.DeliveryStatusMonitor: zendesk.chat.DeliveryStatusMonitor install(zendesk.chat.DataNode)
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.lifecycle.ProcessLifecycleOwnerInitializer: ProcessLifecycleOwnerInitializer()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
io.flutter.view.AccessibilityViewEmbedder
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
zendesk.chat.ZendeskAccountProvider: zendesk.chat.ObservableData observableAccount
zendesk.chat.DnModels$Agent: java.lang.String getDisplayName()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
zendesk.chat.ChatModel_Factory: javax.inject.Provider chatConnectionSupervisorProvider
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
zendesk.chat.EmailInputValidator_Factory: java.lang.Object get()
zendesk.chat.ConnectionProvider
zendesk.chat.R$attr: R$attr()
zendesk.chat.R$attr: int arrowShaftLength
zendesk.chat.DnModels$Channel: java.lang.Boolean chatting
zendesk.chat.ChatVisitorClient$Builder: java.lang.String sdkName
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
zendesk.chat.DefaultChatSession$11: java.lang.String val$pushToken
zendesk.chat.DefaultChatSession: void addVisitorTags(java.util.List,com.zendesk.service.ZendeskCallback)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
zendesk.chat.R$styleable: int AppCompatTheme_dropDownListViewStyle
zendesk.chat.R$style: int TextAppearance_Compat_Notification_Info
zendesk.chat.R$attr: int subtitleTextAppearance
zendesk.chat.MessageAck: zendesk.chat.MessageAck$Status getStatus()
zendesk.chat.R$styleable: int CoordinatorLayout_Layout_layout_anchor
zendesk.chat.R$styleable: int Toolbar_logo
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
zendesk.chat.R$attr: int layout_behavior
zendesk.chat.IdentityManager$IdentityResetCompletion: boolean hasUnregistered
zendesk.chat.R$style: int Base_Animation_AppCompat_Dialog
zendesk.chat.Connection: void update(java.lang.Object)
androidx.lifecycle.SingleGeneratedAdapterObserver
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
zendesk.chat.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
zendesk.chat.DefaultChatSession$8: void run()
zendesk.chat.TextField
zendesk.chat.ChatLogBlacklister: void blacklist(zendesk.chat.ChatLog)
zendesk.chat.DefaultChatSession$10: zendesk.chat.OfflineForm val$offlineForm
zendesk.chat.R$string: int zch_chat_comment_acknowledgement
zendesk.chat.AndroidModule_V1StorageFactory: zendesk.chat.AndroidModule_V1StorageFactory create(javax.inject.Provider,javax.inject.Provider)
zendesk.messaging.ui.AttachmentsIndicator: void setAttachmentsCount(int)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
zendesk.chat.RequestSender: void update(java.lang.Object)
com.google.android.gms.internal.measurement.zzbv$zzf: com.google.android.gms.internal.measurement.zzbv$zzf zzh
zendesk.chat.DefaultChatSession$21: DefaultChatSession$21(com.zendesk.service.ZendeskCallback,java.lang.String)
zendesk.chat.TimerModule_TimerFactoryFactory
zendesk.chat.ChatConfiguration: boolean isTranscriptEnabled()
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
zendesk.chat.ZendeskChatProvider: ZendeskChatProvider(zendesk.chat.ChatSessionManager,zendesk.chat.MainThreadPoster,zendesk.chat.ObservableData,zendesk.chat.ObservableData,zendesk.chat.ChatService,zendesk.chat.ChatProvidersStorage,zendesk.chat.ChatConfig)
zendesk.chat.SendCallbackManager: java.util.Map access$000(zendesk.chat.SendCallbackManager)
zendesk.chat.ChatStateStore: java.util.Map remoteLogs
zendesk.chat.ChatFormDriver$1: ChatFormDriver$1(zendesk.chat.ChatFormDriver,zendesk.chat.ChatFormStage$PreChatFormCompletion,zendesk.chat.ChatContext,java.util.List)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
zendesk.chat.PersistentCookieJar$1
zendesk.chat.VisitorInfo$Builder: java.lang.String name
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
zendesk.chat.R$styleable: int AppCompatTextView_drawableBottomCompat
zendesk.chat.ChatState: zendesk.chat.ChatSessionStatus getChatSessionStatus()
zendesk.chat.ChatFormDriver: zendesk.messaging.components.IdProvider idProvider
zendesk.chat.R$styleable: int GradientColor_android_endY
zendesk.chat.DnModels$Connection$Status: DnModels$Connection$Status(java.lang.String,int)
zendesk.chat.R$styleable: int SearchView_submitBackground
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzig zzar
zendesk.chat.OkHttpWebSocket: zendesk.chat.WebSocket$WebSocketListener listener
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
zendesk.chat.DataStore: zendesk.chat.ObservableData observableProfile
com.google.android.gms.internal.measurement.zzca$zzb: int zzf
zendesk.chat.ChatEngine: zendesk.chat.ChatProvider chatProvider
zendesk.chat.R$styleable: int FontFamilyFont_android_fontStyle
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
zendesk.chat.ChatConnectionSupervisor_Factory: javax.inject.Provider lifecycleOwnerProvider
zendesk.chat.ChatModel: javax.inject.Provider botMessagingItemProvider
androidx.appcompat.widget.Toolbar: int getPopupTheme()
zendesk.chat.BaseModule_GetHttpLoggingInterceptorFactory: BaseModule_GetHttpLoggingInterceptorFactory()
com.google.android.gms.internal.measurement.zzcd$zze: java.lang.String zze
zendesk.chat.R$attr: int layout_dodgeInsetEdges
zendesk.chat.ChatLog: zendesk.chat.ChatLog$Type type
zendesk.chat.ChatForm: java.util.List filterOnline(java.util.List)
zendesk.chat.ZendeskPushNotificationsProvider_Factory: ZendeskPushNotificationsProvider_Factory(javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ChatStringProvider: java.lang.String offlineFormCompletionAcknowledgement()
zendesk.chat.R$dimen: int abc_control_inset_material
zendesk.chat.DefaultChatSession: void sendTyping(boolean)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
zendesk.chat.R$styleable: int[] ListPopupWindow
zendesk.messaging.ui.InputBox: InputBox(android.content.Context,android.util.AttributeSet)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
zendesk.chat.R$style: int Base_Widget_AppCompat_ImageButton
zendesk.chat.ChatEngine_Factory: zendesk.chat.ChatEngine newInstance(zendesk.chat.ConnectionProvider,zendesk.chat.ChatProvider,zendesk.chat.ProfileProvider,zendesk.chat.ChatStringProvider,zendesk.messaging.components.CompositeActionListener,zendesk.messaging.components.CompositeActionListener,java.lang.Object,java.lang.Object,zendesk.chat.ObservableData,java.lang.Object,java.lang.Object,zendesk.chat.ObservableData)
zendesk.chat.ZendeskProfileProvider_Factory: javax.inject.Provider chatSessionManagerProvider
zendesk.chat.PathUpdate: com.google.gson.JsonObject getUpdate()
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_SearchResult
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
zendesk.chat.FileUploader$MeteredRequestBody: java.lang.String uploadId
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String getAppId()
zendesk.chat.R$styleable: int[] ButtonBarLayout
zendesk.chat.DnModels$Account$Status: zendesk.chat.DnModels$Account$Status ONLINE
zendesk.chat.R$style: int TextAppearance_AppCompat_Subhead
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
zendesk.chat.R$styleable: int MenuItem_android_checked
zendesk.chat.MachineIdStorage$InMemory: java.lang.String machineId
zendesk.chat.R$string: int zch_offline_message
zendesk.chat.ChatFormDriver_Factory: ChatFormDriver_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.R$drawable: int abc_popup_background_mtrl_mult
zendesk.chat.WebSocket: void disconnect()
zendesk.chat.R$attr: int trackTint
zendesk.chat.DefaultChatSession: void sendVisitorPath(zendesk.chat.VisitorPath,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
zendesk.chat.R$string: int zch_pre_chat_message_acknowledgement
zendesk.chat.DeliveryStatusMonitor$Listener: void onDeliveryStatusChanged(zendesk.chat.DeliveryStatus)
zendesk.chat.R$style: int Widget_AppCompat_Button_Colored
zendesk.chat.ChatModel_Factory: javax.inject.Provider observableEngineStatusProvider
zendesk.chat.R$styleable: int AppCompatTheme_alertDialogStyle
zendesk.chat.ChatLogMapper_Factory
com.google.android.gms.internal.measurement.zzbv$zzb: int zzd
zendesk.chat.NetworkConnectivityProvider$2$2: void run()
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
zendesk.chat.DefaultChatSession$11: zendesk.chat.DefaultChatSession this$0
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Tooltip
zendesk.chat.DeliveryStatus$1: zendesk.chat.DeliveryStatus val$deliveryStatus
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
zendesk.chat.R$string: int zch_chat_comment_composer_hint
com.google.android.material.transformation.ExpandableBehavior
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.ChatVisitorClient$Builder withScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)
zendesk.chat.Connection: zendesk.chat.NetworkConnectivity access$500(zendesk.chat.Connection)
zendesk.chat.VisitorPath: java.lang.String title
zendesk.chat.R$styleable: int GradientColor_android_centerColor
zendesk.chat.JwtAuthenticator: void getToken(zendesk.chat.JwtAuthenticator$JwtCompletion)
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus DELIVERED
zendesk.chat.DeliveryStatus: int statusCode
zendesk.chat.DefaultChatStringProvider: java.lang.String invalidEmailMessage()
zendesk.chat.IdentityManager$IdentityResetCompletion: com.zendesk.service.ZendeskCallback endChatCallback
zendesk.chat.ChatProvidersModule_ObservableVisitorInfoFactory: ChatProvidersModule_ObservableVisitorInfoFactory()
okhttp3.WebSocketListener: void onClosed(okhttp3.WebSocket,int,java.lang.String)
zendesk.chat.DeliveryStatusMonitor$1: zendesk.chat.DeliveryStatusMonitor val$deliveryStatusMonitor
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzii zzi
zendesk.chat.DataStore$1: DataStore$1(zendesk.chat.DataStore)
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.ChatVisitorClient$Builder withBaseUrl(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
zendesk.chat.DnModels$Channel: java.lang.Long departmentId
zendesk.chat.DnModels$ChatLog: boolean equals(java.lang.Object)
zendesk.chat.R$styleable: int CoordinatorLayout_Layout_layout_keyline
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.ZendeskChatProvider: zendesk.chat.ObservableData observableChatState
zendesk.chat.ChatSession: void sendVisitorPath(zendesk.chat.VisitorPath,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$styleable: int Toolbar_contentInsetEnd
zendesk.chat.DnUpdateModels$ChatRatingValue: zendesk.chat.ChatRating chatRating
zendesk.chat.ChatEngine: zendesk.messaging.components.CompositeActionListener updateActionListener
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
zendesk.chat.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
zendesk.chat.R$dimen: int abc_dialog_fixed_width_minor
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.ChatConfiguration$Builder withPhoneFieldStatus(zendesk.chat.PreChatFormFieldStatus)
zendesk.chat.R$drawable: int abc_list_divider_material
com.google.android.gms.internal.measurement.zzbv$zza: boolean zzh
zendesk.chat.R$styleable: int SearchView_goIcon
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
zendesk.chat.MainThreadPoster$2$2: MainThreadPoster$2$2(zendesk.chat.MainThreadPoster$2,com.zendesk.service.ErrorResponse)
zendesk.messaging.ui.ResponseOptionsView
zendesk.chat.R$layout: int select_dialog_singlechoice_material
zendesk.chat.DefaultChatSession: void setDepartment(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.DnModels$ChatLog$Attachment: java.lang.String type
zendesk.chat.DataNode: void updateBranches()
zendesk.chat.R$color: int abc_btn_colored_text_material
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
zendesk.chat.ChatEngine$1: zendesk.messaging.AgentDetails val$agentDetails
zendesk.chat.Form: java.util.List getFields()
zendesk.chat.ChatConfiguration$1: int[] $SwitchMap$zendesk$chat$FormField$Status
zendesk.chat.IdentityManager_Factory: javax.inject.Provider observableJwtAuthenticatorProvider
zendesk.chat.ChatConfig: java.lang.String getAppId()
zendesk.chat.R$style: int Widget_AppCompat_Light_ListPopupWindow
zendesk.chat.Department: int hashCode()
zendesk.chat.R$styleable: int StateListDrawable_android_exitFadeDuration
io.flutter.view.FlutterCallbackInformation
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
zendesk.chat.R$styleable: int MenuItem_android_enabled
zendesk.chat.R$styleable: int SwitchCompat_thumbTintMode
zendesk.chat.PushData$Type: zendesk.chat.PushData$Type MESSAGE
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$dimen
zendesk.chat.ChatProvider: void endChat(com.zendesk.service.ZendeskCallback)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
zendesk.chat.KeepAliveSignal: void startKeepAliveTimer(zendesk.chat.DefaultChatSocketConnection,long)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
zendesk.chat.ChatVisitorClient: java.lang.String sourceVersion
zendesk.chat.DefaultChatSession$15: void run()
zendesk.chat.ChatSocketClient: com.google.gson.Gson getGson()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$style: int Platform_AppCompat_Light
zendesk.chat.R$dimen: int abc_dropdownitem_text_padding_right
zendesk.chat.DnConverterUtils$1: int[] $SwitchMap$zendesk$chat$DnModels$ChatLog$Type
zendesk.chat.ZendeskProfileProvider: void trackVisitorPath(zendesk.chat.VisitorPath,com.zendesk.service.ZendeskCallback)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
zendesk.chat.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.google.android.gms.common.stats.WakeLockEvent: android.os.Parcelable$Creator CREATOR
zendesk.chat.AuthenticationWrapper: long timeFetched
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$id: int screen
zendesk.messaging.ui.LostConnectionBanner$State: zendesk.messaging.ui.LostConnectionBanner$State valueOf(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
zendesk.chat.BaseModule$1
zendesk.chat.ChatBotMessagingItems: ChatBotMessagingItems()
zendesk.chat.ChatProvidersModule: zendesk.chat.ChatProvider chatProvider(zendesk.chat.ZendeskChatProvider)
zendesk.chat.R$id: int contentPanel
zendesk.chat.ChatFormDriver_Factory: java.lang.Object get()
zendesk.chat.ChatStringProvider: java.lang.String expectCommentComposerHint()
zendesk.messaging.MessagingItem$Query$Status: zendesk.messaging.MessagingItem$Query$Status valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
zendesk.chat.DnUpdateModels$Tags
com.google.android.gms.internal.measurement.zzcd$zzb: com.google.android.gms.internal.measurement.zzcd$zzb zzf
zendesk.chat.Account: zendesk.chat.AccountStatus status
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
zendesk.chat.ChatEngineModule_ProvideBotMessageIdentifierFactory: zendesk.chat.ChatEngineModule_ProvideBotMessageIdentifierFactory create()
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
zendesk.chat.ChatState: zendesk.chat.ChatState rebuildWithChatStatus(zendesk.chat.ChatState,zendesk.chat.ChatSessionStatus)
zendesk.chat.ConnectionProvider: void connect()
zendesk.chat.R$style: int Theme_AppCompat_Dialog_MinWidth
zendesk.chat.PathUpdate: java.util.List getPath()
zendesk.chat.SendCallbackManager$Transmission: zendesk.chat.PathValue access$300(zendesk.chat.SendCallbackManager$Transmission)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
zendesk.chat.DefaultChatSession$16: java.lang.String val$note
zendesk.chat.PushNotificationsProvider
zendesk.chat.ChatStatusCheckStage$ChatEndedCompletion: void onChatEnded(zendesk.chat.ChatContext)
com.google.android.gms.measurement.module.Analytics: com.google.android.gms.measurement.module.Analytics getInstance(android.content.Context)
zendesk.chat.PersistentCookieJar: java.lang.String getStorageEntryKey(okhttp3.HttpUrl)
zendesk.chat.R$string: int zch_chat_welcome_message_handover
zendesk.chat.R$attr: int textColorSearchUrl
zendesk.chat.DeliveryStatusMonitor$1: DeliveryStatusMonitor$1(zendesk.chat.DeliveryStatusMonitor)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
zendesk.chat.R$id: int icon
zendesk.chat.DataStore$1: zendesk.chat.DataStore this$0
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus access$802(zendesk.chat.ChatConfiguration$Builder,zendesk.chat.PreChatFormFieldStatus)
zendesk.chat.DnModels$ChatLog: zendesk.chat.ChatRating rating
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
zendesk.chat.BaseModule: int THREAD_POOL_SIZE
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
zendesk.chat.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.google.android.material.chip.Chip: void setLines(int)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
zendesk.chat.R$bool
com.google.android.material.chip.Chip: void setCloseIconSize(float)
androidx.recyclerview.widget.GridLayoutManager
zendesk.chat.DnModels$Profile: int hashCode()
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
zendesk.chat.ConnectionStatus
zendesk.chat.DefaultChatSession$18
zendesk.chat.R$attr: int actionBarDivider
zendesk.chat.DefaultChatSession$17: DefaultChatSession$17(zendesk.chat.DefaultChatSession,zendesk.chat.ChatStateStore,long,java.io.File,com.zendesk.service.ZendeskCallback,zendesk.chat.ChatLog$AttachmentMessage)
zendesk.messaging.ui.MessagePopUpHelper$Option: zendesk.messaging.ui.MessagePopUpHelper$Option[] values()
zendesk.chat.Department: java.lang.String name
com.google.android.material.chip.Chip: float getChipMinHeight()
zendesk.belvedere.SelectableView
zendesk.chat.R$styleable: int SwitchCompat_trackTint
zendesk.chat.ChatConfiguration$Builder: boolean transcriptEnabled
zendesk.chat.ZendeskChatProvider: zendesk.chat.ChatState getChatState()
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object invoke()
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
zendesk.chat.AccountProvider
zendesk.chat.ObservableData: void observe(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.MainThreadPoster$4$1: java.lang.String val$chatLogId
zendesk.chat.R$style: int TextAppearance_AppCompat_Large_Inverse
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
zendesk.chat.DefaultChatSession$1: DefaultChatSession$1(zendesk.chat.DefaultChatSession,com.zendesk.service.ZendeskCallback)
zendesk.chat.DefaultChatSession: void setVisitorInfo(zendesk.chat.VisitorInfo,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatObserverFactory_Factory: javax.inject.Provider chatLogMapperProvider
zendesk.chat.ChatEngine_Factory: javax.inject.Provider chatFormDriverProvider
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.ChatConfiguration$Builder withOfflineFormEnabled(boolean)
com.google.android.gms.internal.measurement.zzca$zza: com.google.android.gms.internal.measurement.zzju zzi
zendesk.chat.ChatStateStore: void refreshState()
zendesk.chat.BaseModule_ScheduledExecutorServiceFactory: zendesk.chat.BaseModule_ScheduledExecutorServiceFactory INSTANCE
zendesk.chat.VisitorInfo$Builder: java.lang.String email
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
zendesk.chat.ZendeskSettingsProvider_Factory
zendesk.chat.VisitorPath: java.lang.String getTitle()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.ChatContext: zendesk.chat.ChatConfiguration chatConfiguration
zendesk.chat.R$attr: int lineHeight
com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)
zendesk.chat.R$dimen: int abc_alert_dialog_button_bar_height
zendesk.chat.ObservableData$1: zendesk.chat.ObservableData this$0
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
zendesk.chat.ChatEngine$2: void onAction(zendesk.messaging.Update)
zendesk.chat.MainThreadPoster$2: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.DnModels$ChatLog: java.lang.String displayName
zendesk.chat.R$style: int Base_ThemeOverlay_AppCompat_Light
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
zendesk.chat.DnUpdateModels$Chatting: DnUpdateModels$Chatting(boolean,zendesk.chat.DnUpdateModels$1)
zendesk.chat.ChatObserverFactory: java.util.Map connectionStateMappings
zendesk.chat.R$styleable: int ActionBar_contentInsetLeft
zendesk.chat.R$style: int Widget_AppCompat_SeekBar_Discrete
zendesk.chat.DefaultChatStringProvider_Factory
zendesk.messaging.ui.MessagingCellPropsFactory$InteractionType: zendesk.messaging.ui.MessagingCellPropsFactory$InteractionType valueOf(java.lang.String)
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.ChatVisitorClient$Builder withNetworkConnectivity(zendesk.chat.NetworkConnectivity)
zendesk.chat.ChatConversationOngoingChecker_Factory: zendesk.chat.ChatConversationOngoingChecker_Factory create(javax.inject.Provider)
zendesk.chat.R$styleable: int AnimatedStateListDrawableItem_android_drawable
zendesk.chat.R$style: int Theme_AppCompat_DayNight_NoActionBar
zendesk.chat.ChatProvidersModule: zendesk.chat.ProfileProvider profileProvider(zendesk.chat.ZendeskProfileProvider)
zendesk.chat.ChatVisitorClient$Builder: okhttp3.OkHttpClient okHttpClient
zendesk.chat.ChatEngineModule_GetChatAgentAvailabilityStageFactory: zendesk.chat.ChatAgentAvailabilityStage getChatAgentAvailabilityStage(zendesk.chat.AccountProvider,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
zendesk.chat.R$styleable: int ActionBar_titleTextStyle
zendesk.chat.DnModels$Channel: java.lang.Long getDepartmentId()
zendesk.chat.PathValueSender$Request: com.zendesk.service.ZendeskCallback callback
zendesk.chat.VisitorInfo: java.lang.String getName()
zendesk.chat.R$drawable: int notification_bg_normal_pressed
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
zendesk.chat.BaseModule_RetrofitFactory: retrofit2.Retrofit get()
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
zendesk.chat.ChatSessionManager$1
zendesk.chat.R$style: int Base_Theme_AppCompat_CompactMenu
zendesk.chat.DnModels$Profile: java.lang.String userId
zendesk.chat.IdentityManager$QueueItem: IdentityManager$QueueItem(zendesk.chat.JwtAuthenticator,zendesk.chat.CompletionCallback)
zendesk.chat.ChatProvidersComponent: android.content.Context context()
zendesk.chat.ObservableData: void onActive()
zendesk.chat.DnModels$LiveChat: zendesk.chat.DnModels$Settings settings
zendesk.chat.OkHttpWebSocket: void send(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.R$styleable: int AppCompatTheme_imageButtonStyle
zendesk.chat.R$styleable: int AppCompatTheme_actionModePasteDrawable
zendesk.chat.ChatLogMapper: java.lang.String FOOTER_SYSTEM_MESSAGE_ID
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
zendesk.chat.ZendeskProfileProvider$1
zendesk.chat.R$color: int background_floating_material_dark
com.google.android.material.card.MaterialCardView: void setProgress(float)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
zendesk.chat.R$attr: int ratingBarStyleSmall
zendesk.chat.OfflineForm: java.lang.Long departmentId
zendesk.chat.R$style: int Widget_AppCompat_ListView
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzcd$zzf: com.google.android.gms.internal.measurement.zzcd$zzf zzd
com.google.firebase.iid.FirebaseInstanceIdReceiver
zendesk.chat.R$attr: int font
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.AnonymousLoginDetailsProvider access$400(zendesk.chat.JwtLoginDetailsProvider)
zendesk.chat.R$attr: int buttonGravity
zendesk.chat.ChatProvidersStorage_Factory: java.lang.Object get()
zendesk.chat.AndroidModule_V1StorageFactory: AndroidModule_V1StorageFactory(javax.inject.Provider,javax.inject.Provider)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
zendesk.chat.DnConverterUtils: zendesk.chat.DeliveryStatus deliveryStatus(zendesk.chat.ChatParticipant,zendesk.chat.DnModels$ChatLog)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.google.android.gms.common.annotation.KeepName
zendesk.chat.R$styleable: int[] GradientColor
zendesk.chat.R$style: int Widget_AppCompat_SeekBar
zendesk.chat.ChatEngineModule$3: void onAction(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
zendesk.chat.DnUpdateModels$RequestChat: boolean buttonClicked
zendesk.chat.WebSocket$WebSocketListener$WebSocketState: WebSocket$WebSocketListener$WebSocketState(java.lang.String,int)
zendesk.chat.ChatSessionManager_Factory: zendesk.chat.ChatSessionManager get()
zendesk.chat.ChatObserverFactory$2: zendesk.chat.ChatObserverFactory this$0
zendesk.chat.SendFileRequest: java.lang.String LOG_TAG
zendesk.chat.ChatProvidersComponent: zendesk.chat.ObservableData observableChatState()
zendesk.chat.WebSocket$WebSocketListener$WebSocketState
zendesk.chat.ChatForm: java.lang.String NAME_FIELD_ID
zendesk.chat.MachineIdStorage: java.lang.String loadMachineId()
com.google.android.gms.internal.measurement.zzbv$zzd: int zzc
zendesk.chat.R$styleable: int StateListDrawable_android_variablePadding
zendesk.chat.ObservableData: java.util.Set observers
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_identityManager: zendesk.chat.IdentityManager get()
zendesk.chat.ChatVisitorClient: zendesk.chat.MachineIdStorage machineIdStorage
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
zendesk.chat.ChatNetworkModule_ChatServiceFactory: zendesk.chat.ChatNetworkModule_ChatServiceFactory create(javax.inject.Provider)
zendesk.chat.DefaultChatSession$10: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.DataNode: com.google.gson.JsonElement getJsonBranchForPath(com.google.gson.JsonElement,java.util.List)
zendesk.chat.DefaultChatStringProvider: android.content.Context context
zendesk.chat.R$id: int expand_activities_button
zendesk.chat.ZendeskConnectionProvider: zendesk.chat.ObservableData observableConnectionState
com.google.android.gms.internal.measurement.zzhz: java.util.Map zzd
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Body1
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
zendesk.chat.DnConverterUtils: zendesk.chat.ChatLog$AttachmentMessage attachmentMessage(long,java.io.File,zendesk.chat.DataStore,zendesk.chat.DeliveryStatus)
zendesk.chat.R$styleable: int AppCompatTextView_textLocale
okhttp3.RequestBody: okhttp3.MediaType contentType()
zendesk.chat.KeepAliveSignal$PingRunnable: zendesk.chat.DefaultChatSocketConnection connection
zendesk.chat.ChatConversationOngoingChecker$1
zendesk.chat.R$color: int background_material_dark
zendesk.chat.ZendeskConnectionProvider_Factory: javax.inject.Provider mainThreadPosterProvider
zendesk.chat.R$styleable: int AlertDialog_multiChoiceItemLayout
com.google.android.gms.internal.measurement.zzcd$zzg: long zzal
zendesk.chat.R$attr: int fontFamily
zendesk.chat.Tls12SocketFactory: Tls12SocketFactory(javax.net.ssl.SSLSocketFactory)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
zendesk.chat.ChatEngine: zendesk.messaging.Engine$TransferOptionDescription getTransferOptionDescription()
zendesk.chat.ZendeskConnectionProvider: void update(java.lang.Object)
zendesk.chat.ChatConnectionSupervisor: ChatConnectionSupervisor(androidx.lifecycle.LifecycleOwner,zendesk.chat.ConnectionProvider)
zendesk.chat.ChatConfiguration$1: int[] $SwitchMap$zendesk$chat$PreChatFormFieldStatus
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
zendesk.chat.Connection$2
zendesk.chat.R$styleable: int AlertDialog_listItemLayout
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzj
zendesk.chat.R$color: int abc_color_highlight_material
zendesk.chat.R$string: int zch_chat_rating_comment_prompt_message
zendesk.chat.R$styleable: int AppCompatTextView_drawableLeftCompat
zendesk.chat.R$color: int highlighted_text_material_light
zendesk.chat.ChatLog$Type: zendesk.chat.ChatLog$Type[] values()
com.google.android.material.textfield.MaterialAutoCompleteTextView
zendesk.chat.JwtLoginDetailsProvider: boolean access$502(zendesk.chat.JwtLoginDetailsProvider,boolean)
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue setNotes(java.lang.String)
com.google.android.material.internal.FlowLayout
zendesk.chat.R$attr: int windowMinWidthMajor
zendesk.chat.MainThreadPoster$3$1
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
zendesk.chat.ChatEngineModule$3: zendesk.messaging.components.CompositeActionListener val$observer
zendesk.chat.ChatModel$1: ChatModel$1(zendesk.chat.ChatModel,zendesk.chat.ObservationScope)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
zendesk.chat.ChatObserverFactory: zendesk.chat.ChatConnectionSupervisor chatConnectionSupervisor
com.google.android.material.chip.Chip: void setSingleLine(boolean)
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.CacheManager cacheManager()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
zendesk.chat.R$dimen: int abc_action_button_min_width_material
zendesk.chat.WebSocket: void connectTo(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
zendesk.chat.ChatService
com.google.android.gms.internal.measurement.zzbv$zzc: int zzc
zendesk.chat.AndroidUtils
zendesk.chat.R$styleable: int SearchView_suggestionRowLayout
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
zendesk.chat.R$style: int Base_ThemeOverlay_AppCompat
zendesk.chat.PayloadAnonymousVisitorLogin: PayloadAnonymousVisitorLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
zendesk.chat.DefaultChatSession: void observeConnectionStatus(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.BaseModule: okhttp3.logging.HttpLoggingInterceptor getHttpLoggingInterceptor()
androidx.appcompat.widget.ActivityChooserView$InnerLayout
zendesk.chat.R$integer: int abc_config_activityDefaultDur
zendesk.messaging.ui.MessageStatusView: void setStatus(zendesk.messaging.MessagingItem$Query$Status)
zendesk.chat.ProfileProvider: void setVisitorInfo(zendesk.chat.VisitorInfo,com.zendesk.service.ZendeskCallback)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
zendesk.chat.MainThreadPoster$3: zendesk.chat.CompletionCallback val$callback
zendesk.chat.R$styleable: int SwitchCompat_android_thumb
zendesk.chat.OfflineForm: java.lang.String departmentName
zendesk.chat.DnModels$ChatLog$Attachment$Metadata: boolean equals(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
zendesk.chat.ChatVisitorClient$Builder: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
zendesk.chat.ChatLog$Rating: ChatLog$Rating(java.lang.String,long,long,zendesk.chat.ChatParticipant,java.lang.String,java.lang.String,zendesk.chat.DeliveryStatus,zendesk.chat.ChatRating,zendesk.chat.ChatRating)
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider lifecycleOwnerProvider
zendesk.chat.MessageAck$Wrapper
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: java.util.List getResponseHeaders()
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String appId
zendesk.chat.AndroidModule_NetworkConnectivityFactory: zendesk.chat.NetworkConnectivity networkConnectivity(android.content.Context,android.os.Handler)
zendesk.chat.JwtLoginDetailsProvider$1
zendesk.chat.ChatLogMapper: java.util.List convertChatRating(zendesk.chat.ChatLog$Rating,zendesk.messaging.AgentDetails)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
zendesk.chat.DefaultChatSession$17: java.io.File val$file
zendesk.chat.ChatLog
com.google.android.gms.internal.measurement.zzbv$zzb: java.lang.String zze
zendesk.chat.R$attr: int windowNoTitle
zendesk.messaging.ui.AttachmentsIndicator: void setCounterVisible(boolean)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
zendesk.chat.R$string: int abc_shareactionprovider_share_with_application
androidx.appcompat.view.menu.ListMenuItemView
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
zendesk.messaging.ui.AttachmentsIndicator: int getAttachmentsCount()
zendesk.chat.Providers: zendesk.chat.ProfileProvider profileProvider()
com.google.android.gms.internal.measurement.zzca$zza: com.google.android.gms.internal.measurement.zzca$zza zzh
zendesk.chat.DataNode: com.google.gson.JsonObject rootValue
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.squareup.picasso.MemoryPolicy: com.squareup.picasso.MemoryPolicy valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
zendesk.chat.ChatLog$Rating
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: okhttp3.Response response
zendesk.chat.DefaultChatStringProvider: java.lang.String preChatFormIntroduction()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
zendesk.chat.ObservableData
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory: java.lang.Object get()
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.ZendeskAccountProvider getZendeskAccountProvider()
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: java.lang.String getUrl()
zendesk.chat.R$color: int zui_color_grey_400
zendesk.chat.Frames$Command: zendesk.chat.Frames$Command fromCommand(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzw)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzcd$zzi zzf
zendesk.chat.ChatSocketClient$Builder: java.util.concurrent.ScheduledExecutorService access$300(zendesk.chat.ChatSocketClient$Builder)
zendesk.chat.LoginDetailsProvider: void getLoginDetails(zendesk.chat.CompletionCallback)
zendesk.chat.ChatLog$Rating: zendesk.chat.ChatRating chatRating
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
zendesk.chat.DefaultChatSession$14: java.util.List val$tags
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory: zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzw)
zendesk.chat.Tls12SocketFactory: okhttp3.OkHttpClient$Builder enableTls12OnPreLollipop(okhttp3.OkHttpClient$Builder)
zendesk.chat.ProfileProvider: void removeVisitorTags(java.util.List,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatEngine$Status: zendesk.chat.ChatEngine$Status[] $VALUES
zendesk.chat.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
zendesk.chat.ZendeskSettingsProvider: ZendeskSettingsProvider(zendesk.chat.ChatSessionManager,zendesk.chat.MainThreadPoster,zendesk.chat.ObservableData)
zendesk.chat.ChatEngineModule_EngineStatusObservableFactory: zendesk.chat.ObservableData engineStatusObservable()
zendesk.chat.DaggerChatProvidersComponent$Builder: android.content.Context context
zendesk.chat.DataStore: zendesk.chat.ObservableData getObservableVisitorInfo()
zendesk.chat.Form: zendesk.chat.FormField getNextField()
zendesk.chat.LoginDetailsFactory
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
zendesk.chat.ChatPhase: ChatPhase(java.lang.String,int)
zendesk.chat.Form: zendesk.chat.FormField next()
zendesk.chat.KeepAliveSignal$PingRunnable: void run()
zendesk.chat.R$drawable: int notification_icon_background
zendesk.chat.ChatVisitorClient: java.lang.String USER_AGENT_FORMAT
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.R$styleable: int Toolbar_buttonGravity
zendesk.chat.R$color: int ripple_material_light
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
zendesk.chat.R$styleable: int AppCompatTheme_windowActionBarOverlay
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
okio.ForwardingSink: void write(okio.Buffer,long)
zendesk.chat.MainThreadPoster$2$1: void run()
zendesk.chat.ZendeskChatProvider_Factory: javax.inject.Provider chatConfigProvider
zendesk.chat.ZendeskAccountProvider$1
zendesk.chat.PreChatFormFieldStatus: zendesk.chat.PreChatFormFieldStatus HIDDEN
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
zendesk.chat.Attachment$Metadata: int getWidth()
zendesk.chat.SendCallbackManager: void onMessageSent(zendesk.chat.PathValue,com.zendesk.service.ZendeskCallback)
zendesk.chat.OfflineForm$Builder: zendesk.chat.OfflineForm$Builder withDepartment(long)
zendesk.messaging.ui.ResponseOptionSelectedView
zendesk.chat.DefaultChatSession$19: DefaultChatSession$19(zendesk.chat.DefaultChatSession,zendesk.chat.ChatStateStore,long,java.lang.String,com.zendesk.service.ZendeskCallback,zendesk.chat.ChatLog$Message)
zendesk.chat.ZendeskPushNotificationsProvider_Factory: javax.inject.Provider chatSessionManagerProvider
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String toString()
zendesk.chat.ChatProvidersModule_ObservableVisitorInfoFactory: java.lang.Object get()
zendesk.chat.ChatProvidersModule_ObservableJwtAuthenticatorFactory: zendesk.chat.ObservableData observableJwtAuthenticator()
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
zendesk.chat.ChatForm
zendesk.chat.BuildConfig: BuildConfig()
zendesk.chat.SendCallbackManager: java.lang.String ERROR_ACK_TIMEOUT
zendesk.chat.CacheManager_Factory: zendesk.chat.CacheManager_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ZendeskAccountProvider_Factory
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: java.lang.String getResponseBody()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
zendesk.chat.ChatEngineModule_ChatFormStageFactory: zendesk.chat.ChatFormStage chatFormStage(zendesk.chat.ConnectionProvider,java.lang.Object,java.lang.Object,zendesk.messaging.components.bot.BotMessageDispatcher,zendesk.messaging.components.DateProvider,zendesk.messaging.components.IdProvider,zendesk.chat.ChatStringProvider,java.lang.Object)
zendesk.chat.PersistentCookieJar: PersistentCookieJar(zendesk.chat.BaseStorage)
zendesk.chat.ChatProvidersModule_ObservableAccountFactory: ChatProvidersModule_ObservableAccountFactory()
zendesk.chat.ZendeskProfileProvider_Factory: zendesk.chat.ZendeskProfileProvider_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.Frames$Message
zendesk.chat.DefaultChatSession$20
zendesk.chat.R$string: int abc_menu_alt_shortcut_label
zendesk.chat.ChatStateStore: void update(zendesk.chat.DnModels$LiveChat)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
zendesk.chat.R$color: int material_deep_teal_200
zendesk.chat.DefaultChatStringProvider: java.lang.String transferString()
zendesk.chat.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.appcompat.widget.SearchView: int getImeOptions()
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
zendesk.chat.EmailInputValidator: boolean validate(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.google.android.gms.internal.measurement.zzcd$zzg: int zzaw
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
zendesk.chat.ChatProvidersComponent$Builder
zendesk.chat.ChatEngine$4: void onSuccess(java.lang.Void)
zendesk.chat.ChatObserverFactory: boolean access$100(java.util.List)
zendesk.chat.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
zendesk.chat.DefaultChatSession$6: void run()
androidx.cardview.widget.CardView: void setRadius(float)
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
zendesk.chat.PreChatFormFieldStatus: zendesk.chat.PreChatFormFieldStatus REQUIRED
zendesk.chat.R$dimen: int notification_main_column_padding_top
zendesk.chat.R$style: int TextAppearance_AppCompat
zendesk.chat.BaseModule
zendesk.chat.R$color: int material_grey_50
io.flutter.embedding.android.FlutterView
zendesk.chat.BaseModule_GetOkHttpClientFactory: okhttp3.OkHttpClient getOkHttpClient(okhttp3.logging.HttpLoggingInterceptor,java.lang.Object,java.util.concurrent.ScheduledExecutorService,java.lang.Object)
zendesk.chat.R$attr: int paddingTopNoTitle
zendesk.chat.ChatSessionManager: java.lang.String accountKey
zendesk.chat.ChatObserverFactory$2: void update(java.lang.Object)
zendesk.chat.FileUploader: zendesk.chat.DataNode dataNode
zendesk.chat.DnModels$FileSending: java.lang.Boolean enabled
androidx.fragment.app.DialogFragment: DialogFragment()
zendesk.chat.PayloadAnonymousVisitorLogin: boolean cookieLaw
zendesk.chat.R$styleable: int FontFamily_fontProviderCerts
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider observableChatSettingsProvider
zendesk.chat.DnUpdateModels$Tags$RemoveTags
zendesk.chat.PushData: long timestamp
zendesk.chat.ChatEngineModule_GetChatAgentAvailabilityStageFactory: javax.inject.Provider accountProvider
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String accountKey
zendesk.chat.ChatEngine$3: java.lang.String val$visitorEmail
zendesk.chat.ChatConversationOngoingChecker$1: zendesk.messaging.Engine$ConversationOnGoingCallback val$conversationOnGoingCallback
zendesk.chat.ChatEngineModule_GetChatAgentAvailabilityStageFactory: ChatEngineModule_GetChatAgentAvailabilityStageFactory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.R$style: int Widget_AppCompat_Spinner
zendesk.chat.Frames: java.lang.String LINE_SEPARATOR
zendesk.chat.ChatProvidersStorage_Factory: zendesk.chat.ChatProvidersStorage_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ChatSocketClient$Builder: com.google.gson.Gson access$400(zendesk.chat.ChatSocketClient$Builder)
zendesk.chat.R$style: int AlertDialog_AppCompat
zendesk.chat.DnModels$Channel: java.lang.Integer getQueuePosition()
zendesk.chat.R$styleable: int AppCompatSeekBar_android_thumb
zendesk.chat.ChatSettings: ChatSettings(boolean,java.util.Set,long)
zendesk.chat.DefaultChatSession: void removeVisitorTags(java.util.List,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
zendesk.chat.R$style: int Animation_AppCompat_Dialog
zendesk.messaging.ui.LostConnectionBanner$State: zendesk.messaging.ui.LostConnectionBanner$State[] values()
zendesk.chat.ChatProvider: void clearDepartment(com.zendesk.service.ZendeskCallback)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
zendesk.chat.ChatFormDriver: zendesk.chat.ChatStringProvider chatStringProvider
zendesk.chat.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
zendesk.chat.ChatConfiguration$Builder: boolean access$402(zendesk.chat.ChatConfiguration$Builder,boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
zendesk.chat.ChatObserverFactory: boolean hasNonTriggerMessage(java.util.List)
zendesk.chat.R$attr: int iconTintMode
zendesk.chat.ChatConversationOngoingChecker_Factory: ChatConversationOngoingChecker_Factory(javax.inject.Provider)
zendesk.chat.DnConverterUtils$1
zendesk.chat.R$attr: int controlBackground
zendesk.chat.R$drawable: int abc_spinner_mtrl_am_alpha
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
zendesk.chat.ChatEngineModule$1: java.lang.String getId(zendesk.messaging.MessagingItem)
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String getAccountKey()
com.google.android.material.textfield.TextInputEditText
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
zendesk.chat.DnUpdateModels$DepartmentPref
zendesk.chat.IdentityManager$IdentityResetCompletion: IdentityManager$IdentityResetCompletion(zendesk.chat.IdentityManager,zendesk.chat.ChatSession,zendesk.chat.CompletionCallback,zendesk.chat.JwtAuthenticator)
zendesk.chat.ChatEngineModule$1: ChatEngineModule$1()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.R$string: int zch_offline_form_introduction_message
zendesk.chat.ChatFormDriver_Factory: javax.inject.Provider chatStringProvider
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
zendesk.chat.R$styleable: int TextAppearance_android_fontFamily
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
zendesk.chat.R$attr: int windowActionModeOverlay
zendesk.chat.ChatSessionManager: zendesk.chat.VisitorPath initialVisitorPath
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzju zzi
zendesk.chat.ChatEngineModule_ProvideStateListenerFactory: zendesk.messaging.components.ActionListener get()
zendesk.chat.ChatConversationOngoingChecker: ChatConversationOngoingChecker(zendesk.chat.ChatProvider)
zendesk.chat.BaseModule_GetOkHttpClientFactory: javax.inject.Provider userAgentAndClientHeadersInterceptorProvider
zendesk.chat.ChatFormDriver: boolean isAwaitingInput()
zendesk.chat.RequestSender: zendesk.chat.FileUploader fileUploader
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
zendesk.chat.MainThreadPoster$4$1: MainThreadPoster$4$1(zendesk.chat.MainThreadPoster$4,java.lang.String,long,long)
zendesk.chat.DefaultChatSession$5: zendesk.chat.DefaultChatSession this$0
zendesk.chat.ChatLog$Rating: zendesk.chat.ChatRating getChatRating()
zendesk.chat.AnonymousLoginDetailsProvider$1: void update(java.lang.Object)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Display4
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
zendesk.chat.R$color: int material_blue_grey_900
zendesk.chat.ChatLog$Type: zendesk.chat.ChatLog$Type COMMENT
zendesk.chat.DnUpdateModels: java.util.List PATH_CHANNEL
zendesk.chat.R$style: int Theme_AppCompat_CompactMenu
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
zendesk.chat.R$id: int spacer
zendesk.chat.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
zendesk.chat.R$attr: int homeLayout
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.ChatVisitorClient$Builder withMachineIdStorage(zendesk.chat.MachineIdStorage)
zendesk.chat.DefaultChatSession: zendesk.chat.DataStore access$200(zendesk.chat.DefaultChatSession)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
zendesk.chat.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
zendesk.chat.ObservableData: boolean shouldNotifyObservers(java.lang.Object,java.lang.Object)
zendesk.chat.ChatProvidersModule_ObservableAccountFactory: zendesk.chat.ChatProvidersModule_ObservableAccountFactory create()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzbv$zzd zzh
zendesk.chat.MessageIdGenerator: void update(java.lang.Object)
zendesk.chat.DefaultChatSession: zendesk.chat.MessageIdGenerator messageIdGenerator
zendesk.chat.Connection: java.util.concurrent.atomic.AtomicReference access$400(zendesk.chat.Connection)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
zendesk.chat.Agent: java.lang.String getNick()
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String idToken
zendesk.chat.MainThreadPoster$1$1
zendesk.belvedere.FloatingActionMenu: FloatingActionMenu(android.content.Context,android.util.AttributeSet)
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String getAppId()
zendesk.chat.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
zendesk.chat.ChatNetworkModule: ChatNetworkModule()
com.google.android.material.chip.Chip: void setChipIconResource(int)
zendesk.chat.DnModels$ChatLog$Attachment: boolean equals(java.lang.Object)
zendesk.chat.DnUpdateModels$Tags$NewTags: DnUpdateModels$Tags$NewTags(java.util.List)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.DnModels$Agent: boolean isTyping
zendesk.chat.R$color: int abc_primary_text_material_dark
zendesk.chat.ChatSocketConnection$State
androidx.lifecycle.ReflectiveGenericLifecycleObserver
zendesk.chat.PathValueSender$Request: zendesk.chat.PathValue access$200(zendesk.chat.PathValueSender$Request)
zendesk.chat.ChatRating: zendesk.chat.ChatRating GOOD
zendesk.chat.DefaultChatSession$1$1: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.R$attr: int actionModeCopyDrawable
zendesk.chat.ChatLog$OptionsMessage: ChatLog$OptionsMessage(java.lang.String,long,long,zendesk.chat.ChatParticipant,java.lang.String,java.lang.String,zendesk.chat.DeliveryStatus,java.lang.String,java.util.List)
zendesk.chat.OkHttpWebSocket$1: void onMessage(okhttp3.WebSocket,java.lang.String)
com.google.android.gms.internal.measurement.zzu: zzu()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
zendesk.chat.ChatSdkComponent: zendesk.chat.ChatEngine chat()
com.google.android.gms.internal.measurement.zzck$zzb
zendesk.chat.ChatObserverFactory$1: boolean hasNonTriggerMessage
zendesk.chat.R$dimen: int abc_dialog_list_padding_top_no_title
zendesk.chat.MessageIdGenerator: MessageIdGenerator()
zendesk.chat.JwtLoginDetailsProvider: boolean hasAuthenticationToken(zendesk.chat.AuthenticationWrapper)
zendesk.chat.R$attr: int buttonStyleSmall
zendesk.chat.R$attr: int checkboxStyle
zendesk.chat.R$styleable: int[] SwitchCompat
zendesk.commonui.CacheFragment: CacheFragment()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_cacheManager: java.lang.Object get()
zendesk.messaging.MessagingActivity: MessagingActivity()
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.ChatConfiguration$Builder withPreChatFormEnabled(boolean)
com.google.android.material.transformation.FabTransformationBehavior
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
zendesk.chat.R$styleable: int AppCompatTextView_autoSizeMinTextSize
zendesk.chat.DeliveryStatusMonitor$Listener
zendesk.chat.R$dimen: int notification_small_icon_size_as_large
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
zendesk.chat.SendFileRequest: zendesk.chat.FileUploadListener fileUploadListener
zendesk.chat.DefaultChatSession: void requestChat()
com.google.android.gms.internal.measurement.zzbv$zzd: java.lang.String zzg
com.google.android.gms.internal.measurement.zzcd$zzk: double zzi
zendesk.chat.SharedPreferencesStorage: void clear()
zendesk.chat.ChatEngineModule_ProvideStateListenerFactory: javax.inject.Provider observerProvider
zendesk.chat.BaseModule_GsonFactory: com.google.gson.Gson gson()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
zendesk.chat.R$style: int Base_V23_Theme_AppCompat_Light
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
zendesk.chat.ZendeskSettingsProvider: void update(java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
zendesk.chat.Clock
zendesk.chat.Chat: zendesk.chat.VisitorPath VISITOR_PATH
zendesk.chat.Request: void execute()
zendesk.chat.VisitorActiveSignal: zendesk.chat.VisitorActiveSignal create(zendesk.chat.Connection,zendesk.chat.ConnectionStateMachine,java.util.concurrent.ScheduledExecutorService)
zendesk.chat.MessageAck$Status
zendesk.chat.R$styleable: int AppCompatTheme_textColorSearchUrl
zendesk.chat.R$attr: int thumbTextPadding
zendesk.chat.R$id: int normal
zendesk.chat.ChatModel: zendesk.chat.ChatProvider access$500(zendesk.chat.ChatModel)
zendesk.chat.OkHttpUtils
zendesk.chat.BaseModule_RetrofitFactory: java.lang.Object get()
zendesk.chat.DnModels$Connection: DnModels$Connection(zendesk.chat.DnModels$Connection$Status,java.lang.String,boolean)
zendesk.chat.TextField: boolean isComplete()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$styleable: int AppCompatTextView_drawableTintMode
com.zendesk.service.ErrorResponseAdapter: java.util.List getResponseHeaders()
zendesk.chat.ZendeskChatProvider_Factory: javax.inject.Provider mainThreadPosterProvider
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
zendesk.chat.DnModels$ChatLog$Attachment
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
android.support.v4.media.session.MediaSessionCompat$Token
zendesk.chat.R$styleable: int SwitchCompat_track
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider provideIdProvider
zendesk.chat.DnModels$Connection$Status: zendesk.chat.DnModels$Connection$Status[] $VALUES
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
com.google.android.material.transformation.FabTransformationScrimBehavior
androidx.media.AudioAttributesImplBaseParcelizer
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
zendesk.chat.R$styleable: int Toolbar_titleMarginStart
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.google.android.gms.internal.measurement.zzcd$zzk
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
zendesk.chat.ZendeskChatProvider: zendesk.chat.ChatLog$Message sendMessage(java.lang.String)
zendesk.chat.Frames$Command: zendesk.chat.Frames$Command NEW_CONNECTION
zendesk.chat.DefaultChatSession: boolean deleteFailedChatLog(java.lang.String)
zendesk.chat.R$color: int bright_foreground_disabled_material_dark
zendesk.chat.ChatProvidersStorage_Factory: javax.inject.Provider baseStorageProvider
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
zendesk.chat.ChatStatusCheckStage$1: void onSuccess(java.lang.Object)
zendesk.chat.R$styleable: int MenuItem_iconTint
zendesk.chat.R$styleable: int[] PopupWindowBackgroundState
com.google.android.gms.internal.measurement.zzcd$zzd: java.lang.String zzd
zendesk.chat.R$dimen: int abc_control_corner_material
zendesk.chat.DnUpdateModels$VisitorActive: DnUpdateModels$VisitorActive(long,zendesk.chat.DnUpdateModels$1)
androidx.appcompat.widget.AlertDialogLayout
zendesk.chat.provider.BuildConfig: boolean DEBUG
zendesk.chat.ZendeskConnectionProvider$1: ZendeskConnectionProvider$1(zendesk.chat.ZendeskConnectionProvider)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
zendesk.chat.MainThreadPoster$4: zendesk.chat.MainThreadPoster this$0
zendesk.chat.R$style: int Theme_AppCompat_Light_DarkActionBar
zendesk.chat.ChatConfiguration: zendesk.chat.FormField$Status departmentFieldStatus
zendesk.chat.ZendeskConnectionProvider_Factory
zendesk.chat.ChatEngineModule_ProvideUpdateActionListenerFactory: javax.inject.Provider observerProvider
zendesk.chat.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
zendesk.chat.NetworkConnectivityProvider$1: void onReceive(android.content.Context,android.content.Intent)
zendesk.messaging.ui.ActionOptionsView
zendesk.chat.R$styleable: int ViewStubCompat_android_layout
zendesk.messaging.DialogContent$Config: zendesk.messaging.DialogContent$Config[] values()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
zendesk.chat.ChatState: java.lang.String chatId
zendesk.chat.MessageAck
zendesk.chat.R$drawable: int abc_ic_star_half_black_36dp
zendesk.chat.DnUpdateModels$ChatCommentValue: DnUpdateModels$ChatCommentValue(java.lang.String)
zendesk.chat.FileUploader$MeteredRequestBody: void writeTo(okio.BufferedSink)
zendesk.chat.R$dimen: int highlight_alpha_material_dark
com.google.android.gms.internal.measurement.zzcd$zzc: int zzc
zendesk.chat.R$drawable: int abc_text_select_handle_left_mtrl_dark
zendesk.chat.DnModels$Profile: java.lang.String displayName
zendesk.chat.ChatConfiguration: zendesk.chat.FormField$Status emailFieldStatus
zendesk.chat.R$style: int Base_Widget_AppCompat_ListMenuView
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
zendesk.chat.Frames$Base: double getRemoteSmoothSkewedTransitTimeIn()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
zendesk.chat.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
zendesk.chat.MainThreadPoster: android.os.Handler mainHandler
zendesk.chat.ChatProvidersModule_ObservableChatSettingsFactory
com.google.android.gms.internal.measurement.zzcd$zzg: int zzah
zendesk.chat.ChatObserverFactory$2: ChatObserverFactory$2(zendesk.chat.ChatObserverFactory,zendesk.chat.ChatContext)
zendesk.chat.PreChatFormFieldStatus: zendesk.chat.PreChatFormFieldStatus OPTIONAL
zendesk.chat.ChatEngineModule: ChatEngineModule()
okhttp3.WebSocketListener: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
com.google.android.material.theme.MaterialComponentsViewInflater
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
zendesk.chat.ZendeskChatProvider: void setDepartment(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$styleable: int MenuItem_android_id
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
zendesk.chat.ChatStringProvider: java.lang.String requestTranscriptEmailText()
zendesk.chat.R$drawable: int abc_btn_radio_to_on_mtrl_015
androidx.appcompat.widget.SearchView: int getMaxWidth()
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.AuthenticationStorage authenticationStorage
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.google.android.gms.internal.measurement.zzca$zza: java.lang.String zzd
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
zendesk.chat.DefaultChatStringProvider: java.lang.String preChatFormWelcomeMessage()
zendesk.chat.BaseModule_GsonFactory: zendesk.chat.BaseModule_GsonFactory create()
zendesk.chat.R$attr: int textAllCaps
zendesk.chat.AndroidModule: AndroidModule()
zendesk.chat.R$attr: int fontProviderCerts
zendesk.chat.DaggerChatProvidersComponent: DaggerChatProvidersComponent(zendesk.chat.ChatConfig,android.content.Context)
com.google.android.gms.internal.measurement.zzcd$zzc: int zzh
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
zendesk.chat.PushData$Type: zendesk.chat.PushData$Type[] values()
zendesk.chat.PathValue: java.lang.String id
zendesk.chat.ChatEngineModule_ChatFormStageFactory: ChatEngineModule_ChatFormStageFactory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.PathUpdate$1: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)
zendesk.chat.WebSocket
zendesk.chat.ChatEngine: zendesk.chat.ChatBotMessagingItems access$000(zendesk.chat.ChatEngine)
zendesk.chat.R$dimen: int notification_right_icon_size
zendesk.chat.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
zendesk.chat.Agent: boolean isTyping
zendesk.chat.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
zendesk.chat.R$dimen: int abc_action_bar_stacked_tab_max_width
zendesk.chat.R$style: int Base_Widget_AppCompat_PopupMenu
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus FAILED_UNSUPPORTED_FILE_TYPE
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$attr: int fontProviderQuery
zendesk.chat.ZendeskAccountProvider$1: zendesk.chat.ZendeskAccountProvider this$0
zendesk.chat.ChatProvidersModule: zendesk.chat.ConnectionProvider connectionProvider(zendesk.chat.ZendeskConnectionProvider)
zendesk.chat.R$styleable: int RecycleListView_paddingBottomNoButtons
zendesk.chat.UserAgentAndClientHeadersInterceptor: java.lang.String version
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
zendesk.chat.R$integer: int status_bar_notification_info_maxnum
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
zendesk.chat.ChatObserverFactory$3: ChatObserverFactory$3(zendesk.chat.ChatObserverFactory,zendesk.chat.ChatContext)
zendesk.chat.ChatBotMessagingItems: void setBotMessagingItems(java.util.List)
zendesk.chat.ChatLogMapper_Factory: zendesk.chat.ChatLogMapper get()
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
zendesk.chat.ChatSession: void endChat(com.zendesk.service.ZendeskCallback)
io.flutter.embedding.android.FlutterSurfaceView
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
zendesk.chat.R$attr: int listLayout
zendesk.chat.MessageAck$Wrapper: zendesk.chat.MessageAck messageAck
zendesk.chat.DefaultChatSession$8: DefaultChatSession$8(zendesk.chat.DefaultChatSession)
com.google.common.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread
zendesk.chat.R$id: int icon_group
zendesk.chat.NetworkConnectivityProvider$2: void onLost(android.net.Network)
zendesk.chat.R$styleable: int Spinner_android_popupBackground
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
zendesk.chat.DefaultChatSession$12: void run()
zendesk.chat.Frames$Command: Frames$Command(java.lang.String,int,java.lang.String)
zendesk.chat.ChatObserverFactory$1: java.lang.String boundChatId
zendesk.chat.R$attr: int colorBackgroundFloating
zendesk.chat.ChatForm: ChatForm(java.util.List,java.lang.String,java.lang.String,java.lang.String)
zendesk.chat.ChatState: java.util.Map getAgentsByNick()
zendesk.chat.R$attr: int switchTextAppearance
zendesk.chat.PreChatFormFieldStatus: zendesk.chat.PreChatFormFieldStatus valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
zendesk.belvedere.ImageStream: ImageStream()
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.google.android.gms.internal.measurement.zzbv$zze: boolean zzi
zendesk.chat.OkHttpWebSocket: void disconnect()
zendesk.chat.NetworkConnectivityProvider$1: NetworkConnectivityProvider$1()
zendesk.chat.ChatFormStage$OfflineFormCompletion
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue appendNotes(java.lang.String)
zendesk.chat.R$color: int bright_foreground_inverse_material_dark
zendesk.chat.ChatLog$Comment: java.lang.String chatComment
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
zendesk.chat.ChatProvidersStorage_Factory
zendesk.chat.R$styleable: int[] StateListDrawableItem
zendesk.chat.Connection$1: void update(zendesk.chat.DnModels$Connection$Status)
zendesk.chat.R$attr: int contentInsetRight
zendesk.chat.ChatPhase: zendesk.chat.ChatPhase ACTIVE
zendesk.chat.R$drawable: int abc_textfield_search_material
zendesk.chat.WebSocket$WebSocketListener$WebSocketState: zendesk.chat.WebSocket$WebSocketListener$WebSocketState valueOf(java.lang.String)
zendesk.chat.PathUpdate: com.google.gson.JsonDeserializer GSON_DESERIALIZER
zendesk.chat.ChatConnectionSupervisor_Factory: ChatConnectionSupervisor_Factory(javax.inject.Provider,javax.inject.Provider)
zendesk.chat.VisitorPath: zendesk.chat.VisitorPath create(java.lang.String,java.lang.String)
zendesk.chat.R$color: int primary_material_light
zendesk.chat.DefaultChatSession$2: zendesk.chat.DefaultChatSession this$0
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
zendesk.chat.R$drawable: int abc_text_select_handle_middle_mtrl_dark
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
zendesk.chat.DnModels$Department$Status: zendesk.chat.DnModels$Department$Status[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue removeVisitorTags(java.util.List)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$style: int Widget_AppCompat_CompoundButton_CheckBox
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider retrofitProvider
zendesk.chat.ChatSettings: long getMaxFileSize()
zendesk.chat.ChatObserverFactory$1: void update(java.lang.Object)
zendesk.chat.ObservableData: void onInactive()
zendesk.chat.R$styleable: int AnimatedStateListDrawableCompat_android_dither
zendesk.chat.ZendeskPushNotificationsProvider: zendesk.chat.PushData processPushNotification(java.util.Map)
com.google.android.gms.internal.measurement.zzcd$zzd: long zze
com.google.android.gms.internal.measurement.zzae: android.os.Parcelable$Creator CREATOR
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_baseStorage: zendesk.chat.ChatProvidersComponent chatProvidersComponent
zendesk.chat.DefaultChatSession$1$1: void onSuccess(java.lang.Object)
zendesk.chat.WebSocket$WebSocketListener$WebSocketState: zendesk.chat.WebSocket$WebSocketListener$WebSocketState CONNECTING
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
zendesk.chat.DnModels$ChatLog$Attachment: java.lang.String mimeType
com.google.android.gms.internal.measurement.zzcd$zzc: java.lang.String zze
zendesk.chat.DnConverterUtils: zendesk.chat.ChatSettings chatSettings(zendesk.chat.DnModels$Settings)
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue chatComment(java.lang.String)
zendesk.chat.ChatSocketConnection: zendesk.chat.ChatSocketConnection$State getState()
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserPropertiesAs(java.lang.String,java.lang.String,java.lang.String,boolean)
zendesk.chat.ChatVisitorClient: zendesk.chat.NetworkConnectivity connectivity
zendesk.chat.ChatSessionManager: zendesk.chat.ObservableData observableAuthenticator
zendesk.chat.R$styleable: int ActionBar_backgroundStacked
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
zendesk.chat.R$dimen: int abc_action_bar_default_height_material
zendesk.chat.R$drawable: int abc_tab_indicator_material
androidx.fragment.app.Fragment: Fragment()
com.google.android.material.datepicker.MaterialCalendarGridView
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
zendesk.chat.R$dimen: int abc_edit_text_inset_bottom_material
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Inverse
com.google.android.gms.internal.measurement.zzbv$zza
zendesk.chat.DataNode: com.google.gson.JsonElement access$000(com.google.gson.JsonElement,java.util.List)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
zendesk.chat.MainThreadPoster$2$2: void run()
zendesk.chat.R$layout: int abc_alert_dialog_material
zendesk.chat.DnModels$Channel: java.util.Map log
zendesk.chat.AndroidModule: java.lang.String CHAT_V1_MACHINE_ID_STORAGE
zendesk.chat.ZendeskChatProvider$1: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.R$styleable: int DrawerArrowToggle_barLength
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
zendesk.chat.DnModels$Profile: boolean equals(java.lang.Object)
zendesk.chat.R$attr: int actionBarSplitStyle
zendesk.chat.R$attr: int actionBarItemBackground
zendesk.chat.R$attr: int titleTextStyle
zendesk.chat.R$styleable: int[] StateListDrawable
zendesk.chat.ChatLogMapper: java.util.List convert(zendesk.chat.ChatState,zendesk.messaging.AgentDetails)
zendesk.chat.ChatLogBlacklister: boolean isBlackListed(zendesk.chat.ChatLog)
zendesk.chat.ChatEngineModule_GetChatAgentAvailabilityStageFactory: javax.inject.Provider chatModelProvider
com.google.android.gms.internal.measurement.zzcd$zzg: long zzi
com.google.android.material.chip.Chip: void setCheckable(boolean)
zendesk.commonui.AlmostRealProgressBar$State: android.os.Parcelable$Creator CREATOR
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider gsonProvider
zendesk.messaging.ui.ArticlesResponseView: void setSuggestionBackgrounds(java.util.List)
zendesk.chat.DefaultChatSession$19: void onCompleted(zendesk.chat.DeliveryStatus)
zendesk.chat.DnModels$LiveChat: zendesk.chat.DnModels$Channel getChannel()
zendesk.chat.R$attr: int closeItemLayout
zendesk.chat.DefaultChatSession$19: zendesk.chat.ChatLog$Message val$chatMessage
zendesk.chat.EmailInputValidator
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
zendesk.chat.DnUpdateModels$Tags: DnUpdateModels$Tags()
zendesk.chat.R$attr: int tooltipText
zendesk.chat.R$attr: int subtitleTextColor
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzm
zendesk.chat.R$style: int Widget_AppCompat_ListPopupWindow
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
zendesk.belvedere.SelectableView: android.view.View getChild()
zendesk.chat.R$style: int TextAppearance_AppCompat_Headline
zendesk.chat.DefaultChatSession: zendesk.chat.DataStore dataStore
zendesk.chat.R$styleable: int AppCompatTheme_seekBarStyle
zendesk.chat.R$style: int Base_Widget_AppCompat_EditText
zendesk.chat.R$style: int TextAppearance_AppCompat_Subhead_Inverse
androidx.appcompat.widget.AppCompatImageButton
zendesk.chat.R$id: int text
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
zendesk.chat.R$style: int Theme_AppCompat_Light_Dialog
com.google.android.material.chip.Chip: float getTextStartPadding()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
zendesk.chat.PayloadAnonymousVisitorLogin
zendesk.chat.SendCallbackManager$1: zendesk.chat.PathValue val$pathValue
zendesk.chat.ChatSession: void observeConnectionStatus(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.R$style
zendesk.chat.AccountProvider: zendesk.chat.Account getAccount()
zendesk.chat.ChatProvidersModule: zendesk.chat.ObservableData observableAccount()
zendesk.chat.Providers: zendesk.chat.AccountProvider accountProvider()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
zendesk.chat.R$attr: int contentInsetStartWithNavigation
zendesk.chat.PayloadChatTimeout: long timeout
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
zendesk.chat.Frames$NewConnection: Frames$NewConnection(long,double,long,zendesk.chat.Frames$Command,long)
zendesk.chat.SendFileRequest: void execute()
zendesk.chat.R$drawable: int abc_text_select_handle_right_mtrl_dark
zendesk.chat.DefaultChatSession$4: java.lang.String val$transcriptEmail
zendesk.chat.DefaultChatSession$2: DefaultChatSession$2(zendesk.chat.DefaultChatSession,zendesk.chat.ChatRating,com.zendesk.service.ZendeskCallback)
zendesk.belvedere.KeyboardHelper: int getViewPortHeight()
zendesk.chat.ChatSocketClient$1: zendesk.chat.DefaultChatSocketConnection val$connection
zendesk.chat.R$dimen: int abc_search_view_preferred_width
zendesk.chat.ChatFormDriver_Factory: zendesk.chat.ChatFormDriver_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
zendesk.chat.ChatForm: zendesk.chat.TextField createPhoneFormField(zendesk.chat.FormField$Status,zendesk.chat.ChatStringProvider,zendesk.messaging.AgentDetails)
zendesk.chat.SendMessageRequest: void execute()
zendesk.chat.R$styleable: int FontFamilyFont_ttcIndex
zendesk.chat.ConnectionProvider: void observeConnectionStatus(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.DnModels$ChatLog: zendesk.chat.ChatRating newRating
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
zendesk.chat.ZendeskChatProvider_Factory: zendesk.chat.ZendeskChatProvider get()
zendesk.chat.ChatSocketConnection$State: zendesk.chat.ChatSocketConnection$State CONNECTING
zendesk.chat.ChatStatusCheckStage$ChatInitCompletion
zendesk.chat.PathUpdate$1: java.util.List parsePath(com.google.gson.JsonElement,com.google.gson.JsonDeserializationContext)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.SendFileRequest: zendesk.chat.CompletionCallback externalCompletion
zendesk.chat.PathUpdate: java.lang.String toString()
zendesk.chat.ChatStateStore
zendesk.chat.R$style: int Widget_AppCompat_Light_PopupMenu
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
zendesk.chat.ChatSession: void setVisitorInfo(zendesk.chat.VisitorInfo,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatSessionStatus
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: OkHttpWebSocket$WebSocketErrorResponse(java.lang.Throwable,okhttp3.Response)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
com.zendesk.service.ErrorResponseAdapter: java.lang.String getUrl()
zendesk.chat.ChatModel_Factory
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
zendesk.chat.R$string: int abc_searchview_description_search
zendesk.chat.DeliveryStatusMonitor: zendesk.chat.DeliveryStatus deliveryStatus(zendesk.chat.DnModels$ChatLog)
zendesk.chat.R$styleable: int AppCompatTextView_drawableTopCompat
zendesk.chat.R$styleable: int AppCompatTextView_textAllCaps
zendesk.chat.DnUpdateModels$ChatMessage: java.lang.String msg
zendesk.chat.R$attr: int windowMinWidthMinor
zendesk.chat.ChatEngine$Status: zendesk.chat.ChatEngine$Status ENGINE_STOPPED
zendesk.messaging.ObservableEngine: boolean registerObserver(zendesk.messaging.Engine$UpdateObserver)
zendesk.chat.R$drawable: int abc_ic_ab_back_material
zendesk.chat.ChatObserverFactory: zendesk.chat.ChatLogMapper access$200(zendesk.chat.ChatObserverFactory)
zendesk.chat.R$dimen: int abc_button_padding_horizontal_material
zendesk.chat.R$dimen: int abc_dialog_padding_material
zendesk.chat.DefaultChatSession$1: zendesk.chat.DefaultChatSession this$0
androidx.cardview.widget.CardView: int getContentPaddingTop()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
zendesk.chat.Connection$2: zendesk.chat.Connection this$0
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$integer: int abc_config_activityShortDur
zendesk.chat.IdentityManager: zendesk.chat.ChatProvidersStorage access$700(zendesk.chat.IdentityManager)
zendesk.chat.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
zendesk.chat.R$attr: int preserveIconSpacing
zendesk.chat.ConnectionStatus: zendesk.chat.ConnectionStatus[] values()
zendesk.chat.DefaultChatSession$13: void run()
com.google.android.gms.internal.measurement.zzcd$zzh: com.google.android.gms.internal.measurement.zzcd$zzh zzf
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
zendesk.chat.ZendeskChatProvider
zendesk.chat.ChatSession: void setDepartment(java.lang.String,com.zendesk.service.ZendeskCallback)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
zendesk.chat.R$dimen: int abc_text_size_display_4_material
zendesk.chat.ChatFormStage$PreChatFormCompletion
zendesk.chat.R$styleable: int AppCompatTheme_controlBackground
zendesk.chat.DefaultChatSocketConnection: void setWebSocket(zendesk.chat.WebSocket)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
zendesk.chat.IdentityManager$IdentityResetCompletion$1
zendesk.chat.R$styleable: int DrawerArrowToggle_arrowHeadLength
zendesk.chat.R$dimen: int abc_button_inset_vertical_material
zendesk.chat.R$style: int Base_Widget_AppCompat_Spinner
zendesk.chat.R$dimen: int abc_text_size_caption_material
zendesk.chat.ChatVisitorClient: java.lang.String BASE_AUTH_URL
zendesk.chat.R$color: int bright_foreground_material_light
zendesk.chat.Connection: java.util.concurrent.atomic.AtomicReference socketRef
zendesk.chat.ChatAgentAvailabilityStage$1
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
zendesk.chat.FileUploader$MeteredRequestBody$1: long bytesWritten
zendesk.chat.ChatEngine$InputProcessor: java.util.concurrent.atomic.AtomicBoolean expectComment
zendesk.chat.DefaultChatStringProvider: DefaultChatStringProvider(android.content.Context)
zendesk.chat.ZendeskSettingsProvider: void observeChatSettings(zendesk.chat.ObservationScope,zendesk.chat.Observer)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
zendesk.chat.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
zendesk.chat.R$string: int zch_chat_handover_message_selection
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
zendesk.chat.ChatSocketConnection$State: zendesk.chat.ChatSocketConnection$State CLOSED
zendesk.chat.R$styleable: int AlertDialog_buttonPanelSideLayout
zendesk.chat.FrameFactory: long remoteSequenceNumber
zendesk.messaging.MessagingItem$FileQuery$FailureReason: zendesk.messaging.MessagingItem$FileQuery$FailureReason valueOf(java.lang.String)
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String getSource()
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
zendesk.chat.JwtLoginDetailsProvider
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
zendesk.chat.DefaultChatStringProvider: java.lang.String requestTranscript()
com.google.android.gms.internal.measurement.zzcd$zzg: long zzv
com.google.android.gms.internal.measurement.zzck$zza: com.google.android.gms.internal.measurement.zzju zze
zendesk.chat.BaseModule_ScheduledExecutorServiceFactory: java.lang.Object get()
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
zendesk.chat.ChatModel$3: void onSuccess(java.lang.Void)
zendesk.chat.Form: int currentFieldIndex
zendesk.chat.R$attr: int editTextBackground
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
zendesk.chat.DnUpdateModels$ChatTranscriptValue: DnUpdateModels$ChatTranscriptValue(java.lang.String)
zendesk.chat.R$style: int Widget_AppCompat_SearchView_ActionBar
zendesk.chat.R$styleable: int Toolbar_titleMargins
zendesk.chat.DnModels$LiveChat: int hashCode()
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
zendesk.chat.BuildConfig: int VERSION_CODE
zendesk.chat.R$styleable: int ActionBar_contentInsetStartWithNavigation
com.google.android.material.button.MaterialButton: void setElevation(float)
zendesk.chat.ZendeskSettingsProvider: zendesk.chat.MainThreadPoster mainThreadPoster
zendesk.chat.ZendeskChatProvider: void update(zendesk.chat.ChatSession)
zendesk.chat.R$layout: int abc_action_mode_bar
zendesk.chat.ChatObserverFactory_Factory: java.lang.Object get()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: javax.inject.Provider chatAgentAvailabilityStageProvider
zendesk.chat.R$styleable: int Toolbar_contentInsetRight
zendesk.chat.provider.BuildConfig: int VERSION_CODE
zendesk.chat.R$style: int Base_V7_Theme_AppCompat
zendesk.chat.R$string: int zch_offline_form_message_field_prompt
zendesk.chat.R$string: int zch_member_join
zendesk.chat.R$styleable: int AppCompatTheme_activityChooserViewStyle
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
zendesk.chat.R$attr: int actionOverflowMenuStyle
zendesk.chat.R$layout: int abc_popup_menu_item_layout
zendesk.chat.R$id: int action_menu_presenter
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzam
zendesk.chat.R$id: R$id()
zendesk.chat.R$id: int action_bar_spinner
zendesk.chat.R$drawable: int abc_tab_indicator_mtrl_alpha
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
zendesk.chat.RequestSender: void update(zendesk.chat.ConnectionStatus)
zendesk.chat.FileUploader$MeteredRequestBody$1: FileUploader$MeteredRequestBody$1(zendesk.chat.FileUploader$MeteredRequestBody,okio.Sink)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.R$attr: int backgroundStacked
zendesk.chat.ChatConversationOngoingChecker_Factory: java.lang.Object get()
zendesk.chat.ChatFormStage: void onAgentUnavailable(zendesk.chat.ChatContext,java.util.List)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
zendesk.chat.ChatObserverFactory$3: zendesk.chat.ChatContext val$chatContext
zendesk.chat.R$styleable: int AppCompatTheme_actionBarSize
zendesk.chat.DeliveryStatus: boolean hasFailed(zendesk.chat.DeliveryStatus)
zendesk.chat.R$style: int Base_Widget_AppCompat_ActionMode
zendesk.chat.ChatSocketClient$Builder: java.util.concurrent.Executor executor
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
zendesk.chat.R$color: int abc_search_url_text_selected
zendesk.chat.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
zendesk.chat.R$attr: int actionBarStyle
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
zendesk.chat.R$color: int primary_text_default_material_dark
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
zendesk.chat.ChatEngineModule_EngineStatusObservableFactory: zendesk.chat.ObservableData get()
com.google.firebase.iid.Registrar: Registrar()
zendesk.chat.R$styleable: int MenuItem_android_checkable
zendesk.chat.DefaultChatSession$14: zendesk.chat.DefaultChatSession this$0
zendesk.chat.ChatConfiguration: boolean agentAvailabilityEnabled
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
zendesk.messaging.ui.AgentFileCellView
zendesk.chat.ChatProvidersStorage: java.lang.String loadMachineId()
zendesk.chat.DataStore$1: void update(zendesk.chat.DnModels$LiveChat)
zendesk.chat.R$attr: int radioButtonStyle
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
zendesk.chat.R$attr: int alpha
zendesk.chat.R$dimen: int abc_cascading_menus_min_smallest_width
zendesk.chat.VisitorPath: java.lang.String url
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
zendesk.chat.R$id: int end
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
zendesk.chat.ZendeskPushNotificationsProvider_Factory: zendesk.chat.ZendeskPushNotificationsProvider_Factory create(javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ChatProvidersModule: zendesk.chat.AccountProvider accountProvider(zendesk.chat.ZendeskAccountProvider)
zendesk.chat.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
zendesk.chat.ChatPhase: zendesk.chat.ChatPhase valueOf(java.lang.String)
zendesk.chat.ZendeskChatProvider: zendesk.chat.ChatLog$AttachmentMessage sendFile(java.io.File,zendesk.chat.FileUploadListener)
zendesk.chat.ChatConfiguration$Builder: boolean access$200(zendesk.chat.ChatConfiguration$Builder)
zendesk.chat.ChatObserverFactory$4
zendesk.chat.R$style: int Widget_AppCompat_ActionButton
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
io.flutter.view.FlutterView: io.flutter.app.FlutterPluginRegistry getPluginRegistry()
zendesk.chat.ZendeskSettingsProvider: zendesk.chat.ObservableData observableChatSettings
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
zendesk.chat.R$color: int abc_secondary_text_material_light
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
zendesk.chat.Attachment: zendesk.chat.Attachment$Metadata metadata
zendesk.chat.R$id: int edit_query
zendesk.chat.PushData
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
zendesk.chat.ChatEngineModule: zendesk.messaging.components.CompositeActionListener provideCompositeUpdateListener()
zendesk.chat.ChatEngineModule_ProvideStateListenerFactory
zendesk.chat.ChatEngine_Factory: javax.inject.Provider observableSettingsProvider
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_connectionProvider: java.lang.Object get()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
zendesk.chat.R$attr: int contentInsetEnd
androidx.appcompat.widget.Toolbar
zendesk.chat.ChatEngineModule$3: ChatEngineModule$3(zendesk.messaging.components.CompositeActionListener)
zendesk.chat.SharedPreferencesStorage_Factory: java.lang.Object get()
zendesk.chat.AccountStatus: zendesk.chat.AccountStatus ONLINE
zendesk.chat.ChatModel$3
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Headline
zendesk.chat.R$color: int button_material_dark
zendesk.chat.PathValueSender$Request: com.zendesk.service.ZendeskCallback access$100(zendesk.chat.PathValueSender$Request)
zendesk.chat.R$attr: int progressBarStyle
zendesk.chat.ChatVisitorClient: ChatVisitorClient(java.lang.String,java.lang.String,zendesk.chat.ChatSocketClient,java.util.concurrent.ScheduledExecutorService,com.google.gson.Gson,zendesk.chat.NetworkConnectivity,zendesk.chat.MachineIdStorage,zendesk.chat.AuthenticationStorage,retrofit2.Retrofit,zendesk.chat.ChatVisitorClient$1)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
zendesk.chat.IdentityManager$IdentityResetCompletion: com.zendesk.service.ZendeskCallback unregisterCallback
zendesk.messaging.EngineListRegistry: zendesk.messaging.EngineListRegistry valueOf(java.lang.String)
zendesk.chat.VisitorPath: VisitorPath(java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
zendesk.chat.PushData: zendesk.chat.PushData$Type type
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_baseStorage: java.lang.Object get()
zendesk.chat.ObservationToken
zendesk.chat.R$styleable: int MenuGroup_android_checkableBehavior
zendesk.chat.ChatLog$Type: zendesk.chat.ChatLog$Type OPTIONS_MESSAGE
zendesk.chat.Providers: zendesk.chat.ConnectionProvider connectionProvider()
zendesk.chat.R$styleable: int AlertDialog_android_layout
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
zendesk.chat.R$styleable: int AppCompatTheme_windowMinWidthMinor
zendesk.chat.R$drawable: int abc_ratingbar_indicator_material
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider getChatVisitorClientProvider
zendesk.chat.R$styleable: int AppCompatTheme_colorError
zendesk.chat.ChatLogMapper: zendesk.messaging.MessagingItem convertMessage(zendesk.chat.ChatState,zendesk.chat.ChatLog$Message)
zendesk.chat.R$dimen: int abc_button_inset_horizontal_material
zendesk.chat.PathValue: java.lang.Object getValue()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
zendesk.chat.R$styleable: int DrawerArrowToggle_arrowShaftLength
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
zendesk.chat.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
zendesk.chat.Connection: int RECONNECTION_ATTEMPTS
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
zendesk.chat.provider.R
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
zendesk.chat.OptionSelectField: OptionSelectField(zendesk.chat.FormField$Status,java.lang.String,java.lang.String,zendesk.messaging.AgentDetails,java.util.List)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
zendesk.chat.R$styleable: int AppCompatTheme_actionModeCutDrawable
zendesk.chat.R$string: int abc_menu_ctrl_shortcut_label
zendesk.chat.ChatLogMapper: zendesk.messaging.MessagingItem convertAttachment(zendesk.chat.ChatState,zendesk.chat.ChatLog$AttachmentMessage)
zendesk.chat.DnModels$LiveChat: zendesk.chat.DnModels$Account account
com.google.common.util.concurrent.AbstractFuture: java.lang.Object value
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
zendesk.chat.ChatBotMessagingItems_Factory: zendesk.chat.ChatBotMessagingItems_Factory INSTANCE
zendesk.chat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String getUrl()
androidx.media.AudioAttributesCompatParcelizer
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.R$style: int Widget_AppCompat_ActionMode
zendesk.chat.IdentityManager$QueueItem
zendesk.chat.R$attr: int autoCompleteTextViewStyle
zendesk.chat.TimerModule_TimerFactoryFactory: zendesk.messaging.components.Timer$Factory timerFactory(android.os.Handler)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
zendesk.chat.ChatProvidersModule_ObservableAccountFactory: zendesk.chat.ObservableData get()
zendesk.chat.FrameMapper: FrameMapper(com.google.gson.Gson)
zendesk.chat.DnUpdateModels$Tags$RemoveTags: DnUpdateModels$Tags$RemoveTags(java.util.List)
zendesk.chat.R$styleable: int AppCompatTheme_panelMenuListWidth
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
zendesk.chat.DnModels$ChatLog$Attachment: java.lang.String name
zendesk.chat.R$style: int Theme_AppCompat_DayNight_Dialog
zendesk.chat.ChatLog$OptionsMessage: java.lang.String getMessageQuestion()
androidx.appcompat.app.AlertController$RecycleListView
zendesk.chat.DefaultChatSession$12: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.ChatContext: zendesk.messaging.Engine$UpdateObserver updateObserver
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider chatBotMessagingItemsProvider
zendesk.chat.Account: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
zendesk.chat.R$id: int scrollIndicatorDown
zendesk.chat.R$drawable: int abc_textfield_search_activated_mtrl_alpha
zendesk.chat.R$styleable: int ActionBar_subtitle
zendesk.chat.Tls12SocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)
zendesk.chat.DataStore: zendesk.chat.ObservableData getObservableChatPhase()
com.google.android.gms.internal.measurement.zzbv$zze: com.google.android.gms.internal.measurement.zzju zzk
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
zendesk.chat.R$string: int zch_offline_form_welcome_message
zendesk.chat.DefaultChatSession: zendesk.chat.ConnectionStatus getConnectionStatus()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
zendesk.chat.ChatEngineModule: zendesk.messaging.components.CompositeActionListener compositeActionListener()
com.google.android.material.button.MaterialButton: int getIconPadding()
androidx.core.app.ComponentActivity: ComponentActivity()
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
zendesk.chat.ChatStateStore: void insertLocalMessageLog(zendesk.chat.ChatLog$Message)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
zendesk.chat.ChatAgentAvailabilityStage
zendesk.chat.ChatConfiguration: java.util.Set chatMenuActions
zendesk.chat.Frames$Command: zendesk.chat.Frames$Command MESSAGE
zendesk.chat.Request
zendesk.chat.R$id: int action_text
zendesk.chat.DataStore: zendesk.chat.ObservableData observableVisitorInfo
zendesk.chat.R$dimen: int disabled_alpha_material_light
zendesk.chat.ChatVisitorClient: zendesk.chat.AuthenticationStorage authenticationStorage
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.ChatProvidersComponent: zendesk.chat.BaseStorage baseStorage()
com.google.android.material.card.MaterialCardView: float getProgress()
zendesk.chat.RequestSender: zendesk.chat.DataNode dataNode
zendesk.chat.ChatEngineModule_GetChatAgentAvailabilityStageFactory: java.lang.Object get()
zendesk.chat.R$color: int abc_tint_seek_thumb
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String getMachineId()
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
zendesk.chat.SendMessageRequest
androidx.appcompat.widget.AppCompatCheckedTextView
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String accountKey
com.zendesk.service.ErrorResponseAdapter: boolean isConversionError()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
zendesk.chat.DnModels$LiveChat: java.util.Map getAgents()
zendesk.chat.ChatVisitorClient: retrofit2.Retrofit authenticationRetrofit
zendesk.chat.ChatAgentAvailabilityStage: void processAccount(zendesk.chat.Account,zendesk.chat.ChatContext)
androidx.viewpager2.adapter.FragmentStateAdapter$5
io.flutter.view.FlutterView: android.graphics.Bitmap getBitmap()
zendesk.chat.ChatForm: java.lang.String PHONE_FIELD_ID
zendesk.chat.R$attr: int contentInsetStart
zendesk.chat.R$anim: int abc_slide_in_bottom
zendesk.chat.DefaultChatSession$4
zendesk.chat.DeliveryStatusMonitor$1
zendesk.chat.R$dimen: int abc_text_size_menu_header_material
zendesk.chat.R$style: int Base_Widget_AppCompat_ActionBar_TabText
zendesk.chat.R$styleable: int AppCompatTheme_actionModeFindDrawable
zendesk.chat.R$id: int progress_horizontal
com.google.android.gms.internal.measurement.zzu: com.google.android.gms.internal.measurement.zzv asInterface(android.os.IBinder)
zendesk.chat.VisitorActiveSignal
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider mainHandlerProvider
zendesk.chat.PushData: PushData()
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider v1StorageProvider
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
zendesk.chat.ChatConfiguration$Builder: java.util.List chatMenuActions
zendesk.chat.Clock: zendesk.chat.Clock SYSTEM_CLOCK
com.google.android.gms.internal.measurement.zzce: com.google.android.gms.internal.measurement.zzce[] values()
zendesk.chat.AuthenticationResponse: long expiresIn
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
zendesk.chat.ChatFormDriver$1
zendesk.chat.Providers: zendesk.chat.ChatProvider chatProvider()
zendesk.chat.ChatModel$3: void onSuccess(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
zendesk.chat.VisitorActiveSignal: void performUpdate(boolean,zendesk.chat.ConnectionStatus)
zendesk.chat.ChatModel: zendesk.chat.ChatConnectionSupervisor access$100(zendesk.chat.ChatModel)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,byte[],int)
zendesk.chat.ChatEngineModule_ProvideStateListenerFactory: zendesk.messaging.components.ActionListener provideStateListener(zendesk.messaging.components.CompositeActionListener)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
zendesk.chat.R$style: int Widget_AppCompat_ActionButton_CloseMode
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
zendesk.chat.ChatLog$Message: ChatLog$Message(java.lang.String,long,long,zendesk.chat.ChatParticipant,java.lang.String,java.lang.String,zendesk.chat.DeliveryStatus,java.lang.String)
com.google.android.gms.internal.measurement.zzbv$zzd: java.lang.String zzh
zendesk.chat.ChatEngineModule_ProvideUpdateActionListenerFactory: zendesk.chat.ChatEngineModule_ProvideUpdateActionListenerFactory create(javax.inject.Provider)
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.zendesk.service.ErrorResponseAdapter: java.lang.String errorMessage
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
zendesk.chat.R$dimen: int abc_dropdownitem_icon_width
zendesk.chat.R$style: int TextAppearance_AppCompat_Body2
zendesk.chat.AuthenticationStorage
zendesk.chat.SendCallbackManager: long ackReceiveTimeout
zendesk.chat.DnModels$LiveChat: zendesk.chat.DnModels$Profile profile
zendesk.chat.DnModels$ChatLog$Type: zendesk.chat.DnModels$ChatLog$Type CHAT_REQUEST_RATING
zendesk.chat.ConnectionStateMachine$1: int[] $SwitchMap$zendesk$chat$ConnectionStatus
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
zendesk.chat.R$styleable: int FontFamily_fontProviderPackage
zendesk.chat.R$id: int start
zendesk.chat.ChatLog: zendesk.chat.DeliveryStatus getDeliveryStatus()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzw)
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
zendesk.chat.MainThreadPoster: com.zendesk.service.ZendeskCallback wrapCallback(com.zendesk.service.ZendeskCallback)
zendesk.chat.DnModels$ChatLog: java.lang.Boolean failed
zendesk.chat.OfflineForm: java.lang.String message
zendesk.chat.R$style: int AlertDialog_AppCompat_Light
zendesk.chat.ChatSocketClient: zendesk.chat.ChatSocketConnection newConnection(zendesk.chat.LoginDetails,zendesk.chat.ChatSocketListener)
kotlinx.coroutines.CompletedExceptionally: int _handled
zendesk.chat.R$styleable: int Toolbar_titleTextColor
zendesk.chat.R$string: int zch_pre_chat_department_field_message
zendesk.chat.NetworkConnectivityProvider$2$1: void run()
zendesk.chat.DataStore: zendesk.chat.ObservableData access$200(zendesk.chat.DataStore)
zendesk.chat.DnModels$Account
zendesk.chat.ChatProvidersModule_ObservableChatStateFactory: zendesk.chat.ObservableData observableChatState()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
zendesk.chat.MediatorEndpoint: zendesk.chat.Clock clock
zendesk.chat.VisitorInfo: java.lang.String email
zendesk.chat.R$attr: int actionMenuTextAppearance
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$style: int Base_Widget_AppCompat_RatingBar
zendesk.chat.IdentityManager$IdentityResetCompletion: void complete()
zendesk.chat.DefaultChatSession$18: zendesk.chat.FileUploadListener val$fileUploadListener
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
zendesk.chat.DataNode$ObservableBranch: java.util.List branchPath
zendesk.chat.DnModels$Department$Status
zendesk.chat.ChatStringProvider: java.lang.String offLineFormIntroduction()
zendesk.chat.BaseModule_ScheduledExecutorServiceFactory: java.util.concurrent.ScheduledExecutorService get()
zendesk.chat.DnUpdateModels$RequestChat: DnUpdateModels$RequestChat(zendesk.chat.DnUpdateModels$1)
zendesk.chat.DnModels$Channel: java.lang.String getComment()
zendesk.chat.FrameFactory: FrameFactory(com.google.gson.Gson,zendesk.chat.Clock)
zendesk.chat.DnModels$Profile: java.lang.String getDisplayName()
zendesk.belvedere.KeyboardHelper
zendesk.chat.ChatFormStage$1: ChatFormStage$1(zendesk.chat.ChatFormStage,zendesk.chat.ChatContext)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
zendesk.chat.RequestSender: java.lang.String LOG_TAG
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
zendesk.chat.DefaultChatSession$2
zendesk.chat.R$dimen: int compat_notification_large_icon_max_height
com.google.android.gms.internal.measurement.zzck$zzb: boolean zzf
zendesk.chat.OptionSelectField: zendesk.messaging.MessagingItem$Option optionFromObject(java.lang.Object)
zendesk.chat.ChatEngine
zendesk.chat.VisitorActiveSignal$VisitorActiveRunnable
zendesk.chat.MachineIdStorage$InMemory
zendesk.chat.DataStore
com.google.android.material.radiobutton.MaterialRadioButton
zendesk.chat.IdentityManager: IdentityManager(zendesk.chat.ChatProvidersStorage,zendesk.chat.ObservableData,zendesk.chat.CacheManager,zendesk.chat.ChatSessionManager,zendesk.chat.MainThreadPoster)
zendesk.chat.DefaultChatStringProvider: java.lang.String nameFieldPrompt()
zendesk.chat.ChatEngine$InputProcessor: void setExpectComment(boolean)
zendesk.chat.ObservationToken: ObservationToken(zendesk.chat.ObservableData,zendesk.chat.Observer,boolean)
zendesk.chat.R$dimen: int abc_search_view_preferred_height
com.google.android.gms.internal.measurement.zzcd$zzg
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
zendesk.chat.ChatModel$2
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider provideDateProvider
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
zendesk.chat.ChatModel_Factory: zendesk.chat.ChatModel newInstance(zendesk.chat.ConnectionProvider,zendesk.chat.ProfileProvider,zendesk.chat.SettingsProvider,zendesk.chat.ChatProvider,java.lang.Object,java.lang.Object,zendesk.chat.ObservableData,java.lang.Object,java.lang.Object,java.lang.Object)
zendesk.chat.R$styleable: int SwitchCompat_thumbTint
zendesk.chat.ChatLogMapper: java.lang.String FOLLOW_UP_MESSAGE_ID_POSTFIX
zendesk.chat.FrameMapper: int PAYLOAD_INDEX
zendesk.chat.DepartmentStatus: zendesk.chat.DepartmentStatus ONLINE
zendesk.chat.R$styleable: int AppCompatTheme_actionBarItemBackground
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
zendesk.chat.R$styleable: int AppCompatTextView_android_textAppearance
zendesk.chat.ZendeskProfileProvider: ZendeskProfileProvider(zendesk.chat.ChatSessionManager,zendesk.chat.MainThreadPoster,zendesk.chat.ObservableData)
zendesk.chat.R$style: int Widget_AppCompat_RatingBar_Small
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
zendesk.chat.R$color: int primary_dark_material_light
com.google.android.material.button.MaterialButton: int getIconGravity()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
zendesk.chat.R$id: int parentPanel
zendesk.chat.R$style: int Base_Widget_AppCompat_PopupWindow
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
zendesk.chat.R$styleable: int AppCompatTheme_windowFixedWidthMajor
zendesk.chat.R$style: int Theme_AppCompat_NoActionBar
zendesk.chat.DefaultChatSession: void connect()
zendesk.chat.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
zendesk.chat.R$attr: int singleChoiceItemLayout
zendesk.chat.R$style: int Base_V28_Theme_AppCompat_Light
zendesk.chat.R$attr: int autoSizeMaxTextSize
com.google.android.gms.internal.measurement.zzbv$zze: com.google.android.gms.internal.measurement.zzbv$zze zzj
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
zendesk.chat.R$styleable: int ColorStateListItem_android_alpha
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.AuthenticationStorage access$800(zendesk.chat.JwtLoginDetailsProvider)
zendesk.chat.VisitorInfo$Builder: zendesk.chat.VisitorInfo build()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
zendesk.chat.ChatProvidersStorage_Factory: javax.inject.Provider v1StorageProvider
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,byte[])
zendesk.chat.R$attr: int windowFixedWidthMinor
zendesk.chat.ChatProvidersModule_ObservableChatStateFactory: ChatProvidersModule_ObservableChatStateFactory()
zendesk.chat.DnModels$Account: DnModels$Account()
zendesk.chat.OptionSelectField
zendesk.chat.R$styleable: int AppCompatTheme_android_windowIsFloating
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
zendesk.chat.ChatEngineModule_CompositeActionListenerFactory: zendesk.chat.ChatEngineModule_CompositeActionListenerFactory INSTANCE
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider observableChatStateProvider
zendesk.chat.ZendeskChatProvider$3: ZendeskChatProvider$3(zendesk.chat.ZendeskChatProvider,zendesk.chat.ObservationScope,com.zendesk.service.ZendeskCallback)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
zendesk.chat.ChatConversationOngoingChecker: void isConversationOngoing(zendesk.messaging.Engine$ConversationOnGoingCallback,zendesk.messaging.Engine)
zendesk.chat.R$id: int right
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
zendesk.chat.R$drawable: int abc_ic_star_half_black_16dp
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String getTitle()
zendesk.chat.OfflineForm: java.lang.String getMessage()
zendesk.chat.R$styleable: int[] MenuItem
zendesk.chat.ZendeskChatProvider$1: void onSuccess(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
kotlinx.coroutines.android.AndroidDispatcherFactory
zendesk.chat.VisitorInfo: java.lang.String name
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
zendesk.chat.FileUploader: okhttp3.OkHttpClient okHttpClient
zendesk.chat.PathValueSender: void update(java.lang.Object)
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue createVisitorPathUpdate(zendesk.chat.VisitorPath)
com.squareup.picasso.PicassoProvider: PicassoProvider()
zendesk.chat.Connection: zendesk.chat.ConnectionStateMachine connectionStateMachine
zendesk.chat.R$color: int material_grey_800
com.google.android.material.chip.Chip: float getChipCornerRadius()
zendesk.chat.R$layout: int notification_template_part_chronometer
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
zendesk.chat.R$color: int accent_material_light
zendesk.chat.DnModels$LiveChat: java.util.Map agents
zendesk.chat.DefaultChatSession$15: DefaultChatSession$15(zendesk.chat.DefaultChatSession,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
zendesk.chat.R$integer: int config_tooltipAnimTime
androidx.fragment.app.DialogFragment
zendesk.chat.NetworkConnectivityProvider: zendesk.chat.NetworkConnectivity access$000()
zendesk.chat.R$id: int search_mag_icon
zendesk.chat.DnUpdateModels$VisitorActive: DnUpdateModels$VisitorActive(long)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
zendesk.chat.BaseModule_RetrofitFactory: javax.inject.Provider chatConfigProvider
zendesk.chat.Connection: java.util.concurrent.atomic.AtomicInteger access$100(zendesk.chat.Connection)
zendesk.chat.OptionSelectField: java.util.List options
zendesk.chat.IdentityManager$IdentityResetCompletion$1: IdentityManager$IdentityResetCompletion$1(zendesk.chat.IdentityManager$IdentityResetCompletion)
androidx.cardview.widget.CardView
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionBar_TabView
zendesk.chat.DnModels$Profile: java.lang.String getDepartmentId()
zendesk.chat.FileUploader$MeteredRequestBody$1: zendesk.chat.FileUploader$MeteredRequestBody this$0
zendesk.chat.ChatConfiguration$Builder: boolean access$300(zendesk.chat.ChatConfiguration$Builder)
zendesk.chat.MainThreadPoster$2: zendesk.chat.MainThreadPoster this$0
zendesk.messaging.ui.FileUploadProgressView: FileUploadProgressView(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatLog$AttachmentMessage: zendesk.chat.Attachment attachment
zendesk.chat.ChatVisitorClient$Builder
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
zendesk.chat.ChatFormDriver_Factory: javax.inject.Provider dateProvider
zendesk.chat.R$dimen: int abc_select_dialog_padding_start_material
zendesk.chat.ChatLog$Type: zendesk.chat.ChatLog$Type MESSAGE
zendesk.chat.ChatRating: zendesk.chat.ChatRating BAD
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
zendesk.chat.ConnectionStateMachine$1: int[] $SwitchMap$zendesk$chat$ChatSocketConnection$State
zendesk.commonui.AlmostRealProgressBar
zendesk.chat.R$attr: int queryBackground
zendesk.chat.ZendeskConnectionProvider_Factory: zendesk.chat.ZendeskConnectionProvider_Factory create(javax.inject.Provider,javax.inject.Provider)
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus access$600(zendesk.chat.ChatConfiguration$Builder)
zendesk.chat.SharedPreferencesStorage
zendesk.chat.VisitorInfo$Builder
zendesk.chat.MainThreadPoster$1: void update(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
zendesk.chat.R$style: int Widget_AppCompat_ActionBar
zendesk.chat.DepartmentStatus: zendesk.chat.DepartmentStatus[] $VALUES
zendesk.chat.ZendeskSettingsProvider$1: ZendeskSettingsProvider$1(zendesk.chat.ZendeskSettingsProvider)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
zendesk.chat.ChatStatusCheckStage: zendesk.chat.ChatStatusCheckStage$ChatInitCompletion access$100(zendesk.chat.ChatStatusCheckStage)
com.google.android.gms.internal.measurement.zzca$zza
zendesk.chat.ChatEngine$4: zendesk.chat.ChatEngine this$0
zendesk.chat.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
zendesk.chat.ChatFormDriver_Factory: javax.inject.Provider idProvider
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
android.support.v4.media.session.PlaybackStateCompat$CustomAction
zendesk.chat.R$integer: R$integer()
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
zendesk.chat.R$style: int Base_Widget_AppCompat_ListView_Menu
zendesk.chat.ChatEngine$EngineStartedCompletion: void onEngineStarted(zendesk.chat.ChatContext)
zendesk.chat.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
zendesk.chat.R$style: int Widget_AppCompat_ImageButton
zendesk.chat.R$dimen: int abc_text_size_body_2_material
zendesk.chat.ChatEngineModule_GetChatAgentAvailabilityStageFactory
zendesk.chat.ChatState
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
zendesk.chat.OfflineForm$Builder: zendesk.chat.OfflineForm$Builder withVisitorInfo(zendesk.chat.VisitorInfo)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
zendesk.chat.ChatEngineModule_GetChatAgentAvailabilityStageFactory: zendesk.chat.ChatEngineModule_GetChatAgentAvailabilityStageFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
zendesk.chat.R$bool: int abc_allow_stacked_button_bar
zendesk.chat.DnModels$FileSending: long getMaxFileSizeLimit()
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_Button
zendesk.chat.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.google.firebase.iid.Registrar
zendesk.chat.ChatConnectionSupervisor: zendesk.chat.ConnectionProvider connectionProvider
zendesk.chat.R$string: int abc_searchview_description_query
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider contextProvider
zendesk.chat.DepartmentField: DepartmentField(zendesk.chat.FormField$Status,java.lang.String,java.lang.String,zendesk.messaging.AgentDetails,java.util.List)
zendesk.chat.R$styleable: int AppCompatTheme_radioButtonStyle
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
zendesk.chat.R$id: int src_in
zendesk.chat.Connection
zendesk.chat.ChatFormDriver: void driveOfflineFormCollection(zendesk.chat.ChatContext,boolean,zendesk.chat.ChatFormStage$OfflineFormCompletion)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.google.android.gms.internal.measurement.zzbv$zzd
zendesk.chat.ChatEngineModule_ProvideCompositeUpdateListenerFactory: java.lang.Object get()
zendesk.chat.R$dimen: int abc_text_size_large_material
zendesk.chat.R$layout: int notification_template_part_time
zendesk.chat.R$color: int zch_trigger_avatar_background
zendesk.chat.ZendeskChatProvider: void endChat(com.zendesk.service.ZendeskCallback)
zendesk.chat.R$string: int zch_queue_position
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
zendesk.chat.WebSocket: void send(java.lang.String)
zendesk.chat.SendMessageRequest: zendesk.chat.DeliveryStatusMonitor deliveryStatusMonitor
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
zendesk.chat.DefaultChatSession$20: long val$timestamp
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
zendesk.chat.R$styleable: int AppCompatTheme_windowMinWidthMajor
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
io.flutter.view.FlutterView: io.flutter.view.FlutterNativeView getFlutterNativeView()
zendesk.chat.Connection: void onPathUpdateReceived(java.util.List)
zendesk.chat.ChatConfiguration$Builder: java.util.List access$500(zendesk.chat.ChatConfiguration$Builder)
zendesk.chat.R$attr: int theme
zendesk.chat.R$id: int home
zendesk.chat.ChatFormDriver: java.lang.String getMessage(zendesk.chat.ChatContext,zendesk.chat.ChatForm)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.core.app.CoreComponentFactory
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider connectionProvider
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue createEndChatFlag()
zendesk.chat.ChatProvidersStorage: void saveMachineId(java.lang.String)
zendesk.chat.ChatSocketClient: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
zendesk.chat.ChatEngineModule_ProvideCompositeUpdateListenerFactory: zendesk.chat.ChatEngineModule_ProvideCompositeUpdateListenerFactory INSTANCE
androidx.appcompat.widget.Toolbar: void setLogo(int)
zendesk.chat.ChatEngineModule_ChatFormStageFactory: javax.inject.Provider identityManagerProvider
com.google.android.gms.measurement.internal.zzkr: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
zendesk.chat.Form: boolean hasNext()
zendesk.chat.R$color: int abc_search_url_text_normal
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: javax.inject.Provider botMessageDispatcherProvider
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
zendesk.chat.DefaultChatSession$8: zendesk.chat.DefaultChatSession this$0
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
zendesk.chat.ChatForm: zendesk.chat.TextField createNameFormField(zendesk.chat.FormField$Status,zendesk.chat.ChatStringProvider,zendesk.messaging.AgentDetails)
zendesk.chat.DefaultChatSession$12: DefaultChatSession$12(zendesk.chat.DefaultChatSession,zendesk.chat.VisitorPath,com.zendesk.service.ZendeskCallback)
zendesk.chat.DnUpdateModels$VisitorPathUpdate: DnUpdateModels$VisitorPathUpdate(java.lang.String,java.lang.String,zendesk.chat.DnUpdateModels$1)
com.squareup.picasso.PicassoProvider
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.ProfileProvider profileProvider()
zendesk.chat.BaseModule_ScheduledExecutorServiceFactory: BaseModule_ScheduledExecutorServiceFactory()
zendesk.chat.ZendeskProfileProvider: void observeVisitorInfo(zendesk.chat.ObservationScope,zendesk.chat.Observer)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
zendesk.chat.AndroidModule_MainHandlerFactory: java.lang.Object get()
zendesk.chat.Chat: zendesk.chat.ChatProvidersComponent chatProvidersComponent
zendesk.chat.DnModels$LiveChat
zendesk.chat.R$color: int abc_primary_text_disable_only_material_dark
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzaj
zendesk.chat.DefaultChatSession$13
zendesk.chat.ChatStatusCheckStage: zendesk.chat.ChatProvider chatProvider
zendesk.chat.DnModels$ChatLog$Type: zendesk.chat.DnModels$ChatLog$Type MESSAGE
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
zendesk.chat.DefaultChatSession$12: zendesk.chat.VisitorPath val$visitorPath
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
zendesk.chat.DefaultChatSession: void observeChatState(zendesk.chat.ObservationScope,zendesk.chat.Observer)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
zendesk.messaging.ui.TypingIndicatorView: TypingIndicatorView(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$drawable: int abc_cab_background_internal_bg
zendesk.chat.ZendeskAccountProvider$1: void update(java.lang.Object)
com.zendesk.service.ErrorResponseAdapter: boolean isHTTPError()
com.google.firebase.analytics.FirebaseAnalytics
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
zendesk.chat.PathValue: PathValue(java.util.List,java.lang.Object)
zendesk.chat.VisitorInfo: java.lang.String getPhoneNumber()
zendesk.chat.DefaultChatSession$6
zendesk.chat.R$styleable: int AppCompatTheme_colorControlActivated
zendesk.chat.R$drawable: int tooltip_frame_dark
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.R$attr: int maxButtonHeight
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.google.android.gms.cloudmessaging.zza: android.os.Parcelable$Creator CREATOR
zendesk.chat.IdentityManager_Factory: javax.inject.Provider chatSessionManagerProvider
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
zendesk.chat.FormField: zendesk.chat.FormField$Status status
zendesk.chat.ChatProvidersStorage_Factory: zendesk.chat.ChatProvidersStorage get()
zendesk.chat.TextField: int inputType
zendesk.chat.R$color: int background_floating_material_light
zendesk.chat.Chat: void init(android.content.Context,java.lang.String,java.lang.String)
zendesk.chat.AnonymousLoginDetailsProvider: zendesk.chat.LoginDetails access$002(zendesk.chat.AnonymousLoginDetailsProvider,zendesk.chat.LoginDetails)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserPropertyAs(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.gms.common.internal.ResolveAccountRequest: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
zendesk.chat.ZendeskChatProvider$3: void update(java.lang.Object)
zendesk.chat.DnModels$LiveChat: zendesk.chat.DnModels$Account getAccount()
zendesk.chat.ChatLogBlacklister: java.lang.String BLACKLISTED_LOG_IDS_KEY
zendesk.chat.Connection: java.util.concurrent.atomic.AtomicInteger retryCount
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
zendesk.chat.DefaultChatSession$3: java.lang.String val$chatComment
zendesk.chat.R$attr: int actionBarTabTextStyle
zendesk.chat.BaseModule_GetOkHttpClientFactory: BaseModule_GetOkHttpClientFactory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
zendesk.chat.ChatProvidersModule_ObservableChatSettingsFactory: java.lang.Object get()
zendesk.chat.Attachment
androidx.lifecycle.SavedStateHandleController$1
zendesk.chat.BaseModule_GsonFactory: java.lang.Object get()
io.flutter.plugins.urllauncher.WebViewActivity
zendesk.chat.Department: java.lang.String getName()
zendesk.chat.ChatAgentAvailabilityStage$1: void onSuccess(zendesk.chat.Account)
zendesk.chat.R$anim: int abc_grow_fade_in_from_bottom
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
zendesk.chat.R$color: int material_grey_100
zendesk.chat.R$attr: int actionModePopupWindowStyle
zendesk.chat.ZendeskChatProvider: zendesk.chat.ChatSessionManager chatSessionManager
zendesk.chat.ChatSocketClient: java.util.concurrent.Executor executor
zendesk.chat.DefaultChatSession$5: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.R$style: int Widget_AppCompat_ListView_Menu
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
zendesk.chat.ChatStateStore$ChatLogMerger$2: zendesk.chat.ChatLog$Message merge(zendesk.chat.ChatLog$Message,zendesk.chat.DnModels$ChatLog)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatProvidersStorage: void clearMachineId()
zendesk.chat.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.google.android.gms.internal.measurement.zzcd$zzg: long zzl
zendesk.chat.MainThreadPoster: zendesk.chat.CompletionCallback wrapCallback(zendesk.chat.CompletionCallback)
zendesk.chat.R$styleable: int DrawerArrowToggle_drawableSize
zendesk.chat.R$styleable: int AppCompatTheme_viewInflaterClass
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatSocketClient$1: void run()
zendesk.chat.R$string: int zch_chat_rating_request_prompt
zendesk.chat.R$style: int Base_V21_Theme_AppCompat_Light
zendesk.chat.DaggerChatProvidersComponent: android.content.Context context()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
zendesk.chat.SharedPreferencesStorage_Factory: zendesk.chat.SharedPreferencesStorage get()
zendesk.messaging.ui.MessagingView
zendesk.chat.ChatSessionStatus: zendesk.chat.ChatSessionStatus INITIALIZING
zendesk.chat.DefaultChatSession: zendesk.chat.PathValueSender pathValueSender
zendesk.chat.DefaultChatSocketConnection$1
zendesk.chat.R$string: int abc_searchview_description_voice
zendesk.chat.ChatParticipant: zendesk.chat.ChatParticipant VISITOR
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
zendesk.chat.VisitorPath
com.google.android.gms.common.api.GoogleApiActivity
zendesk.chat.R$drawable: int abc_btn_check_to_on_mtrl_000
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
zendesk.chat.R$style: int Widget_AppCompat_EditText
zendesk.chat.AccountStatus: zendesk.chat.AccountStatus[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzw,long)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
zendesk.chat.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue createVisitorInfoUpdate(zendesk.chat.VisitorInfo)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
zendesk.chat.ChatEngineModule$2: zendesk.messaging.components.CompositeActionListener val$observer
zendesk.chat.R$id: int left
zendesk.chat.VisitorActiveSignal: void setVisitorActive(boolean)
zendesk.chat.ChatProvider: void setDepartment(long,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatEngine$4: void onSuccess(java.lang.Object)
zendesk.belvedere.FloatingActionMenu
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
zendesk.chat.OfflineForm: OfflineForm(zendesk.chat.VisitorInfo,java.lang.String,java.lang.Long,java.lang.String,zendesk.chat.OfflineForm$1)
io.flutter.embedding.android.FlutterTextureView
zendesk.chat.R$attr: int textAppearanceListItemSmall
zendesk.chat.R$attr: int titleMarginBottom
zendesk.chat.ChatVisitorClient$1
zendesk.chat.DnUpdateModels$VisitorInfoUpdate: java.lang.String email
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
zendesk.chat.ZendeskConnectionProvider: zendesk.chat.MainThreadPoster mainThreadPoster
zendesk.chat.ChatPhase: zendesk.chat.ChatPhase CONFIG
zendesk.chat.R$layout: int abc_list_menu_item_layout
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.NetworkConnectivity networkConnectivity
zendesk.chat.ChatFormDriver: zendesk.messaging.components.bot.BotMessageDispatcher$DispatchListener dispatchListener
zendesk.chat.ChatLog$OptionsMessage: java.lang.String messageQuestion
zendesk.chat.AndroidUtils: AndroidUtils()
zendesk.chat.DnModels$Account$Status: zendesk.chat.DnModels$Account$Status OFFLINE
zendesk.messaging.ui.StackedResponseOptionsView: StackedResponseOptionsView(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$attr: int navigationContentDescription
zendesk.chat.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
zendesk.chat.R$styleable: int TextAppearance_android_textColorHint
zendesk.chat.R$integer: int cancel_button_image_alpha
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
zendesk.chat.MessageAck: java.lang.String getError()
zendesk.chat.DnUpdateModels$Tags: DnUpdateModels$Tags(zendesk.chat.DnUpdateModels$1)
zendesk.chat.R$id: int tag_unhandled_key_listeners
zendesk.chat.R$styleable: int AppCompatTheme_borderlessButtonStyle
com.google.android.gms.internal.measurement.zzcd$zzc: com.google.android.gms.internal.measurement.zzii zzd
zendesk.chat.ChatObserverFactory_Factory: zendesk.chat.ChatObserverFactory get()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.Form: Form(java.util.List,java.lang.String)
zendesk.chat.AndroidModule_BaseStorageFactory: zendesk.chat.AndroidModule_BaseStorageFactory create(javax.inject.Provider,javax.inject.Provider)
zendesk.chat.SendFileRequest: SendFileRequest(long,java.io.File,zendesk.chat.FileUploadListener,zendesk.chat.CompletionCallback,zendesk.chat.CompletionCallback,zendesk.chat.FileUploader,zendesk.chat.DataNode,zendesk.chat.DeliveryStatusMonitor)
zendesk.chat.ChatLog$Comment: java.lang.String getNewChatComment()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
zendesk.chat.ChatEngine: void onEvent(zendesk.messaging.Event)
zendesk.chat.ChatLog$1: int compare(zendesk.chat.ChatLog,zendesk.chat.ChatLog)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
zendesk.chat.R$styleable: int ActionBar_icon
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
zendesk.chat.R$style: int Base_Animation_AppCompat_Tooltip
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
zendesk.chat.R$style: int Widget_AppCompat_ActionBar_TabView
zendesk.chat.Connection: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
zendesk.chat.ChatState: zendesk.chat.ChatRating getChatRating()
zendesk.chat.ChatEngineModule: zendesk.chat.ObservableData engineStatusObservable()
com.google.android.gms.internal.measurement.zzhu: com.google.android.gms.internal.measurement.zzhu[] values()
zendesk.chat.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
zendesk.chat.ObservationScope
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.ChatVisitorClient$Builder withAuthenticationStorage(zendesk.chat.AuthenticationStorage)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
zendesk.chat.ChatLog$1
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
zendesk.chat.ChatStatusCheckStage$ChatEndedCompletion
zendesk.chat.R$styleable: int SearchView_searchHintIcon
zendesk.chat.Connection$1: Connection$1(zendesk.chat.Connection)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
zendesk.chat.DataNode: java.lang.Object getValue(java.util.List,java.lang.Class)
zendesk.chat.R$styleable: int AppCompatSeekBar_tickMark
zendesk.chat.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
zendesk.chat.R$styleable: int MenuItem_actionProviderClass
zendesk.chat.ChatModel: zendesk.chat.SettingsProvider settingsProvider
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
zendesk.chat.ChatSession: void sendTyping(boolean)
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
zendesk.messaging.ui.AttachmentsIndicator
zendesk.chat.R$styleable: int Toolbar_collapseContentDescription
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
carnegietechnologies.gallery_saver.MediaType: carnegietechnologies.gallery_saver.MediaType[] values()
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
zendesk.chat.Form: boolean isComplete()
zendesk.chat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
zendesk.chat.ZendeskChatProvider: zendesk.chat.ChatProvidersStorage chatProvidersStorage
zendesk.chat.ChatSocketClient$Builder: okhttp3.OkHttpClient client
zendesk.chat.ChatObserverFactory$1: zendesk.chat.ChatContext val$chatContext
zendesk.chat.ChatEngineModule_ProvideIdProviderFactory
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String dt
zendesk.chat.ChatEngine: zendesk.chat.ChatBotMessagingItems chatBotMessagingItems
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
zendesk.chat.ChatLog: long getCreatedTimestamp()
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.AuthenticationService access$300(zendesk.chat.JwtLoginDetailsProvider)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_profileProvider: java.lang.Object get()
zendesk.chat.R$id: int search_badge
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
zendesk.chat.ConnectionStateMachine: ConnectionStateMachine()
zendesk.chat.R$styleable: int Toolbar_maxButtonHeight
zendesk.chat.ChatLog$Comment: boolean equals(java.lang.Object)
zendesk.chat.R$styleable: int[] SearchView
zendesk.chat.ZendeskSettingsProvider: zendesk.chat.ChatSettings getChatSettings()
zendesk.chat.ChatModel: zendesk.chat.ChatLogBlacklister chatLogBlacklister
zendesk.chat.R$styleable: int AppCompatTextView_autoSizeTextType
zendesk.chat.ZendeskSettingsProvider_Factory: javax.inject.Provider mainThreadPosterProvider
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
zendesk.chat.ChatConfiguration: boolean isPreChatFormEnabled()
zendesk.chat.ChatSession
zendesk.chat.Connection: zendesk.chat.NetworkConnectivity connectivity
zendesk.chat.ChatState: int queuePosition
zendesk.chat.ChatLogMapper: zendesk.messaging.MessagingItem convertChatRatingRequest(zendesk.chat.ChatLog,zendesk.messaging.AgentDetails)
com.google.android.material.circularreveal.CircularRevealFrameLayout
zendesk.chat.ZendeskProfileProvider_Factory: javax.inject.Provider mainThreadPosterProvider
zendesk.chat.R$color: int button_material_light
zendesk.chat.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
zendesk.chat.ZendeskChatProvider_Factory
zendesk.chat.R$styleable: int StateListDrawable_android_dither
com.google.android.material.floatingactionbutton.FloatingActionButton: FloatingActionButton(android.content.Context,android.util.AttributeSet)
zendesk.chat.TimerModule_ProvideHandlerFactory: java.lang.Object get()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
zendesk.chat.FileUploadListener
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: javax.inject.Provider idProvider
com.google.android.material.chip.Chip: void setMinLines(int)
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.SendCallbackManager sendCallbackManager
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
zendesk.chat.DataStore: zendesk.chat.ObservableData access$400(zendesk.chat.DataStore)
zendesk.chat.ChatSessionManager_Factory: javax.inject.Provider observableAuthenticatorProvider
zendesk.chat.ChatEngineModule_ChatFormStageFactory: javax.inject.Provider connectionProvider
zendesk.chat.ChatEngine$1: ChatEngine$1(zendesk.chat.ChatEngine,zendesk.messaging.AgentDetails)
zendesk.chat.DefaultChatSession: zendesk.chat.RequestSender requestSender
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
com.google.android.gms.internal.measurement.zzck$zza: com.google.android.gms.internal.measurement.zzck$zza zzd
zendesk.chat.ChatVisitorClient: zendesk.chat.ChatSession createNewSession(java.lang.String,java.lang.String,java.lang.String,zendesk.chat.VisitorPath)
com.google.android.gms.internal.measurement.zzca$zzb: java.lang.String zzj
zendesk.messaging.ConnectionState: zendesk.messaging.ConnectionState valueOf(java.lang.String)
zendesk.chat.MainThreadPoster$3$1: zendesk.chat.MainThreadPoster$3 this$1
zendesk.chat.ChatFormDriver: java.util.concurrent.atomic.AtomicBoolean hasShownMessageAcknowledgement
zendesk.chat.R$dimen: int abc_action_bar_icon_vertical_padding_material
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
zendesk.chat.ZendeskAccountProvider_Factory: javax.inject.Provider chatSessionManagerProvider
zendesk.chat.DefaultChatSession$19: zendesk.chat.ChatStateStore val$chatStateStore
zendesk.chat.AndroidModule_V1StorageFactory: zendesk.chat.BaseStorage get()
zendesk.chat.R$styleable: int[] AppCompatTextView
zendesk.chat.AndroidModule_MainHandlerFactory: zendesk.chat.AndroidModule_MainHandlerFactory INSTANCE
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_accountProvider: java.lang.Object get()
zendesk.chat.ZendeskProfileProvider: void setVisitorInfo(zendesk.chat.VisitorInfo,com.zendesk.service.ZendeskCallback)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
zendesk.chat.ZendeskProfileProvider_Factory: zendesk.chat.ZendeskProfileProvider get()
zendesk.chat.ChatEngineModule_CompositeActionListenerFactory: java.lang.Object get()
zendesk.chat.DeliveryStatusMonitor: void unregisterListener(long)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
zendesk.chat.UserAgentAndClientHeadersInterceptor_Factory: zendesk.chat.UserAgentAndClientHeadersInterceptor_Factory INSTANCE
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
zendesk.chat.ChatEngine$1: void onAction(java.lang.Object)
zendesk.chat.R$color: int abc_secondary_text_material_dark
zendesk.chat.DataStore: zendesk.chat.ConnectionStateMachine connectionStateMachine
zendesk.messaging.ui.MessageStatusView: MessageStatusView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.firebase.messaging.FirebaseMessagingRegistrar
zendesk.chat.TimerModule_TimerFactoryFactory: zendesk.chat.TimerModule_TimerFactoryFactory create(javax.inject.Provider)
zendesk.chat.R$attr: int buttonBarStyle
zendesk.chat.ZendeskProfileProvider: zendesk.chat.ObservableData access$000(zendesk.chat.ZendeskProfileProvider)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
zendesk.chat.DnUpdateModels$Chatting
zendesk.chat.R$dimen: int tooltip_horizontal_padding
com.google.android.material.card.MaterialCardView: float getRadius()
com.google.android.gms.internal.measurement.zzcd$zzg: boolean zzad
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.ChatConfiguration$Builder withAgentAvailabilityEnabled(boolean)
zendesk.chat.R$attr: int numericModifiers
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.google.android.gms.internal.measurement.zzbv$zzf
zendesk.chat.ChatEngineModule$2: void onAction(zendesk.messaging.components.bot.BotMessageDispatcher$ConversationState)
zendesk.chat.ChatProvidersModule: zendesk.chat.ObservableData observableJwtAuthenticator()
okhttp3.RequestBody: void writeTo(okio.BufferedSink)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_profileProvider: zendesk.chat.ProfileProvider get()
zendesk.chat.R$styleable: int AppCompatTheme_alertDialogTheme
zendesk.chat.R$color: int accent_material_dark
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
zendesk.chat.DefaultChatSession$1$1
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
zendesk.chat.Form: zendesk.chat.FormField getCurrentField()
zendesk.chat.R$id: int action_mode_bar
zendesk.chat.CacheManager_Factory: javax.inject.Provider observableChatStateProvider
zendesk.chat.DeliveryStatus$1
zendesk.chat.ChatFormDriver: zendesk.chat.ChatContext chatContext
zendesk.chat.DefaultChatSession$19: void onCompleted(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
zendesk.chat.ChatEngineModule_ProvideDateProviderFactory: zendesk.chat.ChatEngineModule_ProvideDateProviderFactory INSTANCE
com.google.android.gms.internal.measurement.zzcd$zzj
zendesk.chat.R$layout
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
zendesk.chat.DnModels$Account$Status
zendesk.chat.Attachment$Metadata
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
zendesk.chat.R$attr: int tickMark
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
zendesk.chat.DnUpdateModels$Field: DnUpdateModels$Field(java.lang.String,java.lang.String)
zendesk.chat.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
zendesk.chat.Tls12SocketFactory
zendesk.chat.DnModels$Connection$Status
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzii zzf
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
zendesk.chat.R$id: int search_go_btn
zendesk.chat.DnUpdateModels$ChatCommentValue: DnUpdateModels$ChatCommentValue(java.lang.String,zendesk.chat.DnUpdateModels$1)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
zendesk.messaging.ui.EndUserFileCellView: EndUserFileCellView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ViewStubCompat
zendesk.chat.AccountStatus: zendesk.chat.AccountStatus valueOf(java.lang.String)
zendesk.chat.JwtLoginDetailsProvider: java.util.Queue requestQueue
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus access$700(zendesk.chat.ChatConfiguration$Builder)
zendesk.chat.DefaultChatSession$4: void run()
zendesk.chat.ChatRating: zendesk.chat.ChatRating[] values()
zendesk.chat.DefaultChatStringProvider: java.lang.String preChatResponseAcceptedMessage()
zendesk.chat.R$attr: int colorError
zendesk.belvedere.SelectableView: void setContentDesc(boolean)
zendesk.chat.Attachment: java.io.File file
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
zendesk.chat.R$styleable: int SearchView_commitIcon
zendesk.chat.DefaultChatStringProvider_Factory: zendesk.chat.DefaultChatStringProvider_Factory create(javax.inject.Provider)
zendesk.chat.Clock$1: long nowMillis()
zendesk.chat.ChatForm: java.lang.String getValueOfField(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
zendesk.chat.R$attr: int logoDescription
zendesk.chat.ChatModel: void access$400(zendesk.chat.ChatModel,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
zendesk.chat.R$attr: int activityChooserViewStyle
zendesk.chat.R$color: int dim_foreground_material_light
zendesk.chat.IdentityManager$QueueItem: zendesk.chat.CompletionCallback access$000(zendesk.chat.IdentityManager$QueueItem)
zendesk.chat.ChatEngine$3: void onSuccess(java.lang.Object)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
zendesk.chat.R$string: int zch_pre_chat_name_field_message
zendesk.chat.R$id: int customPanel
zendesk.chat.R$style: int TextAppearance_AppCompat_Display4
zendesk.chat.ChatEngine_Factory: javax.inject.Provider engineStartedCompletionProvider
zendesk.chat.R$styleable: int FontFamilyFont_android_fontWeight
zendesk.chat.ChatEngineModule_ProvideBotMessageDispatcherFactory: javax.inject.Provider stateActionListenerProvider
zendesk.chat.ChatForm: zendesk.chat.TextField createEmailFormField(zendesk.chat.FormField$Status,zendesk.chat.ChatStringProvider,zendesk.messaging.AgentDetails,zendesk.chat.EmailInputValidator)
zendesk.chat.R$styleable: int MenuItem_android_onClick
zendesk.chat.ChatContext: boolean handedOverToChat
zendesk.chat.Connection: boolean send(zendesk.chat.PathValue,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatObserverFactory_Factory: zendesk.chat.ChatObserverFactory newInstance(java.lang.Object,zendesk.chat.ChatProvider,java.lang.Object)
zendesk.chat.Account
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
zendesk.chat.BaseStorage: void put(java.lang.String,java.lang.Object)
zendesk.chat.FileUploader$MeteredRequestBody: okhttp3.RequestBody access$200(zendesk.chat.FileUploader$MeteredRequestBody)
zendesk.chat.Frames$Message: java.util.List pathUpdates
zendesk.chat.R$styleable: int MenuView_android_verticalDivider
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
zendesk.chat.R$attr: int toolbarNavigationButtonStyle
zendesk.chat.ChatProvidersComponent$Builder: zendesk.chat.ChatProvidersComponent$Builder context(android.content.Context)
kotlinx.coroutines.scheduling.TaskMode: kotlinx.coroutines.scheduling.TaskMode[] values()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
zendesk.chat.SharedPreferencesStorage: void remove(java.lang.String)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_accountProvider
zendesk.chat.ConnectionStateMachine: void onWsStateChange(zendesk.chat.ChatSocketConnection$State)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
zendesk.chat.DnModels$Department$Status: zendesk.chat.DnModels$Department$Status valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzu
com.google.android.material.card.MaterialCardView: MaterialCardView(android.content.Context,android.util.AttributeSet)
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
zendesk.chat.R$id: int custom
zendesk.chat.DefaultChatSession$5
zendesk.chat.ChatEngineModule_ProvideBotMessageDispatcherFactory: java.lang.Object get()
zendesk.chat.R$drawable: int abc_list_selector_background_transition_holo_dark
zendesk.chat.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
zendesk.messaging.ui.EndUserFileCellView
zendesk.chat.DnConverterUtils: int queuePosition(zendesk.chat.DnModels$Channel)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
zendesk.chat.ChatRating: ChatRating(java.lang.String,int)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzo
com.google.android.gms.internal.measurement.zzcd$zza: int zzd
com.google.android.gms.internal.measurement.zzbv$zzd: com.google.android.gms.internal.measurement.zzbv$zzd zzi
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.google.android.material.card.MaterialCardView: void setRadius(float)
zendesk.chat.R$id: int blocking
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_accountProvider: DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_accountProvider(zendesk.chat.ChatProvidersComponent)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
zendesk.chat.RequestSender: zendesk.chat.DeliveryStatusMonitor deliveryStatusMonitor
io.flutter.embedding.engine.FlutterJNI: void attachToNative(boolean)
zendesk.chat.FormField: FormField(zendesk.chat.FormField$Status,java.lang.String)
zendesk.chat.DefaultChatSocketConnection: java.lang.String LOG_TAG
zendesk.chat.ChatLogMapper$1: int[] $SwitchMap$zendesk$chat$ChatLog$Type
zendesk.chat.ChatSocketConnection$State: zendesk.chat.ChatSocketConnection$State[] $VALUES
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.google.gson.reflect.TypeToken: boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)
zendesk.chat.BaseModule_GetOkHttpClientFactory: java.lang.Object get()
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
zendesk.chat.DnUpdateModels$PushToken
zendesk.chat.R$attr: int actionModePasteDrawable
androidx.appcompat.widget.AppCompatRadioButton
zendesk.chat.R$attr: int alphabeticModifiers
zendesk.chat.VisitorActiveSignal: VisitorActiveSignal(zendesk.chat.ConnectionStateMachine,java.util.concurrent.ScheduledExecutorService,zendesk.chat.VisitorActiveSignal$VisitorActiveRunnable)
zendesk.chat.R$anim: int abc_slide_in_top
zendesk.chat.R$attr: int textAppearanceSearchResultSubtitle
zendesk.chat.ChatModel: ChatModel(zendesk.chat.ConnectionProvider,zendesk.chat.ProfileProvider,zendesk.chat.SettingsProvider,zendesk.chat.ChatProvider,zendesk.chat.ChatObserverFactory,zendesk.chat.ChatBotMessagingItems,zendesk.chat.ObservableData,zendesk.chat.ChatConnectionSupervisor,zendesk.chat.ChatLogBlacklister,zendesk.chat.CacheManager)
zendesk.chat.DnModels$Profile: java.lang.String phone
zendesk.chat.DataStore: zendesk.chat.ObservableData observableChatPhase
zendesk.chat.VisitorInfo: java.lang.String phoneNumber
zendesk.chat.R$attr: int divider
zendesk.chat.R$styleable: int MenuView_android_windowAnimationStyle
zendesk.chat.DaggerChatProvidersComponent$Builder: zendesk.chat.DaggerChatProvidersComponent$Builder context(android.content.Context)
zendesk.chat.ChatVisitorClient$Builder: java.lang.String appName
zendesk.chat.R$attr: int arrowHeadLength
zendesk.chat.LoginDetailsFactory: zendesk.chat.LoginDetails buildAuthenticatedLoginDetails(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
zendesk.chat.R$string: int abc_activity_chooser_view_see_all
zendesk.messaging.ui.MessagingCellPropsFactory$InteractionType: zendesk.messaging.ui.MessagingCellPropsFactory$InteractionType[] values()
com.zendesk.logger.Logger$Priority: com.zendesk.logger.Logger$Priority[] values()
com.google.gson.reflect.TypeToken: java.lang.reflect.Type type
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
zendesk.chat.FileUploader$1: zendesk.chat.FileUploader this$0
com.google.gson.reflect.TypeToken: java.lang.Class rawType
zendesk.chat.ZendeskProfileProvider: zendesk.chat.ObservableData observableVisitorInfo
zendesk.chat.ChatObserverFactory$1: java.lang.String LOG_TAG
androidx.activity.ComponentActivity$2
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
zendesk.chat.DefaultChatSession$19
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
zendesk.chat.ZendeskChatProvider$3
zendesk.chat.R$styleable: int[] CoordinatorLayout_Layout
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
zendesk.chat.DefaultChatSession$11: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.R$attr: int colorButtonNormal
zendesk.chat.DefaultChatSocketConnection$1: int[] $SwitchMap$zendesk$chat$Frames$Command
androidx.lifecycle.Lifecycling$1
zendesk.chat.DnModels$Connection: java.lang.String server
zendesk.chat.R$style: int TextAppearance_Compat_Notification_Line2
zendesk.chat.R$string: int abc_capital_off
zendesk.chat.R$style: int TextAppearance_AppCompat_Inverse
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzan
zendesk.chat.ChatProvidersModule_ObservableChatStateFactory: zendesk.chat.ChatProvidersModule_ObservableChatStateFactory create()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
zendesk.chat.ChatForm: zendesk.chat.ChatForm createPreChatForm(zendesk.chat.ChatConfiguration,zendesk.chat.ChatStringProvider,zendesk.messaging.AgentDetails,zendesk.chat.EmailInputValidator,java.util.List,boolean,boolean)
zendesk.chat.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
zendesk.chat.R$styleable: int FontFamilyFont_fontStyle
zendesk.chat.AndroidModule_MainHandlerFactory
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
zendesk.chat.JwtLoginDetailsProvider$1: void onError()
zendesk.chat.ChatModel: zendesk.chat.ObservableData observableEngineStatus
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzii zzg
zendesk.chat.ZendeskProfileProvider$1: void update(java.lang.Object)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
zendesk.messaging.ui.AgentMessageView
zendesk.chat.JwtLoginDetailsProvider: java.lang.String LOG_TAG
zendesk.chat.DnModels$LiveChat: java.util.Map getDepartments()
zendesk.chat.ChatSocketClient: com.google.gson.Gson gson
zendesk.chat.MachineIdStorage$InMemory: java.lang.String loadMachineId()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
zendesk.chat.ChatFormStage
zendesk.chat.MainThreadPoster$4$1: void run()
zendesk.chat.PayloadChatTimeout: int hashCode()
zendesk.chat.DefaultChatSession$1: com.zendesk.service.ZendeskCallback val$callback
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
zendesk.chat.ChatSessionStatus: zendesk.chat.ChatSessionStatus CONFIGURING
zendesk.chat.DataNode: void removeKeysWithNullValues(com.google.gson.JsonObject,com.google.gson.JsonObject)
zendesk.chat.DnModels$ChatLog$Attachment: DnModels$ChatLog$Attachment(zendesk.chat.DnModels$ChatLog$Attachment$Metadata,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String)
zendesk.chat.ChatSocketClient: okhttp3.OkHttpClient client
zendesk.chat.Department: long id
zendesk.chat.R$color: int secondary_text_default_material_dark
zendesk.chat.IdentityManager$QueueItem: zendesk.chat.CompletionCallback completionCallback
zendesk.chat.ChatFormDriver: void next()
zendesk.chat.KeepAliveSignal$PingRunnable
androidx.lifecycle.SavedStateHandleController$OnRecreation
zendesk.chat.Frames$NewConnection: long getKeepAliveInterval()
zendesk.chat.ConnectionStateMachine$1
zendesk.chat.Tls12SocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
zendesk.chat.R$styleable: int ActionMode_height
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
zendesk.chat.PathValueSender$Request: PathValueSender$Request(zendesk.chat.PathValue,com.zendesk.service.ZendeskCallback,zendesk.chat.PathValueSender$1)
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider mainThreadPosterProvider
zendesk.chat.DefaultChatSocketConnection: void newConnectFrameReceived(zendesk.chat.Frames$Base)
zendesk.chat.R$attr: int homeAsUpIndicator
zendesk.chat.ChatSessionStatus: zendesk.chat.ChatSessionStatus valueOf(java.lang.String)
zendesk.chat.ChatModel: zendesk.chat.ProfileProvider profileProvider
com.google.android.material.internal.FlowLayout: int getRowCount()
zendesk.chat.R$attr: int spinnerDropDownItemStyle
zendesk.chat.DnModels$Agent
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
zendesk.chat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
zendesk.chat.R$styleable: int AppCompatTextView_drawableEndCompat
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
zendesk.chat.R$style: int Base_V21_Theme_AppCompat_Dialog
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
zendesk.chat.BaseModule_GetOkHttpClientFactory: zendesk.chat.BaseModule_GetOkHttpClientFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
zendesk.chat.R$styleable: int ColorStateListItem_android_color
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
zendesk.chat.DefaultChatSession$1$1: DefaultChatSession$1$1(zendesk.chat.DefaultChatSession$1)
zendesk.chat.AndroidModule_NetworkConnectivityFactory: AndroidModule_NetworkConnectivityFactory(javax.inject.Provider,javax.inject.Provider)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
zendesk.chat.R$styleable: int MenuItem_alphabeticModifiers
zendesk.chat.BaseModule_GetHttpLoggingInterceptorFactory: zendesk.chat.BaseModule_GetHttpLoggingInterceptorFactory INSTANCE
zendesk.chat.UserAgentAndClientHeadersInterceptor: UserAgentAndClientHeadersInterceptor()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzw)
zendesk.chat.ChatLogMapper_Factory: javax.inject.Provider contextProvider
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
zendesk.chat.NetworkConnectivityProvider: zendesk.chat.NetworkConnectivity$State getNetworkState(android.net.ConnectivityManager)
zendesk.chat.AnonymousLoginDetailsProvider$1: zendesk.chat.LoginDetailsFactory val$loginDetailsFactory
zendesk.chat.R$styleable: int AppCompatTheme_tooltipFrameBackground
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.MachineIdStorage machineIdStorage
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.widget.FitWindowsLinearLayout
zendesk.chat.R$styleable: int ActionBar_contentInsetRight
zendesk.chat.DnModels$Connection$Status: zendesk.chat.DnModels$Connection$Status CONNECTED
zendesk.chat.DefaultChatStringProvider: java.lang.String transcriptConfirmation(java.lang.String)
zendesk.chat.OfflineForm: OfflineForm(zendesk.chat.VisitorInfo,java.lang.String,java.lang.Long,java.lang.String)
zendesk.chat.R$styleable: int AppCompatTheme_actionBarDivider
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
zendesk.chat.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.google.android.material.textfield.TextInputLayout
zendesk.chat.ChatVisitorClient$Builder: java.lang.String appVersion
zendesk.chat.R$style: int Base_Theme_AppCompat_Dialog
zendesk.chat.PushData$Type
zendesk.chat.R$color: int material_grey_300
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
zendesk.chat.R$id: int text2
zendesk.chat.R$style: int Base_V21_Theme_AppCompat
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
zendesk.chat.R$drawable: int abc_ic_menu_share_mtrl_alpha
zendesk.chat.DnModels$ChatLog: DnModels$ChatLog(zendesk.chat.DnModels$ChatLog$Type,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,zendesk.chat.DnModels$ChatLog$Attachment,java.lang.Boolean,zendesk.chat.ChatRating,zendesk.chat.ChatRating,java.lang.String,java.lang.String,java.lang.String)
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider getHttpLoggingInterceptorProvider
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: java.lang.String getReason()
zendesk.chat.DefaultChatSession$10: void run()
zendesk.chat.ChatLog$Comment: java.lang.String getChatComment()
zendesk.chat.DnModels$Agent: DnModels$Agent()
zendesk.chat.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzbv$zzc zzh
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
zendesk.chat.R$attr: int expandActivityOverflowButtonDrawable
zendesk.chat.ZendeskChatProvider: zendesk.chat.ChatService chatService
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue chatRating(zendesk.chat.ChatRating)
zendesk.chat.Agent: java.lang.String nick
zendesk.chat.ChatEngine: void update(zendesk.messaging.Update)
zendesk.chat.TimerModule_ProvideHandlerFactory: android.os.Handler provideHandler()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
zendesk.chat.ChatConfiguration: zendesk.chat.FormField$Status getDepartmentFieldStatus()
zendesk.chat.R$attr: int actionModeFindDrawable
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
zendesk.messaging.ui.ResponseOptionView: ResponseOptionView(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatObserverFactory: zendesk.chat.ChatProvider access$300(zendesk.chat.ChatObserverFactory)
zendesk.chat.DefaultChatSession$4: DefaultChatSession$4(zendesk.chat.DefaultChatSession,java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.OkHttpWebSocket: OkHttpWebSocket(okhttp3.OkHttpClient,zendesk.chat.WebSocket$WebSocketListener)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Button
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider chatConfigProvider
zendesk.chat.MachineIdStorage: void saveMachineId(java.lang.String)
zendesk.chat.R$styleable: int AppCompatTheme_checkboxStyle
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
zendesk.chat.PayloadChatTimeout
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
zendesk.chat.ChatModel$1: void update(zendesk.chat.ChatEngine$Status)
zendesk.chat.ChatEngine: java.lang.String LOG_TAG
zendesk.chat.UserAgentAndClientHeadersInterceptor: java.lang.String userAgent
zendesk.chat.PathValue
zendesk.chat.R$string: int zch_request_transcript
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory: javax.inject.Provider contextProvider
zendesk.chat.ChatLogMapper_Factory: ChatLogMapper_Factory(javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ChatFormDriver$1: zendesk.chat.ChatFormStage$PreChatFormCompletion val$preChatFormCompletion
zendesk.chat.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
zendesk.chat.AnonymousLoginDetailsProvider: zendesk.chat.LoginDetails loginDetails
zendesk.chat.DnModels$Settings: zendesk.chat.DnModels$FileSending getFileSending()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
zendesk.chat.MainThreadPoster$3$1: java.lang.Object val$result
com.google.android.flexbox.FlexboxLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.material.internal.VisibilityAwareImageButton: VisibilityAwareImageButton(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$color: int abc_hint_foreground_material_light
zendesk.chat.R$layout: int notification_template_icon_group
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
zendesk.chat.UserAgentAndClientHeadersInterceptor_Factory
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.FormField$Status: zendesk.chat.FormField$Status OPTIONAL
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.ChatSocketConnection$State getState()
zendesk.chat.ChatAgentAvailabilityStage: void access$000(zendesk.chat.ChatAgentAvailabilityStage,zendesk.chat.Account,zendesk.chat.ChatContext)
zendesk.messaging.ObservableEngine: ObservableEngine()
zendesk.chat.ZendeskChatProvider: void getChatInfo(com.zendesk.service.ZendeskCallback)
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider chatObserverFactoryProvider
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
zendesk.chat.DnModels$ChatLog$Attachment: java.lang.String url
zendesk.chat.R$dimen: int abc_text_size_display_1_material
zendesk.chat.ChatModel_Factory: javax.inject.Provider cacheManagerProvider
zendesk.chat.IdentityManager_Factory: javax.inject.Provider mainThreadPosterProvider
zendesk.chat.MainThreadPoster$2$1
zendesk.chat.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
zendesk.chat.DnConverterUtils: zendesk.chat.ChatParticipant chatParticipant(java.lang.String)
zendesk.chat.R$attr: int layout_keyline
zendesk.chat.R$attr: int drawableSize
zendesk.chat.R$id: int action_bar_container
zendesk.chat.DnModels$Profile: java.lang.String getMachineId()
com.google.android.gms.internal.measurement.zzca$zzc: com.google.android.gms.internal.measurement.zzju zzg
zendesk.chat.ZendeskConnectionProvider$1
zendesk.chat.R$attr: int hideOnContentScroll
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.transition.ChangeBounds$7
zendesk.chat.ZendeskChatProvider$2
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
zendesk.chat.ZendeskProfileProvider: void setVisitorNote(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatStatusCheckStage$ChatStartedCompletion
zendesk.chat.ChatEngineModule_LifecycleOwnerFactory: ChatEngineModule_LifecycleOwnerFactory()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
zendesk.chat.ChatObserverFactory_Factory: zendesk.chat.ChatObserverFactory_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
zendesk.chat.R$dimen: int tooltip_vertical_padding
zendesk.chat.ChatModel_Factory: javax.inject.Provider profileProvider
zendesk.chat.DefaultChatStringProvider: java.lang.String offlineMessage()
zendesk.chat.R$styleable: int[] RecycleListView
zendesk.chat.TextField: zendesk.messaging.Update$State$UpdateInputFieldState getInputFieldState()
zendesk.chat.R$layout: int abc_popup_menu_header_item_layout
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
zendesk.chat.CacheManager_Factory
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider chatModelProvider
zendesk.messaging.ui.ResponseOptionView
zendesk.chat.DnConverterUtils: boolean hasChatEnded(zendesk.chat.ChatState,zendesk.chat.DnModels$Channel)
com.google.android.gms.measurement.internal.zzn: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatEngine$4: zendesk.messaging.Event$DialogItemClicked val$newEvent
zendesk.chat.ChatProvidersModule_ObservableChatStateFactory: java.lang.Object get()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzav
zendesk.chat.SendFileRequest
com.google.android.gms.internal.measurement.zzcd$zze: java.lang.String zzd
androidx.appcompat.view.menu.ExpandedMenuView
zendesk.chat.R$styleable: int MenuGroup_android_orderInCategory
zendesk.chat.ChatVisitorClient: zendesk.chat.ChatSession createNewSession(java.lang.String,java.lang.String,zendesk.chat.VisitorPath)
zendesk.chat.ChatModel: void sendInitialMessage(java.lang.String)
zendesk.chat.ZendeskProfileProvider: void appendVisitorNote(java.lang.String)
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus departmentFieldStatus
zendesk.chat.ChatEngineModule_LifecycleOwnerFactory
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
zendesk.chat.Attachment: java.lang.String url
zendesk.chat.MainThreadPoster$2$1: java.lang.Object val$data
zendesk.chat.LoginDetailsProvider
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
zendesk.chat.R$attr: int indeterminateProgressStyle
zendesk.chat.DnModels$ChatLog$Type: zendesk.chat.DnModels$ChatLog$Type MEMBER_JOIN
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
zendesk.chat.R$attr: int tooltipFrameBackground
zendesk.chat.R$style: int Base_Widget_AppCompat_ProgressBar
zendesk.chat.ChatProvidersModule_ObservableAccountFactory: zendesk.chat.ObservableData observableAccount()
zendesk.chat.DefaultChatSession$14: void run()
zendesk.chat.IdentityManager: zendesk.chat.CacheManager access$800(zendesk.chat.IdentityManager)
zendesk.chat.DefaultChatSession: void setVisitorNote(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.MessageAck$Status: zendesk.chat.MessageAck$Status OK
zendesk.chat.PathUpdate$1$1
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String url
zendesk.chat.BaseModule: BaseModule()
zendesk.chat.ChatEngine: ChatEngine(zendesk.chat.ConnectionProvider,zendesk.chat.ChatProvider,zendesk.chat.ProfileProvider,zendesk.chat.ChatStringProvider,zendesk.messaging.components.CompositeActionListener,zendesk.messaging.components.CompositeActionListener,zendesk.chat.ChatEngine$EngineStartedCompletion,zendesk.chat.ChatConversationOngoingChecker,zendesk.chat.ObservableData,zendesk.chat.ChatFormDriver,zendesk.chat.ChatBotMessagingItems,zendesk.chat.ObservableData)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
zendesk.chat.NetworkConnectivity
com.google.android.flexbox.FlexboxLayoutManager$LayoutParams: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$anim: int abc_slide_out_bottom
zendesk.chat.ChatLog$Comment: java.lang.String newChatComment
zendesk.chat.AuthenticationStorage$InMemory: zendesk.chat.AuthenticationWrapper authenticationWrapper
zendesk.chat.ChatConfiguration$Builder: boolean offlineFormEnabled
zendesk.chat.R$style: int TextAppearance_AppCompat_Tooltip
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
zendesk.chat.BaseModule_ScheduledExecutorServiceFactory: java.util.concurrent.ScheduledExecutorService scheduledExecutorService()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
zendesk.chat.WebSocket: int CLOSE_CODE_NORMAL
zendesk.chat.R$id: int tag_transition_group
zendesk.chat.ChatAgentAvailabilityStage$1: void onSuccess(java.lang.Object)
zendesk.chat.ChatLogMapper: java.lang.String CHAT_COMMENT_PROMPT_ID
zendesk.chat.ChatConfig: java.lang.String accountKey
zendesk.chat.OkHttpWebSocket: void connectTo(java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$attr: int fontProviderAuthority
zendesk.chat.DataNode$ObservableBranch
zendesk.chat.R$attr: int backgroundTint
zendesk.chat.BaseModule: okhttp3.OkHttpClient getOkHttpClient(okhttp3.logging.HttpLoggingInterceptor,zendesk.chat.UserAgentAndClientHeadersInterceptor,java.util.concurrent.ScheduledExecutorService,zendesk.chat.BaseStorage)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.widget.SearchView
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
zendesk.chat.DnModels$ChatLog: java.lang.String comment
zendesk.chat.DeliveryStatusMonitor
zendesk.chat.ZendeskProfileProvider: void addVisitorTags(java.util.List,com.zendesk.service.ZendeskCallback)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
zendesk.chat.R$dimen: int notification_action_icon_size
zendesk.chat.R$styleable: int Toolbar_logoDescription
zendesk.chat.BaseModule$1: java.lang.Thread newThread(java.lang.Runnable)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
zendesk.chat.R$attr: int srcCompat
zendesk.chat.R$styleable: int AppCompatTheme_dividerHorizontal
zendesk.chat.ChatStateStore$ChatLogMerger$1: zendesk.chat.ChatLog merge(zendesk.chat.ChatLog,zendesk.chat.DnModels$ChatLog)
zendesk.chat.R$string: int zch_pre_chat_phone_field_hint
zendesk.chat.R$dimen: int abc_dialog_min_width_minor
zendesk.messaging.EngineListRegistry: zendesk.messaging.EngineListRegistry[] values()
zendesk.chat.DefaultChatSocketConnection: java.lang.String socketId
zendesk.chat.ChatEngine: zendesk.chat.ObservableData engineStatusObservable
zendesk.chat.ChatLog$1: ChatLog$1()
zendesk.chat.R$styleable: int TextAppearance_android_shadowDy
zendesk.chat.R$dimen: int abc_control_padding_material
zendesk.chat.R$styleable: int CompoundButton_android_button
zendesk.chat.DefaultChatSession$20: DefaultChatSession$20(zendesk.chat.DefaultChatSession,long,java.lang.String,zendesk.chat.CompletionCallback)
zendesk.chat.R$styleable: int CompoundButton_buttonCompat
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
zendesk.chat.Chat: boolean hasIdentity()
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
kotlinx.coroutines.CancellableContinuationImpl: int _decision
zendesk.chat.R$id: int none
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzw)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
zendesk.chat.ChatConnectionSupervisor_Factory: zendesk.chat.ChatConnectionSupervisor newInstance(androidx.lifecycle.LifecycleOwner,zendesk.chat.ConnectionProvider)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzab)
zendesk.chat.R$styleable: int ActionBar_customNavigationLayout
zendesk.chat.DnUpdateModels$VisitorPathUpdate: DnUpdateModels$VisitorPathUpdate(java.lang.String,java.lang.String)
zendesk.chat.R$attr: int textAppearanceSmallPopupMenu
zendesk.chat.AuthenticationStorage$InMemory
androidx.savedstate.SavedStateRegistry$1
zendesk.chat.BaseStorage: void remove(java.lang.String)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
zendesk.chat.AnonymousLoginDetailsProvider: void getLoginDetails(zendesk.chat.CompletionCallback)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_chatProvider: zendesk.chat.ChatProvidersComponent chatProvidersComponent
zendesk.chat.ChatEngine: java.lang.String ENGINE_ID
zendesk.chat.IdentityManager: zendesk.chat.CacheManager cacheManager
zendesk.chat.DaggerChatSdkComponent$1
zendesk.chat.ChatConfiguration$Builder: boolean access$400(zendesk.chat.ChatConfiguration$Builder)
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
zendesk.chat.R$string: int abc_menu_meta_shortcut_label
zendesk.chat.ChatEngineModule_ProvideUpdateActionListenerFactory: java.lang.Object get()
zendesk.chat.R$styleable: int AppCompatTheme_ratingBarStyle
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
com.google.android.gms.internal.measurement.zzcd$zzb: com.google.android.gms.internal.measurement.zzju zzg
zendesk.chat.R$styleable: int ActionBar_popupTheme
zendesk.chat.R$color: int error_color_material_light
zendesk.chat.R$style: int Base_Widget_AppCompat_Button
zendesk.chat.FileUploader: zendesk.chat.Connection connection
zendesk.chat.R$anim
zendesk.chat.ChatStateStore$ChatLogMerger$2: zendesk.chat.ChatLog merge(zendesk.chat.ChatLog,zendesk.chat.DnModels$ChatLog)
zendesk.chat.R$id: int italic
zendesk.chat.ChatConfiguration$Builder: ChatConfiguration$Builder(zendesk.chat.ChatConfiguration$1)
zendesk.chat.PushData$Type: zendesk.chat.PushData$Type END
zendesk.chat.NetworkConnectivity$State: zendesk.chat.NetworkConnectivity$State DISCONNECTED
zendesk.chat.R$drawable: int abc_list_selector_holo_light
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String url
zendesk.chat.ObservableData: java.lang.Object getData()
zendesk.chat.SettingsProvider: zendesk.chat.ChatSettings getChatSettings()
zendesk.chat.ChatEngine: zendesk.chat.ChatConversationOngoingChecker chatConversationOngoingChecker
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
zendesk.chat.R$anim: R$anim()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_baseStorage: zendesk.chat.BaseStorage get()
zendesk.chat.DnModels$Connection$Status: zendesk.chat.DnModels$Connection$Status CONNECTING
zendesk.chat.ChatProvidersStorage: zendesk.chat.BaseStorage baseStorage
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzn
zendesk.chat.AndroidModule_BaseStorageFactory: zendesk.chat.BaseStorage baseStorage(android.content.Context,com.google.gson.Gson)
zendesk.chat.R$styleable: int Toolbar_navigationIcon
zendesk.chat.DefaultChatStringProvider: java.lang.String requestTranscriptText()
zendesk.chat.ChatConfiguration: java.util.List getConfigurations()
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
zendesk.chat.ChatModel_Factory: javax.inject.Provider connectionProvider
zendesk.chat.Chat: void resetIdentity()
zendesk.chat.R$attr: int thumbTintMode
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
zendesk.chat.R$id: int line1
zendesk.chat.DnModels$Channel: java.lang.Boolean isChatting()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_settingsProvider: java.lang.Object get()
zendesk.chat.Department: long getId()
zendesk.chat.SendCallbackManager: void onMessageAcksReceived(java.util.List)
zendesk.chat.R$styleable: int[] FontFamilyFont
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Display1
zendesk.chat.ChatFormStage: ChatFormStage(zendesk.chat.ConnectionProvider,zendesk.chat.ChatStatusCheckStage$ChatInitCompletion,zendesk.chat.ChatFormStage$PreChatFormCompletion,zendesk.chat.ChatFormStage$OfflineFormCompletion,zendesk.chat.ChatFormDriver,zendesk.messaging.components.bot.BotMessageDispatcher,zendesk.messaging.components.DateProvider,zendesk.messaging.components.IdProvider,zendesk.chat.ChatStringProvider,zendesk.chat.IdentityManager)
zendesk.chat.ChatSessionManager_Factory
zendesk.chat.DefaultChatStringProvider: java.lang.String offLineFormIntroduction()
zendesk.chat.MessageAck: java.lang.String error
zendesk.chat.R$attr: int showDividers
zendesk.chat.VisitorActiveSignal: zendesk.chat.VisitorActiveSignal$VisitorActiveRunnable activeRunnable
zendesk.chat.R$styleable: int AppCompatTextView_fontVariationSettings
zendesk.chat.R$dimen: int notification_right_side_padding_top
zendesk.chat.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
zendesk.chat.VisitorActiveSignal: long INTERVAL
zendesk.chat.DataStore: zendesk.chat.ObservableData observableAccount
zendesk.chat.ChatSettings: boolean equals(java.lang.Object)
zendesk.chat.DnModels$ChatLog$Type: zendesk.chat.DnModels$ChatLog$Type[] values()
zendesk.chat.DefaultChatSession$5: void run()
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice[] values()
zendesk.chat.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
zendesk.chat.ChatFormStage: zendesk.chat.IdentityManager identityManager
zendesk.chat.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
zendesk.chat.DnUpdateModels$VisitorInfoUpdate: java.lang.String phone
zendesk.chat.ChatSessionManager: java.lang.String appId
zendesk.chat.ChatForm: java.lang.String completionAcknowledgementMessage
zendesk.chat.ZendeskChatProvider: zendesk.chat.ChatLog$AttachmentMessage resendFailedFile(java.lang.String,zendesk.chat.FileUploadListener)
zendesk.chat.ChatAgentAvailabilityStage: void onChatInit(zendesk.chat.ChatContext)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus FAILED_INTERNAL_SERVER_ERROR
zendesk.chat.DataStore: zendesk.chat.ObservableData access$100(zendesk.chat.DataStore)
androidx.appcompat.widget.ContentFrameLayout
zendesk.chat.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
zendesk.chat.ChatEngineModule_ProvideUpdateActionListenerFactory: ChatEngineModule_ProvideUpdateActionListenerFactory(javax.inject.Provider)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
zendesk.chat.ConnectionStateMachine$1: int[] $SwitchMap$zendesk$chat$DnModels$Connection$Status
zendesk.chat.ChatLog$Message: boolean equals(java.lang.Object)
zendesk.chat.ZendeskChatProvider: zendesk.chat.MainThreadPoster access$100(zendesk.chat.ZendeskChatProvider)
zendesk.chat.ChatEngineModule_ProvideBotMessageDispatcherFactory
zendesk.chat.ObservableData: java.util.Set access$000(zendesk.chat.ObservableData)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
zendesk.chat.ChatSession: zendesk.chat.ConnectionStatus getConnectionStatus()
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
zendesk.chat.ZendeskSettingsProvider$1
zendesk.chat.ChatLogBlacklister
zendesk.chat.Connection$4: void onCompleted(java.lang.Object)
zendesk.chat.R$styleable: int CoordinatorLayout_keylines
zendesk.chat.R$attr: int textAppearanceLargePopupMenu
zendesk.chat.R$attr: int actionModeStyle
zendesk.chat.ChatEngineModule_CompositeActionListenerFactory: zendesk.messaging.components.CompositeActionListener compositeActionListener()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
zendesk.chat.PathUpdate$1: PathUpdate$1()
zendesk.chat.R$layout: int abc_dialog_title_material
com.google.firebase.iid.FirebaseInstanceId
zendesk.chat.ChatEngineModule_ProvideDateProviderFactory: zendesk.chat.ChatEngineModule_ProvideDateProviderFactory create()
zendesk.chat.ChatLog$AttachmentMessage: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
zendesk.chat.FileUploader: java.lang.String LOG_TAG
com.google.android.gms.internal.measurement.zzbv$zze: int zzd
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus access$902(zendesk.chat.ChatConfiguration$Builder,zendesk.chat.PreChatFormFieldStatus)
zendesk.chat.ZendeskChatProvider: void update(java.lang.Object)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
zendesk.chat.DnConverterUtils: DnConverterUtils()
zendesk.chat.R$style: int Platform_V25_AppCompat
zendesk.chat.ZendeskChatProvider: void observeChatState(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.ChatConfiguration$Builder withChatMenuActions(zendesk.chat.ChatMenuAction[])
com.google.android.gms.internal.measurement.zzck$zzb: double zzh
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
zendesk.chat.R$attr: int actionMenuTextColor
zendesk.chat.R$id: int wrap_content
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider chatLogMapperProvider
zendesk.chat.PathValue: int hashCode()
zendesk.chat.SendMessageRequest: long timestamp
zendesk.chat.R$styleable: int[] ColorStateListItem
zendesk.chat.BaseModule_GetOkHttpClientFactory
zendesk.chat.DnUpdateModels$ChatCommentValue
zendesk.chat.BaseModule_RetrofitFactory: BaseModule_RetrofitFactory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.material.internal.NavigationMenuItemView
zendesk.chat.FormField: zendesk.chat.FormField$Status getStatus()
zendesk.chat.ChatEngine_Factory: zendesk.chat.ChatEngine get()
zendesk.chat.MessageAck$Status: zendesk.chat.MessageAck$Status[] $VALUES
zendesk.chat.DnModels$Department$Status: zendesk.chat.DnModels$Department$Status AWAY
zendesk.chat.R$string: int abc_activitychooserview_choose_application
zendesk.chat.R$attr: int buttonTintMode
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
zendesk.chat.R$dimen: int notification_top_pad
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
zendesk.chat.DefaultChatSession$13: zendesk.chat.DefaultChatSession this$0
zendesk.chat.R$styleable: int StateListDrawable_android_visible
zendesk.chat.R$color: int switch_thumb_normal_material_dark
zendesk.chat.Frames$Command
zendesk.chat.R$attr: int contentInsetLeft
zendesk.chat.R$drawable: int abc_cab_background_top_material
zendesk.chat.DefaultChatStringProvider_Factory: zendesk.chat.DefaultChatStringProvider newInstance(android.content.Context)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
android.support.v4.media.MediaBrowserCompat$MediaItem
zendesk.chat.R$layout: int abc_alert_dialog_button_bar_material
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.MachineIdStorage machineIdStorage
zendesk.chat.ChatObserverFactory$2: zendesk.chat.ChatContext val$chatContext
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
zendesk.chat.ChatStateStore: void update(java.lang.Object)
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String machineId
zendesk.chat.IdentityManager$IdentityResetCompletion: com.zendesk.service.ZendeskCallback access$400(zendesk.chat.IdentityManager$IdentityResetCompletion)
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzju zzay
zendesk.chat.ChatLogMapper: zendesk.messaging.MessagingItem$FileQuery$FailureReason queryFailureReason(zendesk.chat.ChatLog)
zendesk.chat.DefaultChatStringProvider: java.lang.String emailFieldHint()
zendesk.chat.ChatProvidersComponent: zendesk.chat.ObservableData observableVisitorInfo()
zendesk.chat.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
zendesk.chat.ChatLog: zendesk.chat.ChatLog$Type getType()
zendesk.chat.R$styleable: int[] Toolbar
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider getOkHttpClientProvider
zendesk.chat.DnModels$Department: DnModels$Department(java.lang.String,zendesk.chat.DnModels$Department$Status)
com.zendesk.service.ZendeskCallback: ZendeskCallback()
zendesk.chat.R$styleable: int GradientColorItem_android_offset
zendesk.chat.BaseStorage: java.lang.Object get(java.lang.String,java.lang.Class)
zendesk.chat.FileUploader: java.lang.String SCHEME
zendesk.chat.ZendeskProfileProvider_Factory
zendesk.chat.DefaultChatSocketConnection: DefaultChatSocketConnection(com.google.gson.Gson,zendesk.chat.ChatSocketListener,zendesk.chat.LoginDetails,java.util.concurrent.ScheduledExecutorService)
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzii zzl
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.google.android.gms.internal.measurement.zzbv$zze: boolean zzg
androidx.appcompat.widget.AppCompatTextView
zendesk.belvedere.KeyboardHelper: int getCachedInset()
zendesk.chat.ChatProvidersModule: zendesk.chat.SettingsProvider settingsProvider(zendesk.chat.ZendeskSettingsProvider)
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
zendesk.chat.DefaultChatSession: zendesk.chat.RequestSender access$300(zendesk.chat.DefaultChatSession)
zendesk.chat.R$attr: int actionModeWebSearchDrawable
zendesk.chat.PushData: long getTimestamp()
zendesk.chat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
zendesk.chat.NetworkConnectivityProvider$3: void onAvailable(android.net.Network)
zendesk.chat.R$dimen: int abc_action_bar_default_padding_start_material
zendesk.chat.Connection$3: zendesk.chat.Connection this$0
zendesk.chat.VisitorInfo: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider identityManagerProvider
zendesk.chat.AndroidModule_MainHandlerFactory: AndroidModule_MainHandlerFactory()
zendesk.chat.ChatEngine$InputProcessor: void update(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_observableChatSettings: DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_observableChatSettings(zendesk.chat.ChatProvidersComponent)
zendesk.chat.DnUpdateModels$VisitorTypingStatus: DnUpdateModels$VisitorTypingStatus(boolean)
zendesk.chat.ChatConfiguration: zendesk.chat.ChatConfiguration from(java.util.List)
zendesk.chat.R$color: int secondary_text_default_material_light
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
zendesk.chat.MainThreadPoster$2: void onSuccess(java.lang.Object)
com.google.android.gms.internal.measurement.zzcd$zzf
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
zendesk.chat.DnModels$Connection$Status: zendesk.chat.DnModels$Connection$Status SHUTDOWN
zendesk.chat.PersistentCookieJar$Data: java.util.List access$100(zendesk.chat.PersistentCookieJar$Data)
zendesk.chat.R$id: int chronometer
zendesk.chat.R$styleable: int ActionBar_subtitleTextStyle
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
zendesk.chat.Attachment: java.lang.String name
zendesk.chat.ZendeskPushNotificationsProvider_Factory: zendesk.chat.ZendeskPushNotificationsProvider newInstance(com.google.gson.Gson,java.lang.Object)
zendesk.chat.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
zendesk.chat.DefaultChatStringProvider: java.lang.String offlineFormWelcomeMessage()
zendesk.chat.PayloadAuthenticatedVisitorLogin: boolean cookieLaw
zendesk.chat.R$id: int search_button
zendesk.chat.PathValue: boolean equals(java.lang.Object)
zendesk.chat.ChatStringProvider: java.lang.String requestTranscript()
zendesk.chat.R$id: int actions
com.google.android.gms.internal.measurement.zzcd$zzg: int zze
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzcd$zzc
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
zendesk.chat.Attachment: long size
zendesk.chat.R$styleable: int Toolbar_subtitleTextAppearance
zendesk.chat.ChatStatusCheckStage: ChatStatusCheckStage(zendesk.chat.ChatProvider,zendesk.chat.ChatStatusCheckStage$ChatInitCompletion,zendesk.chat.ChatStatusCheckStage$ChatStartedCompletion,zendesk.chat.ChatStatusCheckStage$ChatEndedCompletion,zendesk.messaging.components.bot.BotMessageDispatcher,zendesk.messaging.components.DateProvider,zendesk.messaging.components.IdProvider,zendesk.chat.ChatStringProvider)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
com.squareup.picasso.MediaStoreRequestHandler$PicassoKind: com.squareup.picasso.MediaStoreRequestHandler$PicassoKind valueOf(java.lang.String)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.Class)
zendesk.chat.MainThreadPoster$4: MainThreadPoster$4(zendesk.chat.MainThreadPoster,zendesk.chat.FileUploadListener)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
zendesk.chat.DnUpdateModels: java.util.List PATH_PROFILE
zendesk.chat.ChatConfiguration
zendesk.chat.R$styleable: int FontFamilyFont_android_font
zendesk.chat.R$layout: int abc_tooltip
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
zendesk.chat.AndroidModule_NetworkConnectivityFactory: javax.inject.Provider handlerProvider
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
zendesk.chat.DnUpdateModels$Chatting: boolean chatting
zendesk.chat.R$style: int Platform_V21_AppCompat
zendesk.chat.DnModels$ChatLog$Attachment: zendesk.chat.DnModels$ChatLog$Attachment$Metadata metadata
zendesk.chat.ChatEngine$InputProcessor: zendesk.chat.ChatEngine chatEngine
zendesk.messaging.ui.ArticlesResponseView: ArticlesResponseView(android.content.Context,android.util.AttributeSet)
zendesk.chat.IdentityManager$IdentityResetCompletion: boolean hasCompleted
zendesk.chat.MediatorEndpoint: java.lang.String baseUrl
zendesk.chat.ChatProvidersStorage: java.lang.String AUTHENTICATION_KEY
zendesk.chat.ZendeskChatProvider$3: zendesk.chat.ZendeskChatProvider this$0
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.WebSocket getWebSocket()
com.google.firebase.iid.Registrar: java.util.List getComponents()
zendesk.chat.DaggerChatProvidersComponent$Builder
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
zendesk.chat.ZendeskProfileProvider: zendesk.chat.VisitorInfo getVisitorInfo()
zendesk.chat.DaggerChatProvidersComponent: DaggerChatProvidersComponent(zendesk.chat.ChatConfig,android.content.Context,zendesk.chat.DaggerChatProvidersComponent$1)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
zendesk.chat.R$bool: int abc_config_actionMenuItemAllCaps
zendesk.chat.ChatEngine: zendesk.messaging.components.CompositeActionListener stateActionListener
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
zendesk.chat.ChatSession: void disconnect()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_connectionProvider: zendesk.chat.ChatProvidersComponent chatProvidersComponent
zendesk.chat.R$styleable: int Toolbar_navigationContentDescription
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
zendesk.chat.R$style: int Widget_AppCompat_ActionBar_TabBar
zendesk.chat.PreChatFormFieldStatus
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider profileProvider
zendesk.chat.ChatProvidersModule_ObservableChatStateFactory: zendesk.chat.ObservableData get()
zendesk.messaging.ui.InputBox: void setInputTextConsumer(zendesk.messaging.ui.InputBox$InputTextConsumer)
zendesk.chat.ChatForm: java.lang.String DEPT_FIELD_ID
zendesk.chat.ChatState: zendesk.chat.ChatRating chatRating
zendesk.chat.DataStore: zendesk.chat.ObservableData observableChatSettings
zendesk.chat.Chat: java.lang.String NOT_INITIALIZED_LOG
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.android.datatransport.TransportFactory determineFactory(com.google.android.datatransport.TransportFactory)
zendesk.chat.R$id: int bottom
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzii zze
zendesk.chat.R$drawable: int notification_bg_normal
zendesk.chat.Connection: void open()
zendesk.chat.Form
com.google.android.flexbox.FlexboxLayoutManager
zendesk.chat.DefaultChatSession$16: zendesk.chat.DefaultChatSession this$0
zendesk.chat.ConnectionStatus: zendesk.chat.ConnectionStatus CONNECTED
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
zendesk.chat.R$id: int title
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
zendesk.chat.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
zendesk.chat.PathUpdate$1: zendesk.chat.PathUpdate deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)
zendesk.chat.R$drawable: int notification_bg_low
zendesk.chat.TimerModule_TimerFactoryFactory: TimerModule_TimerFactoryFactory(javax.inject.Provider)
zendesk.chat.MainThreadPoster$2: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.NetworkConnectivityProvider$2
zendesk.chat.R$layout: int abc_activity_chooser_view_list_item
zendesk.chat.EmailInputValidator_Factory
zendesk.chat.Connection: zendesk.chat.DataNode dataNode
zendesk.chat.R$styleable: int MenuItem_iconTintMode
com.google.gson.reflect.TypeToken: TypeToken()
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
zendesk.chat.R$id: int async
zendesk.chat.DnUpdateModels$ChatMessage: java.lang.String type
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzju zzi
android.support.v4.media.session.PlaybackStateCompat
com.google.android.gms.common.internal.ReflectedParcelable
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
zendesk.chat.FrameMapper: int REMOTE_TIME_INDEX
zendesk.chat.ChatEngineModule_CompositeActionListenerFactory: zendesk.messaging.components.CompositeActionListener get()
zendesk.chat.ObservationScope: void invokeOnCancellation(java.lang.Runnable)
zendesk.chat.ZendeskConnectionProvider_Factory: javax.inject.Provider chatSessionManagerProvider
com.google.android.gms.internal.measurement.zzca$zzb: java.lang.String zze
zendesk.chat.R$attr: int actionDropDownStyle
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
zendesk.chat.R$attr: int titleTextAppearance
zendesk.chat.DefaultChatStringProvider: java.lang.String handoverWelcomeMessage()
zendesk.chat.R$attr: int fontWeight
zendesk.chat.R$dimen: int abc_text_size_display_2_material
zendesk.chat.AccountProvider: void observeAccount(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.ChatEngineModule_ChatFormStageFactory
zendesk.chat.R$color: int abc_btn_colored_borderless_text_material
zendesk.chat.R$styleable: int Toolbar_android_gravity
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
zendesk.messaging.ui.EndUserImageCellView
io.flutter.plugins.imagepicker.ImagePickerFileProvider
zendesk.chat.ChatObserverFactory$1: ChatObserverFactory$1(zendesk.chat.ChatObserverFactory,zendesk.chat.ChatContext,javax.inject.Provider)
zendesk.chat.R$styleable: int GradientColor_android_startY
zendesk.chat.ChatLog$AttachmentMessage
zendesk.chat.LoginDetailsFactory: java.lang.String accountKey
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzab)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
zendesk.chat.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
zendesk.chat.R$id: int select_dialog_listview
zendesk.chat.R$style: int Theme_AppCompat_DayNight_DarkActionBar
zendesk.chat.BaseModule_GetHttpLoggingInterceptorFactory
zendesk.chat.ChatEngineModule_ProvideCompositeUpdateListenerFactory
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
zendesk.chat.ChatEngine$InputProcessor: zendesk.chat.ChatProvider chatProvider
com.google.android.material.chip.Chip: float getIconEndPadding()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: boolean isHTTPError()
zendesk.chat.R$style: int Base_Widget_AppCompat_ActionBar_TabView
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
zendesk.chat.Chat: void setIdentity(zendesk.chat.JwtAuthenticator,zendesk.chat.CompletionCallback)
zendesk.chat.Frames: Frames()
zendesk.chat.R$color: int zch_color_white_100
zendesk.chat.R$attr: int windowFixedHeightMinor
zendesk.chat.FormField: java.lang.String getId()
zendesk.chat.R$attr: int actionModeSplitBackground
zendesk.chat.ChatModel: zendesk.chat.ChatObserverFactory chatProcessorFactory
zendesk.chat.DnUpdateModels$Notes$AppendNotes
zendesk.chat.R$color: int switch_thumb_disabled_material_dark
zendesk.chat.DefaultChatSession: void sendEmailTranscript(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.TextField$InputValidator: boolean validate(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
zendesk.chat.AuthenticationResponse: java.lang.String getState()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
zendesk.chat.R$dimen: int abc_dialog_fixed_height_major
zendesk.chat.DataStore: zendesk.chat.ChatStateStore access$000(zendesk.chat.DataStore)
com.google.firebase.provider.FirebaseInitProvider
zendesk.chat.DnConverterUtils: java.util.Map convertAgents(zendesk.chat.DnModels$LiveChat)
zendesk.chat.DnUpdateModels$PushToken: java.lang.String pushToken
zendesk.chat.R$attr: int voiceIcon
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzcd$zzk: long zzg
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
zendesk.chat.FrameFactory: long lastFrameTime
zendesk.chat.ChatVisitorClient
zendesk.chat.ChatEngineModule_EngineStatusObservableFactory
zendesk.chat.PayloadChatTimeout: boolean equals(java.lang.Object)
com.google.firebase.components.ComponentDiscoveryService
zendesk.chat.R$style: int Widget_AppCompat_Button_Borderless
zendesk.chat.R$styleable: int AppCompatTheme_dialogPreferredPadding
androidx.media.AudioAttributesImplApi21Parcelizer
zendesk.chat.R$id: int titleDividerNoCustom
zendesk.chat.WebSocket$WebSocketListener
zendesk.chat.ChatAgentAvailabilityStage: zendesk.chat.AccountProvider accountProvider
zendesk.chat.ChatConfig: java.lang.String appId
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus FAILED_RESPONSE_TIMEOUT
zendesk.chat.ZendeskSettingsProvider: zendesk.chat.ObservableData access$000(zendesk.chat.ZendeskSettingsProvider)
zendesk.chat.Department: zendesk.chat.DepartmentStatus status
zendesk.chat.ZendeskAccountProvider: void update(zendesk.chat.ChatSession)
zendesk.chat.DefaultChatSession$21: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.ChatStatusCheckStage: zendesk.chat.ChatStatusCheckStage$ChatStartedCompletion chatStartedCompletion
com.google.android.gms.internal.measurement.zzcd$zzg: long zzat
com.google.android.gms.measurement.module.Analytics
com.google.android.gms.internal.measurement.zzbv$zze: boolean zzh
zendesk.chat.BaseModule_GsonFactory: BaseModule_GsonFactory()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
zendesk.chat.R$dimen: int hint_pressed_alpha_material_dark
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
zendesk.chat.IdentityManager_Factory: zendesk.chat.IdentityManager get()
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterOverlaySurface
zendesk.chat.ChatEngineModule_ProvideBotMessageDispatcherFactory: zendesk.messaging.components.bot.BotMessageDispatcher get()
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String getSourceVersion()
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
zendesk.chat.R$attr: int buttonIconDimen
zendesk.chat.R$style: int Widget_AppCompat_Light_SearchView
zendesk.chat.DnModels$ChatLog$Attachment$Metadata: int height
zendesk.chat.ZendeskPushNotificationsProvider: com.google.gson.Gson gson
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
zendesk.chat.R$string: int zch_pre_chat_welcome_message
zendesk.chat.DefaultChatSession: void endChat(com.zendesk.service.ZendeskCallback)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
zendesk.chat.R$id: int textSpacerNoTitle
zendesk.chat.ChatModel: zendesk.chat.ConnectionProvider access$200(zendesk.chat.ChatModel)
zendesk.chat.DefaultChatStringProvider: java.lang.String offlineFormCompletionAcknowledgement()
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_settingsProvider: DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_settingsProvider(zendesk.chat.ChatProvidersComponent)
zendesk.chat.R$attr: int thickness
zendesk.chat.R$style: int Platform_V21_AppCompat_Light
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
zendesk.chat.Observer: void update(java.lang.Object)
zendesk.chat.R$layout: int support_simple_spinner_dropdown_item
zendesk.chat.R$styleable: int TextAppearance_textAllCaps
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
zendesk.chat.ZendeskPushNotificationsProvider: void registerPushToken(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.DataStore: zendesk.chat.ObservableData getObservableAccount()
zendesk.chat.ChatStateStore$ChatLogMerger$1: ChatStateStore$ChatLogMerger$1()
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzcd$zza zzh
zendesk.chat.DefaultChatSession$2: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.R$styleable: int AppCompatTheme_windowNoTitle
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
zendesk.chat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
zendesk.chat.ZendeskChatProvider$2: void update(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
zendesk.chat.ZendeskChatProvider: zendesk.chat.ObservableData observableAuthenticator
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
zendesk.chat.IdentityManager$IdentityResetCompletion: zendesk.chat.ChatSession chatSession
zendesk.chat.DaggerChatProvidersComponent$Builder: zendesk.chat.ChatProvidersComponent build()
zendesk.chat.ChatLog: ChatLog(java.lang.String,long,long,zendesk.chat.ChatLog$Type,zendesk.chat.ChatParticipant,java.lang.String,java.lang.String,zendesk.chat.DeliveryStatus)
zendesk.chat.R$styleable: int MenuItem_android_numericShortcut
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider baseStorageProvider
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
zendesk.chat.R$color: int abc_search_url_text_pressed
zendesk.chat.ChatProvidersScope
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String type
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
zendesk.chat.FrameFactory: com.google.gson.Gson gson
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
zendesk.chat.R$styleable: int MenuView_subMenuArrow
zendesk.chat.MainThreadPoster$4$1: zendesk.chat.MainThreadPoster$4 this$1
com.google.android.material.chip.ChipGroup
zendesk.chat.Frames$Base: long getRemoteSentTime()
zendesk.chat.ChatSessionManager$1: void update(java.lang.Object)
zendesk.chat.ChatSettings: long maxFileSize
zendesk.chat.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.google.android.gms.internal.measurement.zzbv$zze: com.google.android.gms.internal.measurement.zzbv$zzc zzf
zendesk.chat.R$id: int action_mode_close_button
zendesk.messaging.ui.SystemMessageView: SystemMessageView(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatLogMapper: java.lang.String IMAGE_MIME_PREFIX
com.google.android.gms.internal.measurement.zzca$zzb: int zzc
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String type
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
zendesk.chat.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
zendesk.chat.R$attr: int listPreferredItemPaddingRight
zendesk.chat.R$drawable: int abc_seekbar_thumb_material
com.google.android.material.button.MaterialButton: void setChecked(boolean)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
zendesk.chat.VisitorPath: java.lang.String getUrl()
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
zendesk.chat.BaseModule_GetOkHttpClientFactory: javax.inject.Provider baseStorageProvider
zendesk.chat.R$styleable: int LinearLayoutCompat_android_gravity
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
zendesk.chat.DnUpdateModels$VisitorInfoUpdate: DnUpdateModels$VisitorInfoUpdate(java.lang.String,java.lang.String,java.lang.String)
zendesk.chat.KeepAliveSignal: KeepAliveSignal(java.util.concurrent.ScheduledExecutorService)
zendesk.chat.ChatStatusCheckStage: zendesk.messaging.components.DateProvider dateProvider
zendesk.chat.ConnectionStateMachine
zendesk.chat.ChatProvidersModule_ObservableChatSettingsFactory: zendesk.chat.ChatProvidersModule_ObservableChatSettingsFactory INSTANCE
zendesk.chat.MachineIdStorage
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String title
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.Account: java.util.List getDepartments()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
zendesk.chat.ChatFormDriver: void drivePreChatFormCollection(zendesk.chat.ChatContext,java.util.List,boolean,zendesk.chat.ChatFormStage$PreChatFormCompletion)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzw)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
zendesk.chat.ChatInfo: boolean isChatting()
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
zendesk.chat.Frames$Message: java.util.List getMessageAck()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
zendesk.chat.MainThreadPoster$4$1: long val$bytesUploaded
zendesk.chat.ChatEngineModule_ProvideStateListenerFactory: ChatEngineModule_ProvideStateListenerFactory(javax.inject.Provider)
zendesk.chat.DnModels$ChatLog$Type: zendesk.chat.DnModels$ChatLog$Type MEMBER_LEAVE
androidx.versionedparcelable.ParcelImpl
zendesk.chat.DefaultChatSession$21: java.lang.String val$error
zendesk.chat.ChatConversationOngoingChecker$1: void onSuccess(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[])
zendesk.chat.ChatConfiguration: zendesk.chat.ChatConfiguration$Builder builder()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
zendesk.chat.R$attr: int fontProviderFetchTimeout
zendesk.chat.ChatConversationOngoingChecker_Factory: zendesk.chat.ChatConversationOngoingChecker newInstance(zendesk.chat.ChatProvider)
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue createPushTokenUpdate(java.lang.String)
zendesk.chat.DnConverterUtils: zendesk.chat.Account convertAccount(zendesk.chat.DnModels$LiveChat)
zendesk.chat.Frames$Base: zendesk.chat.Frames$Command getCommand()
com.google.android.gms.internal.measurement.zzhz$zzb: com.google.android.gms.internal.measurement.zzhp zzc
zendesk.chat.DnModels$FileSending: boolean isEnabled()
zendesk.chat.R$layout: int abc_action_mode_close_item_material
zendesk.chat.ObservationScope: boolean cancelled
zendesk.chat.ChatStateStore$ChatLogMerger
com.google.android.gms.internal.measurement.zzcd$zza: int zzc
zendesk.chat.R$attr: int color
zendesk.chat.Agent: java.lang.String displayName
zendesk.chat.ChatEngineModule_CompositeActionListenerFactory
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
zendesk.chat.PathValueSender: void processQueue()
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzcd$zzi zze
zendesk.chat.ChatSocketClient$Builder: okhttp3.OkHttpClient access$100(zendesk.chat.ChatSocketClient$Builder)
io.flutter.view.FlutterView: void setInitialRoute(java.lang.String)
zendesk.chat.PayloadAuthenticatedVisitorLogin: PayloadAuthenticatedVisitorLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.internal.measurement.zzbv$zzd: com.google.android.gms.internal.measurement.zzju zzj
zendesk.chat.R$styleable: int MenuItem_numericModifiers
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
zendesk.messaging.ObservableEngine: void isConversationOngoing(zendesk.messaging.Engine$ConversationOnGoingCallback)
zendesk.chat.R$anim: int abc_fade_out
zendesk.chat.R$attr: int defaultQueryHint
zendesk.chat.NetworkConnectivityProvider$2: NetworkConnectivityProvider$2(android.os.Handler)
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_observableChatSettings
zendesk.chat.ChatVisitorClient$Builder: java.lang.String baseUrl
zendesk.chat.PathValueSender: PathValueSender(zendesk.chat.Connection)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
zendesk.chat.R$attr: int searchViewStyle
zendesk.chat.R$attr: int switchMinWidth
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
zendesk.chat.ChatEngine$1: void onAction(zendesk.messaging.components.bot.BotMessageDispatcher$ConversationState)
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
zendesk.chat.DnModels$Profile: java.lang.String machineId
com.google.android.gms.internal.measurement.zzca$zzc: java.lang.String zzd
zendesk.chat.PathValueSender: zendesk.chat.Connection connection
zendesk.chat.ChatState: boolean equals(java.lang.Object)
zendesk.chat.DnModels$Account$Status: zendesk.chat.DnModels$Account$Status BANNED
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
zendesk.chat.MainThreadPoster_Factory: javax.inject.Provider mainHandlerProvider
zendesk.chat.DaggerChatProvidersComponent$Builder: zendesk.chat.ChatConfig chatConfig
zendesk.chat.FrameMapper: java.util.List stringsToPathUpdates(java.util.List)
zendesk.chat.TimerModule_ProvideHandlerFactory: TimerModule_ProvideHandlerFactory()
zendesk.chat.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
com.google.android.gms.internal.measurement.zzcd$zzk: com.google.android.gms.internal.measurement.zzju zzk
zendesk.chat.provider.R: R()
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides[] values()
zendesk.chat.R$style: int Base_Widget_AppCompat_ActionButton
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
zendesk.chat.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
zendesk.chat.ChatLogBlacklister_Factory: ChatLogBlacklister_Factory(javax.inject.Provider)
zendesk.chat.R$drawable: int abc_ic_voice_search_api_material
zendesk.chat.R$attr: int queryHint
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
androidx.appcompat.widget.SearchView: void setInputType(int)
zendesk.chat.R$styleable: int ViewBackgroundHelper_android_background
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider chatConversationOngoingCheckerProvider
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
zendesk.chat.Attachment$Metadata: boolean equals(java.lang.Object)
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.ObservableData observableVisitorInfo()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
zendesk.chat.ChatState: ChatState(java.lang.String,java.util.List,java.util.Map,int,boolean,zendesk.chat.ChatSessionStatus,zendesk.chat.ChatRating,java.lang.String,zendesk.chat.Department)
com.google.android.gms.internal.measurement.zzcd$zzd: com.google.android.gms.internal.measurement.zzju zzg
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
zendesk.chat.R$dimen: int abc_dialog_corner_radius_material
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
zendesk.chat.DaggerChatSdkComponent$Builder: zendesk.chat.ChatSdkComponent build()
zendesk.chat.DnUpdateModels$Notes
zendesk.chat.ChatObserverFactory_Factory: javax.inject.Provider chatProvider
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
zendesk.chat.DaggerChatSdkComponent: zendesk.chat.DaggerChatSdkComponent$Builder builder()
zendesk.chat.IdentityManager_Factory: zendesk.chat.IdentityManager newInstance(java.lang.Object,zendesk.chat.ObservableData,java.lang.Object,java.lang.Object,java.lang.Object)
zendesk.chat.ChatAgentAvailabilityStage: zendesk.chat.ChatStatusCheckStage$ChatInitCompletion chatInitCompletion
zendesk.chat.ChatEngine_Factory: javax.inject.Provider profileProvider
zendesk.chat.DeliveryStatus: int access$000(zendesk.chat.DeliveryStatus)
zendesk.chat.ChatStringProvider: java.lang.String skip()
zendesk.chat.ChatLog$OptionsMessage: int hashCode()
zendesk.chat.FrameMapper$1: int[] $SwitchMap$zendesk$chat$Frames$Command
zendesk.chat.R$color: int ripple_material_dark
zendesk.chat.R$id: int up
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory
zendesk.chat.R$styleable: int[] CompoundButton
zendesk.chat.DefaultChatStringProvider_Factory: DefaultChatStringProvider_Factory(javax.inject.Provider)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzii zzg
com.zendesk.service.ErrorResponseAdapter: java.lang.String getResponseBody()
zendesk.chat.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.R$layout: int notification_action_tombstone
zendesk.chat.ZendeskPushNotificationsProvider: void registerPushToken(java.lang.String)
zendesk.chat.R$attr: int fontStyle
zendesk.chat.R$styleable: R$styleable()
zendesk.chat.R$styleable: int GradientColor_android_type
zendesk.chat.R$attr: int actionModeCutDrawable
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
zendesk.chat.R$drawable: int abc_scrubber_control_off_mtrl_alpha
zendesk.chat.ChatFormDriver$2
zendesk.chat.R$dimen: int highlight_alpha_material_light
zendesk.chat.ChatConfiguration$Builder: boolean preChatFormEnabled
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
zendesk.chat.DnModels$Connection: boolean isServerReady()
zendesk.chat.R$color: int abc_hint_foreground_material_dark
zendesk.chat.AndroidModule_V1StorageFactory: javax.inject.Provider contextProvider
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzy
zendesk.chat.UserAgentAndClientHeadersInterceptor: java.lang.String X_ZENDESK_CLIENT_VERSION_HEADER_NAME
zendesk.chat.ChatLog$Comment: int hashCode()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
zendesk.chat.FormField$Status: zendesk.chat.FormField$Status[] $VALUES
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
zendesk.chat.R$styleable: int ActionBarLayout_android_layout_gravity
com.google.android.gms.internal.measurement.zzcd$zzf: com.google.android.gms.internal.measurement.zzii zzc
zendesk.chat.BaseStorage: void put(java.lang.String,java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
zendesk.chat.PayloadChatTimeout: zendesk.chat.PathValue defaultValues()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$drawable: int abc_ratingbar_material
zendesk.chat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
zendesk.chat.ChatModel_Factory: zendesk.chat.ChatModel get()
zendesk.chat.R$styleable: int AppCompatTheme_actionMenuTextColor
zendesk.chat.R$style: int Widget_AppCompat_Spinner_DropDown
zendesk.chat.ConnectionStatus: ConnectionStatus(java.lang.String,int)
com.google.android.material.datepicker.MaterialDatePicker
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus FAILED_FILE_SENDING_DISABLED
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
zendesk.chat.ChatConversationOngoingChecker$1: ChatConversationOngoingChecker$1(zendesk.chat.ChatConversationOngoingChecker,zendesk.messaging.Engine$ConversationOnGoingCallback,zendesk.messaging.Engine)
zendesk.chat.AnonymousLoginDetailsProvider: zendesk.chat.LoginDetailsFactory loginDetailsFactory
zendesk.chat.R$styleable: int SwitchCompat_android_textOn
zendesk.chat.PayloadAuthenticatedVisitorLogin: boolean isCookieLaw()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
zendesk.chat.R$id: int search_src_text
zendesk.chat.DepartmentStatus: zendesk.chat.DepartmentStatus[] values()
zendesk.chat.DefaultChatSession$18: java.io.File val$file
zendesk.chat.DnUpdateModels
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
zendesk.chat.DefaultChatStringProvider_Factory: java.lang.Object get()
zendesk.chat.R$style: int Base_V26_Widget_AppCompat_Toolbar
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
zendesk.chat.FormField$Status: zendesk.chat.FormField$Status valueOf(java.lang.String)
zendesk.chat.R$string: int abc_searchview_description_clear
zendesk.chat.Connection: void cancelScheduledReconnect()
zendesk.chat.ChatConfiguration$Builder: boolean access$202(zendesk.chat.ChatConfiguration$Builder,boolean)
zendesk.chat.R$styleable: int[] AnimatedStateListDrawableItem
zendesk.chat.SendCallbackManager$Transmission: java.util.concurrent.ScheduledFuture scheduledTimeout
androidx.versionedparcelable.CustomVersionedParcelable
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
com.google.android.datatransport.cct.CctBackendFactory
zendesk.chat.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
zendesk.chat.R$style: int Widget_AppCompat_Toolbar
zendesk.chat.DnConverterUtils: zendesk.chat.Department currentDepartment(zendesk.chat.DnModels$LiveChat)
zendesk.chat.R$styleable: int AppCompatTheme_colorBackgroundFloating
zendesk.chat.ChatLog$Message: int hashCode()
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
zendesk.chat.ChatStateStore$ChatLogMerger$2: ChatStateStore$ChatLogMerger$2()
io.flutter.view.FlutterView: float getDevicePixelRatio()
zendesk.chat.DnUpdateModels$VisitorInfoUpdate: java.lang.String displayName
zendesk.chat.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
zendesk.chat.DnModels$ChatLog
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.WebSocket webSocket
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
zendesk.chat.Form: java.util.List getNextMessagingItems()
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
zendesk.chat.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.google.android.gms.internal.measurement.zzhz: com.google.android.gms.internal.measurement.zzku zzb
zendesk.chat.NetworkConnectivityProvider: NetworkConnectivityProvider()
zendesk.chat.ZendeskAccountProvider: ZendeskAccountProvider(zendesk.chat.ChatSessionManager,zendesk.chat.MainThreadPoster,zendesk.chat.ChatService,zendesk.chat.ChatConfig,zendesk.chat.ObservableData)
zendesk.chat.R$styleable: int AppCompatTheme_listPreferredItemHeight
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
zendesk.chat.ChatProvidersModule_ObservableJwtAuthenticatorFactory: zendesk.chat.ChatProvidersModule_ObservableJwtAuthenticatorFactory create()
zendesk.chat.R$attr: int windowActionBarOverlay
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Small
zendesk.chat.R$color: int abc_tint_spinner
zendesk.chat.R$style: int Widget_AppCompat_CompoundButton_RadioButton
zendesk.messaging.MessagingItem$FileQuery$FailureReason: zendesk.messaging.MessagingItem$FileQuery$FailureReason[] values()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
zendesk.chat.DnModels: DnModels()
zendesk.messaging.Banner$Duration: zendesk.messaging.Banner$Duration[] values()
zendesk.chat.ChatState: zendesk.chat.Department department
com.google.android.gms.internal.measurement.zzcd$zze: long zzf
zendesk.chat.Connection: zendesk.chat.ChatSocketClient chatSocketClient
zendesk.chat.Account: int hashCode()
zendesk.messaging.ui.InputBox: void setInputTextWatcher(android.text.TextWatcher)
zendesk.chat.AndroidModule_MainHandlerFactory: zendesk.chat.AndroidModule_MainHandlerFactory create()
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider zendeskConnectionProvider
com.google.android.gms.measurement.AppMeasurementJobService
zendesk.chat.R$id: int action_container
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String appId
zendesk.chat.R$styleable: int ActionBar_divider
zendesk.chat.R$style: int Base_Widget_AppCompat_Button_Borderless
zendesk.chat.DnModels$ChatLog: java.lang.String messageOptions
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.gms.internal.measurement.zzcd$zzh: com.google.android.gms.internal.measurement.zzju zzg
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_Button
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
zendesk.chat.Connection$4
zendesk.chat.ZendeskAccountProvider
zendesk.chat.ChatVisitorClient: java.lang.String BASE_URL
com.google.android.gms.internal.measurement.zzhz: int zzc
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
zendesk.chat.DefaultChatSocketConnection: void abortReceived()
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzcd$zzg zzax
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
zendesk.chat.DnModels$Settings: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
zendesk.chat.DnModels$ChatLog$Attachment$Metadata
androidx.recyclerview.widget.RecyclerView: int getBaseline()
zendesk.chat.DefaultChatSession$11: DefaultChatSession$11(zendesk.chat.DefaultChatSession,java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.PushNotificationsProvider: void registerPushToken(java.lang.String)
zendesk.chat.R$styleable: int[] AppCompatTheme
com.google.android.material.chip.Chip: void setTextEndPadding(float)
zendesk.chat.ChatEngineModule_ChatFormStageFactory: javax.inject.Provider botMessageDispatcherProvider
zendesk.chat.DnUpdateModels$Notes: DnUpdateModels$Notes(zendesk.chat.DnUpdateModels$1)
zendesk.chat.ZendeskConnectionProvider: ZendeskConnectionProvider(zendesk.chat.ChatSessionManager,zendesk.chat.MainThreadPoster)
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
zendesk.chat.ChatAgentAvailabilityStage: java.lang.String LOG_TAG
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
zendesk.chat.R$style: int Base_V23_Theme_AppCompat
zendesk.chat.ProfileProvider: void appendVisitorNote(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.DnModels$Agent: java.lang.String displayName
com.google.android.gms.internal.measurement.zzca$zza: boolean zzf
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
zendesk.chat.R$attr: int buttonPanelSideLayout
zendesk.chat.Tls12SocketFactory: java.lang.String[] getSupportedCipherSuites()
zendesk.chat.R$id: int notification_main_column
zendesk.chat.Chat: java.lang.String BASE_URL
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.google.firebase.messaging.FirebaseMessaging
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
zendesk.chat.ChatFormDriver: void updateWithMessagingItems(zendesk.chat.ChatForm,java.util.List)
zendesk.chat.IdentityManager: boolean hasIdentity()
zendesk.chat.R$attr: int popupMenuStyle
zendesk.chat.ChatSocketClient$Builder: com.google.gson.Gson gson
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.lifecycle.SavedStateHandleController
zendesk.chat.ZendeskAccountProvider: zendesk.chat.MainThreadPoster mainThreadPoster
zendesk.chat.R$drawable: int notification_bg_low_pressed
zendesk.chat.R$dimen: int notification_big_circle_margin
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
zendesk.chat.Connection: java.lang.Runnable reconnection
zendesk.chat.ZendeskAccountProvider_Factory: java.lang.Object get()
zendesk.chat.ChatEngine: zendesk.chat.ConnectionProvider connectionProvider
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.google.android.gms.internal.measurement.zzbv$zzf: com.google.android.gms.internal.measurement.zzii zzg
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
zendesk.chat.DnUpdateModels$ChatMessage: long timestamp
zendesk.chat.NetworkConnectivityProvider$2: android.os.Handler val$handler
zendesk.chat.MessageIdGenerator: zendesk.chat.Clock clock
zendesk.chat.ChatEngine: zendesk.chat.ChatEngine engine()
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
zendesk.chat.ZendeskChatProvider: boolean deleteFailedMessage(java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zzk: int zzc
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String getType()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.R$attr: int goIcon
zendesk.chat.ConnectionProvider: zendesk.chat.ConnectionStatus getConnectionStatus()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
zendesk.chat.R$styleable: int AppCompatTheme_selectableItemBackground
zendesk.chat.R$styleable: int GradientColor_android_tileMode
zendesk.chat.R$drawable: int notify_panel_notification_icon_bg
zendesk.chat.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
zendesk.chat.ChatSocketClient$Builder: zendesk.chat.MediatorEndpoint access$000(zendesk.chat.ChatSocketClient$Builder)
zendesk.chat.CacheManager_Factory: zendesk.chat.CacheManager get()
androidx.appcompat.widget.ActionMenuView
zendesk.chat.R$styleable: int AppCompatTextView_autoSizeStepGranularity
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider defaultChatStringProvider
zendesk.chat.ChatProvidersModule_ObservableJwtAuthenticatorFactory: ChatProvidersModule_ObservableJwtAuthenticatorFactory()
zendesk.chat.ChatLogMapper: ChatLogMapper(android.content.Context,zendesk.chat.ChatLogBlacklister)
zendesk.chat.ChatAgentAvailabilityStage$AgentUnavailableContinuation: void onAgentUnavailable(zendesk.chat.ChatContext,java.util.List)
zendesk.chat.ChatProvider: zendesk.chat.ChatState getChatState()
zendesk.chat.R$string: int zch_pre_chat_introduction_message
zendesk.chat.R$styleable: int CoordinatorLayout_statusBarBackground
zendesk.chat.VisitorInfo: VisitorInfo(java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
zendesk.chat.ChatConnectionSupervisor_Factory
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
zendesk.chat.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
zendesk.chat.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
zendesk.chat.DeliveryStatusMonitor$1: void update(java.lang.Object)
zendesk.chat.DefaultChatSession$9
zendesk.messaging.ui.ResponseOptionsView: ResponseOptionsView(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatLogMapper: zendesk.messaging.Attachment attachment(zendesk.chat.Attachment)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat
zendesk.chat.ZendeskAccountProvider: zendesk.chat.Account getAccount()
zendesk.chat.BaseModule_GsonFactory
zendesk.chat.Request: void cancel()
zendesk.chat.R$styleable: int ActionBar_hideOnContentScroll
zendesk.chat.ChatStatusCheckStage$1: zendesk.chat.ChatContext val$chatContext
zendesk.chat.Observer
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
zendesk.chat.ChatEngineModule_CompositeActionListenerFactory: zendesk.chat.ChatEngineModule_CompositeActionListenerFactory create()
zendesk.chat.R$attr: int viewInflaterClass
zendesk.chat.DaggerChatSdkComponent
zendesk.chat.R$styleable: int AppCompatTheme_actionModeBackground
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_identityManager: zendesk.chat.ChatProvidersComponent chatProvidersComponent
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
zendesk.chat.ChatSessionManager$1: zendesk.chat.ChatSessionManager this$0
zendesk.chat.SendCallbackManager: zendesk.chat.SendCallbackManager create(java.util.concurrent.ScheduledExecutorService)
zendesk.chat.ChatContext: ChatContext(zendesk.messaging.MessagingApi,zendesk.messaging.Engine$UpdateObserver)
zendesk.chat.R$color: int primary_text_disabled_material_light
zendesk.chat.DefaultChatStringProvider: java.lang.String requestTranscriptEmailText()
zendesk.chat.R$attr: int ratingBarStyle
zendesk.chat.ChatSocketClient$Builder
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
zendesk.chat.ChatEngineModule_LifecycleOwnerFactory: androidx.lifecycle.LifecycleOwner lifecycleOwner()
zendesk.chat.DefaultChatSession$19: java.lang.String val$message
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzgh: int zza
zendesk.chat.R$style: int TextAppearance_AppCompat_Medium_Inverse
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
zendesk.chat.R$drawable: int abc_ic_star_half_black_48dp
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
zendesk.chat.R$attr: int editTextStyle
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.IdentityManager identityManager()
zendesk.chat.R$styleable: int MenuItem_android_titleCondensed
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.gms.internal.measurement.zzbv$zzf: boolean zzf
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
zendesk.chat.FrameMapper: zendesk.chat.Frames$Base transform(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
zendesk.chat.OkHttpWebSocket: zendesk.chat.WebSocket$WebSocketListener access$000(zendesk.chat.OkHttpWebSocket)
zendesk.chat.ZendeskProfileProvider_Factory: java.lang.Object get()
zendesk.chat.DaggerChatProvidersComponent$Builder: DaggerChatProvidersComponent$Builder(zendesk.chat.DaggerChatProvidersComponent$1)
zendesk.chat.R$drawable: int abc_text_select_handle_middle_mtrl_light
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
zendesk.chat.ObservationScope: java.util.Set cancellations
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
zendesk.chat.DnModels$Settings: zendesk.chat.DnModels$FileSending fileSending
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.core.graphics.drawable.IconCompat
zendesk.messaging.ui.AgentImageCellView: AgentImageCellView(android.content.Context,android.util.AttributeSet)
zendesk.messaging.ui.EndUserMessageView
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzcd$zze: double zzh
zendesk.chat.DnModels$ChatLog: java.lang.String messageId
zendesk.chat.NetworkConnectivity$State: zendesk.chat.NetworkConnectivity$State CONNECTED
zendesk.chat.DnModels$Account$Status: zendesk.chat.DnModels$Account$Status[] values()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
androidx.cardview.widget.CardView: int getContentPaddingRight()
zendesk.chat.ChatConfiguration$Builder: boolean agentAvailabilityEnabled
zendesk.chat.ChatSession: void sendOfflineForm(zendesk.chat.OfflineForm,com.zendesk.service.ZendeskCallback)
zendesk.chat.Chat: java.lang.String LOG_TAG
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
okhttp3.Protocol: okhttp3.Protocol[] values()
zendesk.chat.R$styleable
zendesk.messaging.ObservableEngine: boolean unregisterObserver(zendesk.messaging.Engine$UpdateObserver)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
zendesk.chat.FileUploader$MeteredRequestBody: java.lang.String access$100(zendesk.chat.FileUploader$MeteredRequestBody)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
zendesk.chat.ChatConfiguration: zendesk.chat.FormField$Status nameFieldStatus
androidx.recyclerview.widget.RecyclerView: int getScrollState()
zendesk.chat.DefaultChatSession: zendesk.chat.PathValueSender access$100(zendesk.chat.DefaultChatSession)
zendesk.chat.R$styleable: int[] View
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
zendesk.chat.ChatFormStage: zendesk.chat.ChatStatusCheckStage$ChatInitCompletion access$000(zendesk.chat.ChatFormStage)
zendesk.chat.R$color: R$color()
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.KeepAliveSignal keepAlive
zendesk.chat.NetworkConnectivity$State
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider chatEngineProvider
zendesk.chat.MessageAck: java.lang.String getId()
zendesk.chat.FormField$Status: FormField$Status(java.lang.String,int)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.DialogTitle
zendesk.chat.R$style: int Base_Widget_AppCompat_ButtonBar
zendesk.chat.DnUpdateModels$Notes$AppendNotes: java.lang.String notes
zendesk.chat.R$styleable: int[] ActivityChooserView
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
zendesk.chat.R$attr: int paddingEnd
zendesk.chat.ChatForm: java.lang.String extractMessage()
zendesk.chat.ChatEngineModule_ProvideCompositeUpdateListenerFactory: zendesk.messaging.components.CompositeActionListener provideCompositeUpdateListener()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
zendesk.chat.ChatFormDriver_Factory: javax.inject.Provider emailInputValidatorProvider
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[])
zendesk.chat.R$attr: int ratingBarStyleIndicator
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
zendesk.chat.SendCallbackManager: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
zendesk.chat.BaseStorage
zendesk.chat.ChatEngineModule_LifecycleOwnerFactory: java.lang.Object get()
zendesk.chat.R$style: int ThemeOverlay_AppCompat_ActionBar
zendesk.chat.DnUpdateModels$Notes$AppendNotes: DnUpdateModels$Notes$AppendNotes(java.lang.String)
zendesk.chat.DaggerChatSdkComponent$Builder: DaggerChatSdkComponent$Builder(zendesk.chat.DaggerChatSdkComponent$1)
zendesk.chat.ChatConfiguration: boolean offlineFormEnabled
zendesk.chat.DnUpdateModels$DepartmentPref: DnUpdateModels$DepartmentPref(java.lang.Long)
zendesk.chat.ChatLog$Type: zendesk.chat.ChatLog$Type valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
zendesk.chat.DefaultChatSession$6: long val$departmentId
zendesk.chat.ChatProvider: void setTyping(boolean)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzas
zendesk.chat.Connection: Connection(zendesk.chat.DataNode,zendesk.chat.ChatSocketClient,zendesk.chat.LoginDetailsProvider,zendesk.chat.NetworkConnectivity,java.util.concurrent.ScheduledExecutorService,zendesk.chat.ConnectionStateMachine,java.util.Set)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue createVisitorActive()
zendesk.chat.DefaultChatSession$1
zendesk.chat.R$dimen: int notification_large_icon_width
zendesk.chat.BaseModule_ScheduledExecutorServiceFactory
zendesk.chat.Connection$2: void update(zendesk.chat.ConnectionStatus)
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter waiters
zendesk.chat.DnModels$Channel: DnModels$Channel(java.lang.Boolean,java.util.Map,java.lang.Integer,zendesk.chat.ChatRating,java.lang.String,java.lang.Long)
zendesk.chat.ChatStringProvider: java.lang.String nameFieldHint()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
zendesk.chat.PathUpdate: PathUpdate(java.util.List,com.google.gson.JsonObject)
zendesk.chat.R$styleable: int[] PopupWindow
zendesk.chat.FileUploader$1
zendesk.chat.R$styleable: int CoordinatorLayout_Layout_layout_behavior
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_context
zendesk.chat.R$dimen: int abc_dialog_fixed_height_minor
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
zendesk.chat.OkHttpWebSocket$1
com.google.android.gms.internal.measurement.zzca$zzb: boolean zzk
zendesk.chat.R$styleable: int AppCompatTheme_colorPrimaryDark
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
zendesk.chat.IdentityManager: zendesk.chat.ObservableData observableJwtAuthenticator
zendesk.chat.Attachment$Metadata: int hashCode()
zendesk.chat.DefaultChatSession$6: DefaultChatSession$6(zendesk.chat.DefaultChatSession,com.zendesk.service.ZendeskCallback,long)
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
zendesk.chat.DefaultChatSession: zendesk.chat.ChatLog$Message sendMessage(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.DefaultChatSession$7: zendesk.chat.VisitorInfo val$visitorInfo
zendesk.chat.Attachment: java.lang.String getName()
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
zendesk.chat.R$styleable: int AppCompatTheme_buttonBarStyle
zendesk.chat.ChatState: int getQueuePosition()
zendesk.chat.ChatEngine$4: void onError(com.zendesk.service.ErrorResponse)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
zendesk.chat.DefaultChatSession: void update(zendesk.chat.ChatPhase)
zendesk.chat.LoginDetailsFactory: java.lang.String userAgent
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
zendesk.chat.ZendeskChatProvider$2: zendesk.chat.ZendeskChatProvider this$0
zendesk.chat.DefaultChatSession$3: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.R$id: int list_item
zendesk.chat.DefaultChatSession: void setDepartment(long,com.zendesk.service.ZendeskCallback)
zendesk.chat.FileUploader: java.lang.String DEFAULT_MIME_TYPE
zendesk.chat.ChatNetworkModule: zendesk.chat.ChatService chatService(retrofit2.Retrofit)
zendesk.chat.DataStore: zendesk.chat.ObservableData getObservableChatSettings()
zendesk.chat.ChatProvidersModule_ObservableAccountFactory
zendesk.chat.ChatEngineModule: zendesk.chat.ChatFormStage chatFormStage(zendesk.chat.ConnectionProvider,zendesk.chat.ChatModel,zendesk.chat.ChatFormDriver,zendesk.messaging.components.bot.BotMessageDispatcher,zendesk.messaging.components.DateProvider,zendesk.messaging.components.IdProvider,zendesk.chat.ChatStringProvider,zendesk.chat.IdentityManager)
zendesk.chat.ChatConversationOngoingChecker
zendesk.chat.ZendeskSettingsProvider_Factory: javax.inject.Provider chatSessionManagerProvider
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
zendesk.chat.AndroidModule_NetworkConnectivityFactory: javax.inject.Provider contextProvider
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
zendesk.chat.UserAgentAndClientHeadersInterceptor
zendesk.chat.R$id: int action_mode_bar_stub
zendesk.chat.ObservableData: void notifyObservers(java.lang.Object)
zendesk.chat.Chat: zendesk.chat.Chat[] $VALUES
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
zendesk.chat.Connection: void close()
zendesk.chat.R$style: int Base_Animation_AppCompat_DropDownUp
zendesk.chat.R$anim: int abc_fade_in
zendesk.chat.DnModels$FileSending
zendesk.chat.NetworkConnectivityProvider$2: void onAvailable(android.net.Network)
zendesk.chat.ZendeskPushNotificationsProvider_Factory: zendesk.chat.ZendeskPushNotificationsProvider get()
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzap
zendesk.chat.ChatConfiguration: boolean isAgentAvailabilityEnabled()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
zendesk.chat.FileUploader$1: zendesk.chat.CompletionCallback val$completionCallback
com.google.android.gms.internal.measurement.zzcd$zzj: int zzc
zendesk.chat.R$dimen: int abc_text_size_display_3_material
zendesk.chat.ChatSession: void addVisitorTags(java.util.List,com.zendesk.service.ZendeskCallback)
com.zendesk.service.ZendeskCallback: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.R$styleable: int[] AppCompatImageView
zendesk.chat.ChatConfiguration: zendesk.chat.PreChatFormFieldStatus map(zendesk.chat.FormField$Status)
zendesk.chat.OkHttpWebSocket$1: void onClosed(okhttp3.WebSocket,int,java.lang.String)
zendesk.chat.MainThreadPoster$2$1: zendesk.chat.MainThreadPoster$2 this$1
zendesk.chat.DnConverterUtils: zendesk.chat.Attachment$Metadata metadata(zendesk.chat.DnModels$ChatLog$Attachment)
zendesk.chat.R$id: int time
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.AuthenticationService authenticationService
zendesk.chat.AndroidModule_V1StorageFactory: java.lang.Object get()
zendesk.chat.R$layout: int notification_template_custom_big
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
zendesk.chat.SendCallbackManager: java.util.Map indexedTransactions
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.FrameFactory getFrameFactory()
zendesk.chat.R$style: int Base_Theme_AppCompat_Light
zendesk.chat.ChatSessionManager_Factory: java.lang.Object get()
zendesk.chat.ChatObserverFactory: zendesk.chat.ChatConnectionSupervisor access$000(zendesk.chat.ChatObserverFactory)
zendesk.chat.ZendeskProfileProvider
zendesk.chat.FileUploader: void send(java.lang.String,java.io.File,zendesk.chat.FileUploadListener,zendesk.chat.CompletionCallback)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver
zendesk.chat.DnUpdateModels$Notes$SetNotes
zendesk.chat.PathValue: java.util.List getPath()
zendesk.chat.ChatLogMapper
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzbv$zzf: com.google.android.gms.internal.measurement.zzju zzi
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
zendesk.chat.R$styleable: int MenuView_android_itemTextAppearance
zendesk.chat.FrameMapper
zendesk.chat.ChatService: retrofit2.Call getAccount(java.lang.String)
zendesk.chat.R$drawable: int abc_ic_menu_cut_mtrl_alpha
zendesk.chat.ChatLogMapper_Factory: zendesk.chat.ChatLogMapper_Factory create(javax.inject.Provider,javax.inject.Provider)
io.flutter.plugins.firebasemessaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
zendesk.chat.Clock$1
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionBar_TabText
zendesk.chat.DaggerChatProvidersComponent$Builder: zendesk.chat.DaggerChatProvidersComponent$Builder chatConfig(zendesk.chat.ChatConfig)
zendesk.chat.ChatForm: java.lang.String MESSAGE_FIELD_ID
zendesk.chat.DefaultChatStringProvider
zendesk.chat.NetworkConnectivityProvider$3: NetworkConnectivityProvider$3()
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
okio.ForwardingSink: java.lang.String toString()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$drawable: int abc_seekbar_track_material
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
zendesk.chat.OkHttpWebSocket: boolean DEBUG
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.google.android.gms.internal.measurement.zzcd$zzi
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
zendesk.chat.ZendeskAccountProvider$1: ZendeskAccountProvider$1(zendesk.chat.ZendeskAccountProvider)
zendesk.chat.R$attr: int listItemLayout
zendesk.chat.R$styleable: int AppCompatTheme_buttonStyleSmall
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_connectionProvider
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzk
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
zendesk.chat.R$dimen: int tooltip_y_offset_touch
zendesk.chat.DnModels: java.util.List PATH_CONNECTION_STATUS
zendesk.chat.FormField: java.lang.String getValue()
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
zendesk.chat.R$style: int Widget_AppCompat_PopupMenu
zendesk.chat.FormField: java.lang.String value
zendesk.chat.ChatStatusCheckStage: zendesk.messaging.components.IdProvider idProvider
zendesk.chat.R$drawable: int abc_action_bar_item_background_material
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
zendesk.belvedere.MediaIntent: android.os.Parcelable$Creator CREATOR
zendesk.chat.ZendeskConnectionProvider$1: void update(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
zendesk.chat.ChatSessionStatus: zendesk.chat.ChatSessionStatus[] $VALUES
zendesk.chat.DepartmentField: zendesk.messaging.MessagingItem$Option optionFromObject(zendesk.chat.Department)
zendesk.chat.ChatSessionStatus: zendesk.chat.ChatSessionStatus ENDING
zendesk.chat.FrameMapper$1
zendesk.chat.R$attr: int buttonTint
com.google.android.material.appbar.AppBarLayout$BaseBehavior
zendesk.chat.ProfileProvider: void addVisitorTags(java.util.List,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatLog$Message
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
zendesk.chat.ChatStringProvider: java.lang.String offlineFormMessagePrompt()
zendesk.chat.FrameFactory
zendesk.chat.OfflineForm$Builder
zendesk.chat.R$id: int search_voice_btn
zendesk.chat.ChatState: zendesk.chat.Department getDepartment()
zendesk.chat.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
zendesk.chat.ChatProvider: void observeChatState(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider provideBotMessageDispatcherProvider
zendesk.chat.FrameFactory: java.lang.String generateRawMessage(zendesk.chat.Frames$Command,java.lang.Object)
zendesk.chat.R$attr: int overlapAnchor
zendesk.chat.R$attr: int iconTint
zendesk.chat.DnUpdateModels$ChatRatingValue: DnUpdateModels$ChatRatingValue(zendesk.chat.ChatRating,zendesk.chat.DnUpdateModels$1)
com.google.android.material.textview.MaterialTextView
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
zendesk.chat.RequestSender: void onCompleted(zendesk.chat.DeliveryStatus)
zendesk.chat.R$styleable: int DrawerArrowToggle_spinBars
com.google.android.gms.internal.measurement.zzbv$zzd: int zzd
zendesk.chat.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
zendesk.chat.PathValueSender$1
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
zendesk.chat.VisitorActiveSignal$VisitorActiveRunnable: VisitorActiveSignal$VisitorActiveRunnable(zendesk.chat.Connection,zendesk.chat.VisitorActiveSignal$1)
zendesk.chat.AuthenticationResponse: boolean success
zendesk.chat.ChatProvidersModule_ObservableVisitorInfoFactory: zendesk.chat.ObservableData observableVisitorInfo()
zendesk.chat.DnModels$ChatLog$Type: DnModels$ChatLog$Type(java.lang.String,int)
zendesk.chat.provider.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
zendesk.chat.ChatStateStore$ChatLogMerger$1: zendesk.chat.ChatLog$AttachmentMessage merge(zendesk.chat.ChatLog$AttachmentMessage,zendesk.chat.DnModels$ChatLog)
zendesk.chat.ChatConfiguration: boolean isOfflineFormEnabled()
zendesk.belvedere.BelvedereFileProvider
zendesk.chat.IdentityManager$IdentityResetCompletion$1: zendesk.chat.IdentityManager$IdentityResetCompletion this$1
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzw)
zendesk.chat.SharedPreferencesStorage_Factory: SharedPreferencesStorage_Factory(javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ChatLog$OptionsMessage: java.util.List messageOptions
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
zendesk.chat.Connection$4: Connection$4(zendesk.chat.Connection)
zendesk.chat.DefaultChatSession$5: java.lang.String val$departmentName
zendesk.chat.R$drawable: int abc_list_focused_holo
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: float getChipStartPadding()
androidx.savedstate.Recreator
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
zendesk.messaging.MessagingViewModel
zendesk.chat.R$layout: int select_dialog_multichoice_material
zendesk.chat.ChatLog: java.lang.String id
zendesk.chat.R$style: int Base_DialogWindowTitle_AppCompat
zendesk.chat.ChatSocketClient$1: zendesk.chat.ChatSocketClient this$0
zendesk.chat.Frames$Message: java.util.List getPathUpdates()
zendesk.chat.R$color: int foreground_material_light
com.google.android.material.chip.ChipGroup: int getChipCount()
zendesk.chat.ZendeskSettingsProvider$1: void update(java.lang.Object)
zendesk.chat.NetworkConnectivityProvider: zendesk.chat.NetworkConnectivity INSTANCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_context: zendesk.chat.ChatProvidersComponent chatProvidersComponent
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
zendesk.chat.R$string: int zch_end_chat
zendesk.chat.R$dimen: int abc_text_size_subtitle_material_toolbar
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
zendesk.chat.R$layout: int abc_action_bar_title_item
zendesk.chat.R$dimen: int abc_disabled_alpha_material_dark
zendesk.chat.ChatFormDriver$1: zendesk.chat.ChatContext val$chatContext
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
zendesk.chat.Attachment: java.io.File getFile()
zendesk.chat.IdentityManager_Factory: zendesk.chat.IdentityManager_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
zendesk.chat.R$styleable: int Toolbar_contentInsetStart
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
zendesk.chat.R$styleable: int AppCompatTheme_windowFixedHeightMajor
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.FrameFactory frameFactory
zendesk.chat.ChatEngineModule_LifecycleOwnerFactory: androidx.lifecycle.LifecycleOwner get()
zendesk.chat.ChatProvider: zendesk.chat.ChatLog$AttachmentMessage resendFailedFile(java.lang.String,zendesk.chat.FileUploadListener)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
zendesk.chat.DefaultChatSession$20: zendesk.chat.DefaultChatSession this$0
zendesk.chat.ChatProvidersModule_ObservableVisitorInfoFactory: zendesk.chat.ObservableData get()
zendesk.chat.ChatLog$Comment: ChatLog$Comment(java.lang.String,long,long,zendesk.chat.ChatParticipant,java.lang.String,java.lang.String,zendesk.chat.DeliveryStatus,java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: float getChipIconSize()
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
zendesk.chat.BaseModule_GetOkHttpClientFactory: javax.inject.Provider loggingInterceptorProvider
zendesk.chat.R$drawable: int abc_ic_menu_overflow_material
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
zendesk.chat.DnUpdateModels: java.util.List PATH_CHAT_BUTTON
zendesk.chat.JwtLoginDetailsProvider$1: zendesk.chat.CompletionCallback val$callback
zendesk.chat.R$id: int multiply
zendesk.chat.SharedPreferencesStorage_Factory: zendesk.chat.SharedPreferencesStorage newInstance(android.content.SharedPreferences,com.google.gson.Gson)
zendesk.chat.ChatSession: void sendEmailTranscript(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatFormStage$PreChatFormCompletion: void onPreChatFormCompleted(zendesk.chat.ChatContext,zendesk.chat.VisitorInfo,zendesk.chat.Department,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
zendesk.chat.MessageAck: zendesk.chat.MessageAck$Status status
zendesk.chat.PathUpdate$1$1: PathUpdate$1$1(zendesk.chat.PathUpdate$1)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
zendesk.chat.ChatSettings: java.util.Set getAllowedFileTypes()
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String userAgent
zendesk.chat.ChatConfig: java.lang.String getAccountKey()
zendesk.chat.ChatModel$2: ChatModel$2(zendesk.chat.ChatModel,java.lang.String,zendesk.chat.ChatContext,zendesk.chat.Department)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete
zendesk.chat.R$styleable: int AppCompatTheme_dialogCornerRadius
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider chatSessionManagerProvider
zendesk.chat.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
zendesk.chat.R$styleable: int FontFamilyFont_fontVariationSettings
zendesk.chat.Connection$5: int[] $SwitchMap$zendesk$chat$ChatSocketConnection$State
zendesk.chat.R$attr: int actionButtonStyle
zendesk.chat.R$styleable: int AppCompatImageView_tintMode
zendesk.chat.DnUpdateModels$Tags$NewTags
zendesk.chat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.ChatProvidersComponent: zendesk.chat.CacheManager cacheManager()
zendesk.chat.R$drawable: int abc_seekbar_tick_mark_material
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
zendesk.chat.R$attr: int track
zendesk.chat.PathUpdate: java.util.List path
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
zendesk.chat.R$anim: int abc_popup_exit
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
zendesk.chat.Attachment: boolean equals(java.lang.Object)
zendesk.chat.UserAgentAndClientHeadersInterceptor_Factory: zendesk.chat.UserAgentAndClientHeadersInterceptor_Factory create()
zendesk.chat.PushData: java.lang.String author
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
zendesk.chat.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider chatServiceProvider
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
zendesk.chat.Connection: java.lang.String LOG_TAG
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
zendesk.chat.OkHttpWebSocket$1: OkHttpWebSocket$1(zendesk.chat.OkHttpWebSocket)
com.google.android.material.chip.Chip: void setChipTextResource(int)
zendesk.chat.ChatState: java.util.List getAgents()
zendesk.chat.ChatLogBlacklister: java.util.Set blacklistedLogIds
zendesk.chat.R$style: int Base_Theme_AppCompat_Dialog_Alert
zendesk.chat.DaggerChatProvidersComponent$Builder: DaggerChatProvidersComponent$Builder()
zendesk.chat.DefaultChatSession$16
zendesk.chat.VisitorInfo$Builder: java.lang.String phoneNumber
androidx.lifecycle.FullLifecycleObserverAdapter
zendesk.chat.ZendeskConnectionProvider_Factory: zendesk.chat.ZendeskConnectionProvider get()
zendesk.chat.DaggerChatProvidersComponent: void initialize(zendesk.chat.ChatConfig,android.content.Context)
zendesk.chat.ChatEngine: void isConversationOngoing(zendesk.messaging.Engine$ConversationOnGoingCallback)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.zendesk.service.ErrorResponseAdapter: ErrorResponseAdapter(java.lang.String)
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
zendesk.chat.R$style: int Theme_AppCompat_Dialog
zendesk.chat.VisitorInfo$Builder: VisitorInfo$Builder(zendesk.chat.VisitorInfo$1)
zendesk.chat.DnModels$Profile: java.lang.String getPhone()
zendesk.chat.DnModels$FileSending: java.lang.String getAllowedExtensions()
zendesk.chat.DnUpdateModels$Field: java.lang.String name
zendesk.chat.ChatModel$3: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.ChatEngineModule_ProvideDateProviderFactory: java.lang.Object get()
com.google.android.gms.internal.measurement.zzbv$zzd: java.lang.String zzf
zendesk.chat.ChatStatusCheckStage$1
zendesk.chat.ChatSocketListener: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.ChatLog$AttachmentMessage: ChatLog$AttachmentMessage(java.lang.String,long,long,zendesk.chat.ChatParticipant,java.lang.String,java.lang.String,zendesk.chat.DeliveryStatus,zendesk.chat.Attachment)
zendesk.chat.MainThreadPoster$1
zendesk.chat.FrameMapper: boolean isMessageAck(java.lang.String)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
zendesk.chat.DnModels$Connection$Status: zendesk.chat.DnModels$Connection$Status ERROR
zendesk.chat.ChatConfiguration: ChatConfiguration(zendesk.chat.ChatConfiguration$Builder,zendesk.chat.ChatConfiguration$1)
zendesk.chat.ChatEngineModule_ProvideStateListenerFactory: java.lang.Object get()
zendesk.chat.ChatEngineModule_ChatFormStageFactory: javax.inject.Provider chatModelProvider
zendesk.chat.R$string: int zch_pre_chat_name_field_hint
io.flutter.embedding.android.FlutterSplashView$SavedState
zendesk.chat.FrameFactory: void checkAndUpdateRemoteSequenceNumber(long)
zendesk.chat.VisitorActiveSignal: boolean active
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
zendesk.chat.ChatEngineModule_CompositeActionListenerFactory: ChatEngineModule_CompositeActionListenerFactory()
zendesk.chat.DefaultChatSession$21: void onSuccess(java.lang.Object)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
zendesk.chat.ChatStateStore: ChatStateStore()
zendesk.chat.ZendeskChatProvider$1: void onSuccess(java.lang.Void)
zendesk.chat.ChatBotMessagingItems_Factory: ChatBotMessagingItems_Factory()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
zendesk.chat.OfflineForm$Builder: zendesk.chat.OfflineForm build()
zendesk.chat.Chat: void setIdentity(zendesk.chat.JwtAuthenticator)
zendesk.chat.DefaultChatSession$3
zendesk.chat.R$drawable
zendesk.chat.SendCallbackManager$1: zendesk.chat.SendCallbackManager this$0
zendesk.chat.R$layout: int abc_action_menu_layout
zendesk.chat.R$string: int zch_pre_chat_email_field_message
zendesk.chat.BaseModule_RetrofitFactory: zendesk.chat.BaseModule_RetrofitFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ChatSession: zendesk.chat.ChatLog$Message resendFailedMessage(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.commonui.CacheFragment
com.google.android.gms.internal.measurement.zzij: com.google.android.gms.internal.measurement.zzij[] values()
zendesk.chat.ChatMenuAction: zendesk.chat.ChatMenuAction[] $VALUES
zendesk.chat.FileUploader$1: void onFailure(okhttp3.Call,java.io.IOException)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
zendesk.chat.ChatFormStage: zendesk.chat.ChatStatusCheckStage$ChatInitCompletion chatInitCompletion
zendesk.chat.DnModels$ChatLog$Attachment: long size
zendesk.messaging.ui.AvatarView: AvatarView(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$attr: int state_above_anchor
androidx.lifecycle.LiveData$LifecycleBoundObserver
zendesk.chat.R$drawable: int abc_cab_background_top_mtrl_alpha
zendesk.chat.AndroidModule_MainHandlerFactory: android.os.Handler mainHandler()
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider getChatAgentAvailabilityStageProvider
zendesk.chat.Department: boolean equals(java.lang.Object)
zendesk.chat.OfflineForm$Builder: OfflineForm$Builder(java.lang.String,zendesk.chat.OfflineForm$1)
zendesk.chat.ProfileProvider: void observeVisitorInfo(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.ChatConfig: java.lang.String getBaseUrl()
zendesk.chat.R$dimen: int abc_action_bar_content_inset_with_nav
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider zendeskProfileProvider
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider provideUpdateActionListenerProvider
zendesk.chat.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.google.android.material.internal.VisibilityAwareImageButton
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_cacheManager
androidx.cardview.widget.CardView: float getCardElevation()
zendesk.chat.DefaultChatSession: void observeAccount(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.FileUploader$MeteredRequestBody: FileUploader$MeteredRequestBody(java.lang.String,java.io.File,zendesk.chat.FileUploadListener)
zendesk.chat.DataNode: void localUpdate(zendesk.chat.PathValue)
zendesk.chat.ChatSocketClient: ChatSocketClient(zendesk.chat.ChatSocketClient$Builder)
zendesk.chat.BaseModule_RetrofitFactory
zendesk.chat.ChatFormDriver$1: java.util.List val$departments
zendesk.chat.IdentityManager
zendesk.chat.R$attr: int progressBarPadding
zendesk.chat.MediatorEndpoint: MediatorEndpoint(java.lang.String,zendesk.chat.Clock)
zendesk.chat.ChatBotMessagingItems: java.util.List get()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.AccountProvider accountProvider()
zendesk.chat.Frames$Command: zendesk.chat.Frames$Command[] values()
zendesk.chat.ChatEngineModule_ProvideIdProviderFactory: zendesk.chat.ChatEngineModule_ProvideIdProviderFactory INSTANCE
zendesk.chat.DnConverterUtils: java.lang.String getChatId(zendesk.chat.DnModels$LiveChat)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
zendesk.chat.ObservableData: void setData(java.lang.Object)
zendesk.chat.OkHttpWebSocket$1: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
zendesk.chat.SendCallbackManager$1
zendesk.chat.R$style: int Widget_AppCompat_RatingBar_Indicator
zendesk.chat.MainThreadPoster$4
zendesk.chat.DnUpdateModels$Notes$SetNotes: DnUpdateModels$Notes$SetNotes(java.lang.String)
zendesk.chat.ChatConfig: zendesk.chat.VisitorPath visitorPath
zendesk.chat.DefaultChatSession: com.zendesk.service.ZendeskCallback access$000(com.zendesk.service.ZendeskCallback,java.lang.String)
zendesk.chat.ChatEngine: java.util.concurrent.atomic.AtomicBoolean access$200(zendesk.chat.ChatEngine)
zendesk.chat.TextField: java.lang.String hintText
zendesk.chat.R$styleable: int LinearLayoutCompat_android_orientation
zendesk.chat.R$attr: int searchHintIcon
zendesk.chat.DaggerChatProvidersComponent$1
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
zendesk.chat.R$attr: int spinnerStyle
zendesk.chat.BuildConfig: java.lang.String BUILD_TYPE
zendesk.chat.R$color: int error_color_material_dark
android.support.v4.media.session.ParcelableVolumeInfo
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
zendesk.chat.R$id: int tag_unhandled_key_event_manager
zendesk.chat.DaggerChatSdkComponent$Builder: zendesk.chat.ChatProvidersComponent chatProvidersComponent
zendesk.chat.AuthenticationResponse: AuthenticationResponse(java.lang.String,java.lang.String,long,boolean,java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
zendesk.chat.ChatSessionManager: void reset()
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Medium
zendesk.chat.R$style: int Base_Widget_AppCompat_SearchView
zendesk.chat.PersistentCookieJar$Data: PersistentCookieJar$Data(java.util.List)
zendesk.chat.ChatLog$Type
zendesk.chat.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
zendesk.chat.OkHttpWebSocket: java.lang.String LOG_TAG
com.google.android.material.internal.BaselineLayout: int getBaseline()
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider baseStorageProvider
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
zendesk.chat.Connection: void considerReconnect()
zendesk.chat.DnModels$Channel: int hashCode()
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
zendesk.chat.ChatLogBlacklister: ChatLogBlacklister(zendesk.chat.BaseStorage)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
zendesk.chat.ChatEngine$InputProcessor: zendesk.chat.ObservableData observableSettings
zendesk.chat.ChatObserverFactory: zendesk.chat.ChatProvider chatProvider
com.google.android.gms.internal.measurement.zzcd$zzb: long zze
zendesk.chat.R$style: int Widget_AppCompat_Light_ActivityChooserView
zendesk.chat.R$attr: int actionProviderClass
zendesk.chat.ChatFormStage$1: zendesk.chat.ChatContext val$chatContext
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
zendesk.chat.ChatEngineModule_ProvideBotMessageDispatcherFactory: zendesk.messaging.components.bot.BotMessageDispatcher provideBotMessageDispatcher(zendesk.messaging.components.bot.BotMessageDispatcher$MessageIdentifier,zendesk.messaging.components.ActionListener,zendesk.messaging.components.ActionListener,zendesk.messaging.components.Timer$Factory)
zendesk.chat.JwtLoginDetailsProvider: com.zendesk.service.RetrofitZendeskCallbackAdapter createAuthenticationCallback(zendesk.chat.CompletionCallback)
zendesk.chat.ChatProvider: void setDepartment(java.lang.String,com.zendesk.service.ZendeskCallback)
okhttp3.RequestBody: long contentLength()
zendesk.chat.R$attr: int popupTheme
zendesk.chat.IdentityManager$IdentityResetCompletion$1: void onError(com.zendesk.service.ErrorResponse)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.material.appbar.AppBarLayout: AppBarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.R$color: int material_blue_grey_800
zendesk.chat.DnModels$Department: java.lang.String name
com.google.android.gms.internal.measurement.zzhw: com.google.android.gms.internal.measurement.zzhw[] values()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_chatProvider: DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_chatProvider(zendesk.chat.ChatProvidersComponent)
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.ConnectionProvider connectionProvider()
zendesk.chat.ChatSettings: boolean isFileSendingEnabled()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
zendesk.chat.R$styleable: int TextAppearance_android_textSize
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
zendesk.chat.DefaultChatSession: void enqueue(java.lang.Runnable)
zendesk.chat.R$styleable: int AppCompatTheme_searchViewStyle
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider chatProvider
androidx.recyclerview.widget.RecyclerView
zendesk.chat.FrameFactory: long localSequenceNumber
zendesk.chat.R$color: int secondary_text_disabled_material_light
com.squareup.picasso.MediaStoreRequestHandler$PicassoKind: com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] values()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String ref
com.google.android.material.bottomappbar.BottomAppBar
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
zendesk.chat.R$attr: int fontProviderPackage
zendesk.chat.R$attr: int coordinatorLayoutStyle
zendesk.chat.R$styleable: int[] GradientColorItem
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
zendesk.chat.R$id: int uniform
zendesk.chat.Clock: long nowMillis()
zendesk.chat.R$dimen: R$dimen()
zendesk.chat.R$attr: int dividerPadding
zendesk.chat.R$dimen: int abc_text_size_menu_material
zendesk.chat.NetworkConnectivity$State: zendesk.chat.NetworkConnectivity$State valueOf(java.lang.String)
okio.ForwardingSink: void close()
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
zendesk.chat.ChatSocketClient: okhttp3.OkHttpClient access$500(zendesk.chat.ChatSocketClient)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
zendesk.chat.Frames$Command: zendesk.chat.Frames$Command ABORT
zendesk.chat.DefaultChatSession$10: DefaultChatSession$10(zendesk.chat.DefaultChatSession,zendesk.chat.OfflineForm,com.zendesk.service.ZendeskCallback)
zendesk.chat.IdentityManager$IdentityResetCompletion$2: void onSuccess(java.lang.Void)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzj
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
zendesk.chat.R$attr: int autoSizeTextType
com.google.android.material.circularreveal.cardview.CircularRevealCardView
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.ObservableData observableAccount()
zendesk.chat.R$dimen: int abc_action_bar_subtitle_top_margin_material
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
zendesk.chat.ChatSession: void observeAccount(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.R$id: int add
zendesk.chat.OkHttpWebSocket$1: void onClosing(okhttp3.WebSocket,int,java.lang.String)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
zendesk.chat.DeliveryStatus$1: int getStatus()
zendesk.chat.DefaultChatSession$7: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue chatTranscript(java.lang.String)
zendesk.chat.ChatLog$Message: java.lang.String getMessage()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_accountProvider: zendesk.chat.ChatProvidersComponent chatProvidersComponent
zendesk.chat.Connection: long RECONNECTION_DELAY
zendesk.chat.ChatParticipant: ChatParticipant(java.lang.String,int)
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
zendesk.chat.ConnectionStatus: zendesk.chat.ConnectionStatus FAILED
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
zendesk.chat.R$id: int image
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
zendesk.chat.R$styleable: int SearchView_queryHint
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider zendeskChatProvider
zendesk.chat.R$attr: int windowFixedHeightMajor
zendesk.chat.ChatEngineModule_ProvideDateProviderFactory: ChatEngineModule_ProvideDateProviderFactory()
zendesk.chat.DnModels$FileSending: DnModels$FileSending(java.lang.Boolean,java.lang.String,long)
zendesk.chat.R$string: int abc_action_mode_done
io.flutter.view.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
zendesk.chat.R$styleable: int LinearLayoutCompat_android_baselineAligned
zendesk.chat.ChatEngineModule_ProvideBotMessageIdentifierFactory: zendesk.chat.ChatEngineModule_ProvideBotMessageIdentifierFactory INSTANCE
zendesk.chat.R$styleable: int RecycleListView_paddingTopNoTitle
zendesk.chat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
zendesk.chat.MainThreadPoster$3: void onCompleted(java.lang.Object)
zendesk.chat.CacheManager: zendesk.chat.ObservableData observableAccount
zendesk.chat.ChatMenuAction: zendesk.chat.ChatMenuAction CHAT_TRANSCRIPT
zendesk.chat.R$string: int zch_pre_chat_email_field_invalid_message
zendesk.chat.ChatModel$2: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.MachineIdStorage$InMemory: void clearMachineId()
zendesk.chat.ChatEngineModule: zendesk.messaging.components.ActionListener provideStateListener(zendesk.messaging.components.CompositeActionListener)
zendesk.chat.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
zendesk.chat.ChatSocketConnection$State: ChatSocketConnection$State(java.lang.String,int)
zendesk.chat.R$color: int abc_primary_text_material_light
com.google.android.gms.internal.measurement.zzbv$zzf$zzb: com.google.android.gms.internal.measurement.zzbv$zzf$zzb[] values()
zendesk.chat.ChatStateStore: zendesk.chat.ChatLog$Message deleteLocalMessageLog(java.lang.String)
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
zendesk.chat.R$style: int Base_V7_Widget_AppCompat_EditText
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory: javax.inject.Provider chatProvidersStorageProvider
zendesk.chat.ChatLog$Type: zendesk.chat.ChatLog$Type[] $VALUES
zendesk.chat.ChatBotMessagingItems_Factory: zendesk.chat.ChatBotMessagingItems newInstance()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
zendesk.chat.VisitorInfo: VisitorInfo(java.lang.String,java.lang.String,java.lang.String,zendesk.chat.VisitorInfo$1)
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
zendesk.chat.BaseModule: com.google.gson.Gson gson()
zendesk.chat.R$dimen: int compat_button_padding_vertical_material
com.google.android.gms.internal.measurement.zzcd$zzb: int zzc
zendesk.chat.SendCallbackManager: SendCallbackManager(java.util.concurrent.ScheduledExecutorService,long)
zendesk.chat.ChatEngineModule_ProvideBotMessageIdentifierFactory
zendesk.chat.ChatVisitorClient: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
zendesk.chat.R$id: int forever
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus PENDING
zendesk.chat.R$layout: int abc_list_menu_item_checkbox
io.flutter.view.FlutterView
zendesk.chat.ChatFormDriver: void updateWithTextInput(java.lang.String)
com.google.android.gms.internal.measurement.zzca$zza: int zzg
zendesk.chat.DefaultChatSession$16: DefaultChatSession$16(zendesk.chat.DefaultChatSession,java.lang.String)
zendesk.chat.DnModels$Connection
zendesk.chat.R$styleable: int TextAppearance_android_textColorLink
zendesk.chat.ChatStatusCheckStage$1: void onSuccess(zendesk.chat.ChatInfo)
zendesk.chat.AnonymousLoginDetailsProvider$1: AnonymousLoginDetailsProvider$1(zendesk.chat.AnonymousLoginDetailsProvider,zendesk.chat.MachineIdStorage,zendesk.chat.LoginDetailsFactory,zendesk.chat.ObservationScope)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzp
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.PushNotificationsProvider pushNotificationsProvider()
zendesk.chat.ChatObserverFactory: ChatObserverFactory(zendesk.chat.ChatLogMapper,zendesk.chat.ChatProvider,zendesk.chat.ChatConnectionSupervisor)
zendesk.chat.DefaultChatSession$9: void run()
zendesk.chat.ChatEngine: void stop()
zendesk.chat.Attachment: java.lang.String getUrl()
zendesk.chat.R$styleable: int MenuItem_android_alphabeticShortcut
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzs
zendesk.chat.ChatLog: long createdTimestamp
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus fromHttpStatusCode(int)
zendesk.chat.Providers: zendesk.chat.SettingsProvider settingsProvider()
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: java.lang.Throwable throwable
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_settingsProvider
zendesk.chat.ChatParticipant: zendesk.chat.ChatParticipant[] values()
zendesk.chat.R$styleable: int AppCompatTheme_actionButtonStyle
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzw)
zendesk.chat.DnModels$Profile
zendesk.chat.FrameMapper: int SEQUENCE_NUMBER_INDEX
zendesk.chat.ChatConfiguration: zendesk.chat.FormField$Status phoneFieldStatus
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider provideBotMessageIdentifierProvider
zendesk.chat.ChatFormDriver$2: zendesk.chat.ChatContext val$chatContext
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
zendesk.chat.R$id: int message
zendesk.chat.R$styleable: int SwitchCompat_switchMinWidth
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
zendesk.chat.LoginDetailsFactory: LoginDetailsFactory(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
zendesk.chat.R$attr: int buttonStyle
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
zendesk.chat.ChatSettings: int hashCode()
com.google.android.gms.internal.measurement.zzcd$zze: com.google.android.gms.internal.measurement.zzii zzi
zendesk.chat.R$attr: int actionBarTheme
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzr
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_settingsProvider: zendesk.chat.SettingsProvider get()
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
zendesk.chat.Connection$1
com.google.android.gms.internal.measurement.zzcd$zzg: long zzak
zendesk.chat.R$color: int highlighted_text_material_dark
zendesk.chat.R$attr: int title
zendesk.chat.R$styleable: int LinearLayoutCompat_showDividers
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
zendesk.chat.RequestSender: java.util.Queue requestQueue
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.ChatConfig chatConfig
zendesk.chat.R$dimen: int notification_top_pad_large_text
zendesk.chat.ChatEngine$InputProcessor: zendesk.chat.ChatStringProvider chatStringProvider
com.zendesk.service.ErrorResponseAdapter: boolean isNetworkError()
zendesk.chat.R$attr: int colorPrimaryDark
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
zendesk.chat.R$styleable: int AppCompatTheme_toolbarStyle
zendesk.chat.ChatAgentAvailabilityStage$AgentUnavailableContinuation
zendesk.chat.DefaultChatSession$3: zendesk.chat.DefaultChatSession this$0
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
zendesk.chat.DefaultChatSession$15: java.lang.String val$note
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.google.android.gms.internal.measurement.zzcd$zzg: int zzaa
zendesk.chat.Connection: void update(zendesk.chat.NetworkConnectivity$State)
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider chatLogBlacklisterProvider
zendesk.chat.DnModels$Department$Status: zendesk.chat.DnModels$Department$Status[] $VALUES
androidx.viewpager2.adapter.FragmentStateAdapter$2
androidx.core.widget.NestedScrollView: int getScrollRange()
zendesk.chat.ChatConversationOngoingChecker: java.lang.String LOG_TAG
zendesk.chat.ChatStatusCheckStage$1: ChatStatusCheckStage$1(zendesk.chat.ChatStatusCheckStage,zendesk.chat.ChatContext)
zendesk.chat.Providers
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
zendesk.chat.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
zendesk.chat.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_observableChatSettings: zendesk.chat.ChatProvidersComponent chatProvidersComponent
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.appcompat.widget.AppCompatSpinner
zendesk.chat.ChatLog$Type: zendesk.chat.ChatLog$Type RATING
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: zendesk.chat.ChatEngine$EngineStartedCompletion get()
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
zendesk.chat.ZendeskPushNotificationsProvider: void unregisterPushToken(com.zendesk.service.ZendeskCallback)
zendesk.chat.DefaultChatSession: zendesk.chat.Connection connection
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.ChatConfiguration$Builder withEmailFieldStatus(zendesk.chat.PreChatFormFieldStatus)
zendesk.chat.R$styleable: int[] ActionBar
zendesk.chat.ChatConversationOngoingChecker$1: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.MainThreadPoster$2$2: zendesk.chat.MainThreadPoster$2 this$1
zendesk.chat.ChatSessionManager_Factory: ChatSessionManager_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
zendesk.chat.BaseModule$1: BaseModule$1()
zendesk.chat.ChatProvider: zendesk.chat.ChatLog$Message sendMessage(java.lang.String)
com.squareup.picasso.Picasso$Priority: com.squareup.picasso.Picasso$Priority[] values()
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
zendesk.chat.R$attr: int seekBarStyle
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
zendesk.chat.R$style: int Base_Widget_AppCompat_SeekBar
zendesk.chat.R$style: int TextAppearance_AppCompat_Title
zendesk.belvedere.KeyboardHelper: int getViewInset()
zendesk.chat.R$drawable: int abc_btn_switch_to_on_mtrl_00012
zendesk.chat.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.google.android.gms.internal.measurement.zzck$zzb: int zzc
zendesk.chat.R$style: int Base_V7_Theme_AppCompat_Dialog
zendesk.chat.Agent: java.lang.String avatarPath
zendesk.chat.MainThreadPoster$1$1: java.lang.Object val$value
zendesk.chat.R$styleable: int ActionBar_title
zendesk.chat.DepartmentStatus: zendesk.chat.DepartmentStatus OFFLINE
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.google.android.gms.internal.measurement.zzbv$zze
zendesk.chat.PathUpdate$1: com.google.gson.JsonObject parseUpdate(com.google.gson.JsonElement)
zendesk.chat.R$drawable: int zch_trigger_message_avatar
zendesk.chat.ChatAgentAvailabilityStage$1: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.R$style: int Base_V22_Theme_AppCompat_Light
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: int getStatus()
zendesk.chat.ChatStateStore$ChatLogMerger$1
com.google.android.gms.internal.measurement.zzbv$zzc: boolean zzf
zendesk.chat.ChatProvider: zendesk.chat.ChatLog$Message resendFailedMessage(java.lang.String)
zendesk.chat.R$string: int abc_prepend_shortcut_label
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.FrameMapper frameMapper
zendesk.chat.ChatLogMapper$1
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
zendesk.chat.R$string: int abc_menu_function_shortcut_label
zendesk.chat.R$dimen: int abc_action_button_min_height_material
zendesk.chat.ObservableData$1: ObservableData$1(zendesk.chat.ObservableData,zendesk.chat.Observer)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.google.android.material.chip.Chip: void setMaxLines(int)
zendesk.chat.Attachment: int hashCode()
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
zendesk.chat.MessageAck: java.lang.Integer statusCode
zendesk.chat.R$id: int notification_main_column_container
zendesk.chat.ChatVisitorClient$Builder: java.lang.String sdkVersion
zendesk.chat.R$dimen: int abc_alert_dialog_button_dimen
zendesk.chat.R$styleable: int PopupWindow_android_popupBackground
zendesk.chat.TextField$InputValidator
zendesk.chat.MainThreadPoster: zendesk.chat.Observer wrapObserver(zendesk.chat.Observer)
zendesk.messaging.ui.FileUploadProgressView
zendesk.chat.R$dimen: int hint_alpha_material_dark
io.flutter.plugins.firebasemessaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
zendesk.chat.ZendeskChatProvider$3: zendesk.chat.ObservationScope val$observationScope
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
zendesk.chat.R$attr: int actionBarWidgetTheme
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
zendesk.chat.ChatFormStage: zendesk.messaging.components.bot.BotMessageDispatcher botMessageDispatcher
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.R$attr: int isLightTheme
zendesk.chat.R$drawable: int abc_list_longpressed_holo
io.flutter.plugins.firebasemessaging.FlutterFirebaseMessagingService
zendesk.chat.SendMessageRequest: SendMessageRequest(long,java.lang.String,zendesk.chat.PathValueSender,zendesk.chat.CompletionCallback,zendesk.chat.CompletionCallback,zendesk.chat.DeliveryStatusMonitor)
zendesk.chat.DnModels$Profile: DnModels$Profile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
zendesk.chat.DefaultChatSession$9: zendesk.chat.DefaultChatSession this$0
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
zendesk.chat.R$style: int Animation_AppCompat_Tooltip
zendesk.messaging.ui.AgentFileCellView: AgentFileCellView(android.content.Context,android.util.AttributeSet)
zendesk.chat.ZendeskConnectionProvider: void update(zendesk.chat.ChatSession)
zendesk.chat.ZendeskProfileProvider$1: void update(zendesk.chat.VisitorInfo)
zendesk.chat.MainThreadPoster_Factory: zendesk.chat.MainThreadPoster newInstance(android.os.Handler)
zendesk.chat.DefaultChatSession: zendesk.chat.ChatLog$AttachmentMessage resendFailedFile(java.lang.String,com.zendesk.service.ZendeskCallback,zendesk.chat.FileUploadListener)
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener listeners
zendesk.chat.DnUpdateModels$ChatMessage: DnUpdateModels$ChatMessage(java.lang.String,long)
zendesk.chat.DnModels$LiveChat: boolean equals(java.lang.Object)
zendesk.chat.ChatConfiguration: java.util.Set getChatMenuActions()
zendesk.chat.ZendeskAccountProvider_Factory: javax.inject.Provider observableAccountProvider
zendesk.chat.R$attr: int actionLayout
zendesk.chat.IdentityManager$IdentityResetCompletion: void access$600(zendesk.chat.IdentityManager$IdentityResetCompletion)
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
zendesk.chat.JwtLoginDetailsProvider: void access$600(zendesk.chat.JwtLoginDetailsProvider)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
zendesk.chat.R$styleable: int MenuGroup_android_visible
com.google.android.gms.internal.measurement.zzcd$zze: int zzc
zendesk.chat.Frames$Command: zendesk.chat.Frames$Command INQUIRY
zendesk.chat.R$attr: int spinBars
zendesk.chat.R$attr: int allowStacking
zendesk.chat.AuthenticationResponse: java.lang.String getError()
zendesk.chat.R$string: int abc_menu_enter_shortcut_label
zendesk.chat.DnUpdateModels$1
zendesk.chat.R$drawable: int abc_btn_borderless_material
zendesk.chat.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
zendesk.chat.R$styleable: int AppCompatTheme_tooltipForegroundColor
zendesk.chat.AndroidModule: zendesk.chat.BaseStorage v1Storage(android.content.Context,com.google.gson.Gson)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
zendesk.chat.ChatState: int NO_QUEUE_POSITION
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_context: java.lang.Object get()
zendesk.chat.DnModels$Account$Status: zendesk.chat.DnModels$Account$Status INVALID_ACCOUNT_KEY
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
zendesk.chat.DefaultChatSession$6: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.R$anim: int abc_shrink_fade_out_from_bottom
zendesk.chat.R$dimen: int abc_dialog_title_divider_material
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_cacheManager: DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_cacheManager(zendesk.chat.ChatProvidersComponent)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory: javax.inject.Provider scheduledExecutorServiceProvider
com.google.android.material.button.MaterialButton: int getCornerRadius()
zendesk.belvedere.KeyboardHelper: android.widget.EditText getInputTrap()
zendesk.chat.ChatSessionManager_Factory: javax.inject.Provider chatVisitorClientProvider
zendesk.chat.R$attr: int collapseContentDescription
zendesk.chat.DefaultChatSession$18: zendesk.chat.CompletionCallback val$completionCallback
zendesk.chat.ChatProvidersStorage: void clearAuthenticationWrapper()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
zendesk.chat.DnModels$FileSending: java.lang.String allowedExtensions
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
zendesk.chat.DefaultChatSocketConnection: void webSocketException(com.zendesk.service.ErrorResponse)
zendesk.chat.R$styleable: int FontFamilyFont_fontWeight
zendesk.chat.MainThreadPoster_Factory: zendesk.chat.MainThreadPoster get()
zendesk.chat.ChatNetworkModule_ChatServiceFactory: ChatNetworkModule_ChatServiceFactory(javax.inject.Provider)
com.google.android.gms.measurement.AppMeasurementService
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
zendesk.chat.DeliveryStatus: com.zendesk.service.ErrorResponse toErrorResponse(zendesk.chat.DeliveryStatus)
zendesk.chat.AuthenticationStorage$InMemory: zendesk.chat.AuthenticationWrapper loadAuthenticationWrapper()
zendesk.chat.KeepAliveSignal: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
zendesk.chat.R$styleable: int AlertDialog_singleChoiceItemLayout
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
zendesk.chat.ChatBotMessagingItems: java.lang.Object get()
zendesk.chat.ChatSession: zendesk.chat.ChatLog$AttachmentMessage resendFailedFile(java.lang.String,com.zendesk.service.ZendeskCallback,zendesk.chat.FileUploadListener)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
zendesk.chat.R$attr: int thumbTint
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
zendesk.chat.R$styleable: int AppCompatImageView_android_src
zendesk.chat.MainThreadPoster$2$2
zendesk.chat.ChatStateStore: zendesk.chat.ChatLog findChatLog(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$attr: int listPopupWindowStyle
zendesk.chat.ZendeskChatProvider_Factory: javax.inject.Provider observableChatStateProvider
zendesk.chat.R$attr: int actionBarTabStyle
io.flutter.embedding.engine.FlutterJNI: boolean setRefreshRateFPSCalled
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
zendesk.chat.ChatStateStore: zendesk.chat.ChatLog$AttachmentMessage deleteLocalAttachmentMessageLog(java.lang.String)
zendesk.chat.DefaultChatSession$18: DefaultChatSession$18(zendesk.chat.DefaultChatSession,long,java.io.File,zendesk.chat.FileUploadListener,zendesk.chat.CompletionCallback)
zendesk.chat.SendFileRequest: void onCompleted(zendesk.chat.DeliveryStatus)
zendesk.chat.R$attr: int actionModeCloseButtonStyle
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_cacheManager: zendesk.chat.CacheManager get()
zendesk.chat.DnModels$Department: boolean equals(java.lang.Object)
zendesk.chat.EmailInputValidator: java.lang.String getValidationFailedMessage()
zendesk.chat.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
androidx.cardview.widget.CardView: float getMaxCardElevation()
zendesk.chat.R$drawable: int abc_item_background_holo_light
com.google.android.material.chip.Chip: void setElevation(float)
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.ChatConfiguration$Builder withNameFieldStatus(zendesk.chat.PreChatFormFieldStatus)
zendesk.chat.R$attr: int gapBetweenBars
zendesk.chat.DefaultChatSession: java.util.Queue requestQueue
zendesk.chat.IdentityManager$IdentityResetCompletion: zendesk.chat.JwtAuthenticator jwtAuthenticator
zendesk.chat.ChatLogMapper: zendesk.messaging.MessagingItem convertOptionsMessage(zendesk.chat.ChatState,zendesk.chat.ChatLog$OptionsMessage)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
zendesk.chat.R$layout: int abc_select_dialog_material
zendesk.chat.ChatModel$1
zendesk.chat.ChatStringProvider: java.lang.String handoverWelcomeMessage()
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
zendesk.chat.R$attr: int layout_anchor
zendesk.chat.DnConverterUtils: java.lang.String LOG_TAG
zendesk.chat.ChatContext: zendesk.messaging.MessagingApi messagingApi
zendesk.chat.ChatEngine$3: void onSuccess(java.lang.Void)
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: boolean isConversionError()
zendesk.chat.TextField$InputValidator: java.lang.String getValidationFailedMessage()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
zendesk.chat.PersistentCookieJar$Data: java.util.List cookies
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
zendesk.chat.Chat: zendesk.chat.ChatProvidersComponent component()
zendesk.chat.ChatLogMapper: android.content.res.Resources res
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
zendesk.chat.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
kotlinx.coroutines.CancelledContinuation: int _resumed
zendesk.chat.R$attr: int alertDialogCenterButtons
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
zendesk.chat.ZendeskConnectionProvider: void observeConnectionStatus(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.ZendeskChatProvider: void setTyping(boolean)
zendesk.chat.DeliveryStatusMonitor$1: void update(zendesk.chat.DnModels$LiveChat)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
zendesk.chat.JwtLoginDetailsProvider$1: zendesk.chat.AuthenticationWrapper val$authenticationWrapper
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
zendesk.chat.DefaultChatSession$13: java.util.List val$tags
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method getPreHandler()
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse
zendesk.messaging.MessagingActivity
zendesk.chat.MediatorEndpoint
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
zendesk.chat.ChatLog: long lastModifiedTimestamp
zendesk.chat.R$style: int Base_V22_Theme_AppCompat
zendesk.chat.ChatLogBlacklister_Factory
zendesk.messaging.ui.InputBox: void setAttachmentsIndicatorClickListener(android.view.View$OnClickListener)
zendesk.chat.R$attr: int switchPadding
zendesk.chat.DefaultChatSession$11
zendesk.chat.IdentityManager$QueueItem: zendesk.chat.JwtAuthenticator access$100(zendesk.chat.IdentityManager$QueueItem)
zendesk.chat.ChatAgentAvailabilityStage$1: ChatAgentAvailabilityStage$1(zendesk.chat.ChatAgentAvailabilityStage,zendesk.chat.ChatContext)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
zendesk.chat.ProfileProvider: zendesk.chat.VisitorInfo getVisitorInfo()
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
zendesk.chat.ChatProvidersModule$1
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
zendesk.chat.ChatFormDriver$1: zendesk.chat.ChatFormDriver this$0
zendesk.chat.ChatSocketClient$Builder: java.util.concurrent.Executor access$200(zendesk.chat.ChatSocketClient$Builder)
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
com.google.android.gms.internal.measurement.zzc: android.os.IBinder asBinder()
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory: javax.inject.Provider networkConnectivityProvider
zendesk.chat.AuthenticationWrapper
zendesk.chat.DnUpdateModels$Field: java.lang.String value
zendesk.chat.R$dimen: int abc_config_prefDialogWidth
zendesk.chat.R$style: int Platform_AppCompat
zendesk.chat.IdentityManager$IdentityResetCompletion$2: void onSuccess(java.lang.Object)
zendesk.chat.ChatInfo: ChatInfo(boolean)
zendesk.chat.R$style: int Base_Widget_AppCompat_ActionBar_Solid
zendesk.chat.R$styleable: int TextAppearance_android_shadowColor
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
zendesk.chat.ChatStateStore$ChatLogMerger$2
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_profileProvider: DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_profileProvider(zendesk.chat.ChatProvidersComponent)
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionButton
zendesk.chat.R$drawable: int abc_list_selector_holo_dark
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
android.support.v4.app.RemoteActionCompatParcelizer
zendesk.chat.ObservableData: void clearData()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
zendesk.chat.ZendeskAccountProvider: void update(java.lang.Object)
zendesk.chat.TimerModule_TimerFactoryFactory: java.lang.Object get()
zendesk.chat.R$styleable: int AppCompatTextHelper_android_drawableTop
zendesk.chat.ChatParticipant: zendesk.chat.ChatParticipant[] $VALUES
zendesk.chat.Tls12SocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)
zendesk.chat.R$drawable: int abc_textfield_activated_mtrl_alpha
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.LoginDetailsFactory access$900(zendesk.chat.JwtLoginDetailsProvider)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
zendesk.chat.R$id: int action_bar_title
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider networkConnectivityProvider
zendesk.chat.R$color: int abc_primary_text_disable_only_material_light
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
zendesk.chat.ChatVisitorClient: zendesk.chat.ChatSession createNewSession(java.lang.String,java.lang.String,java.lang.String,zendesk.chat.VisitorPath,zendesk.chat.JwtAuthenticator)
androidx.appcompat.widget.ScrollingTabContainerView
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
zendesk.chat.MainThreadPoster$3: zendesk.chat.MainThreadPoster this$0
zendesk.chat.ConnectionStatus: zendesk.chat.ConnectionStatus DISCONNECTED
zendesk.chat.ZendeskChatProvider: void sendEmailTranscript(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$color: int material_deep_teal_500
zendesk.chat.ChatSocketClient$Builder: zendesk.chat.ChatSocketClient$Builder withExecutor(java.util.concurrent.Executor)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_baseStorage
okio.ForwardingSink: okio.Sink delegate()
zendesk.chat.R$color: int switch_thumb_material_dark
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatEngine_Factory
zendesk.chat.DnUpdateModels$Notes: DnUpdateModels$Notes()
zendesk.chat.R$id: int listMode
zendesk.chat.Clock$1: Clock$1()
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.AuthenticationStorage authenticationStorage
zendesk.chat.R$styleable: int Toolbar_subtitleTextColor
androidx.appcompat.widget.AppCompatButton
zendesk.chat.ChatSession: void sendPushToken(java.lang.String,com.zendesk.service.ZendeskCallback)
androidx.appcompat.widget.LinearLayoutCompat
zendesk.chat.R$styleable: int ActionBar_height
zendesk.chat.PushData$Type: zendesk.chat.PushData$Type valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
zendesk.chat.Clock: long nowNanos()
zendesk.chat.R$attr: int barLength
zendesk.chat.ChatStatusCheckStage$ChatStartedCompletion: void onChatStarted(zendesk.chat.ChatContext)
zendesk.chat.R$id: int src_atop
zendesk.chat.ZendeskProfileProvider: void update(java.lang.Object)
zendesk.chat.R$style: int TextAppearance_AppCompat_Small_Inverse
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
zendesk.chat.ZendeskChatProvider: zendesk.chat.ObservableData access$200(zendesk.chat.ZendeskChatProvider)
zendesk.chat.R$id: int tabMode
zendesk.chat.SendFileRequest: java.io.File file
zendesk.chat.R$styleable: int TextAppearance_fontVariationSettings
zendesk.chat.PathValueSender$Request: zendesk.chat.PathValue pathValue
zendesk.chat.R$layout: int abc_activity_chooser_view
zendesk.chat.R$id: int search_close_btn
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
zendesk.chat.DefaultChatSession$17: com.zendesk.service.ZendeskCallback val$callback
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
com.squareup.picasso.Picasso$LoadedFrom: com.squareup.picasso.Picasso$LoadedFrom valueOf(java.lang.String)
zendesk.chat.DnModels$Profile: java.lang.String getEmail()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
zendesk.chat.ChatEngineModule_ChatFormStageFactory: java.lang.Object get()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
zendesk.messaging.ui.MessagePopUpHelper$Option: zendesk.messaging.ui.MessagePopUpHelper$Option valueOf(java.lang.String)
zendesk.chat.R$drawable: int abc_btn_check_to_on_mtrl_015
com.google.firebase.datatransport.TransportRegistrar
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
zendesk.chat.ZendeskProfileProvider: void appendVisitorNote(java.lang.String,com.zendesk.service.ZendeskCallback)
com.app.fixjedtechnician.MainActivity: MainActivity()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
zendesk.chat.R$styleable: int GradientColor_android_endColor
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: javax.inject.Provider dateProvider
zendesk.chat.R$id: int radio
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
zendesk.chat.SharedPreferencesStorage: SharedPreferencesStorage(android.content.SharedPreferences,com.google.gson.Gson)
zendesk.chat.Connection: java.util.concurrent.atomic.AtomicReference access$200(zendesk.chat.Connection)
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
zendesk.chat.OfflineForm: zendesk.chat.OfflineForm$Builder builder(java.lang.String)
zendesk.chat.R$color: int notification_icon_bg_color
zendesk.chat.TimerModule_ProvideHandlerFactory: zendesk.chat.TimerModule_ProvideHandlerFactory create()
zendesk.chat.DefaultChatSession$21
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
zendesk.chat.R$dimen: int compat_notification_large_icon_max_width
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
zendesk.chat.JwtLoginDetailsProvider$2: void onError(com.zendesk.service.ErrorResponse)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
zendesk.chat.R$attr: int showAsAction
zendesk.chat.ChatProvidersStorage: java.lang.String ACCOUNT_KEY
zendesk.chat.ChatSocketClient$Builder: zendesk.chat.ChatSocketClient$Builder withOkHttpClient(okhttp3.OkHttpClient)
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
zendesk.chat.ChatFormDriver_Factory: javax.inject.Provider botMessageDispatcherProvider
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
zendesk.chat.ChatEngine_Factory: javax.inject.Provider updateActionListenerProvider
zendesk.chat.UserAgentAndClientHeadersInterceptor_Factory: zendesk.chat.UserAgentAndClientHeadersInterceptor newInstance()
zendesk.chat.ChatLogMapper$1: int[] $SwitchMap$zendesk$chat$DeliveryStatus
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
zendesk.chat.ChatSocketClient: zendesk.chat.MediatorEndpoint access$600(zendesk.chat.ChatSocketClient)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
zendesk.chat.ChatStatusCheckStage: zendesk.chat.ChatStatusCheckStage$ChatInitCompletion chatInitCompletion
zendesk.chat.DaggerChatSdkComponent: DaggerChatSdkComponent(zendesk.chat.ChatProvidersComponent)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
zendesk.chat.ZendeskSettingsProvider
zendesk.chat.R$drawable: int abc_spinner_textfield_background_material
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
zendesk.chat.DnModels$Agent: java.lang.String avatarPath
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
zendesk.chat.Attachment: java.lang.String mimeType
zendesk.chat.ChatModel: void onOfflineFormCompleted(zendesk.chat.ChatContext,zendesk.chat.OfflineForm)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
zendesk.chat.R$attr: int actionBarPopupTheme
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
zendesk.chat.SharedPreferencesStorage_Factory
com.google.android.gms.common.internal.ResolveAccountResponse: android.os.Parcelable$Creator CREATOR
zendesk.chat.ZendeskChatProvider_Factory: javax.inject.Provider chatServiceProvider
zendesk.chat.ChatFormStage: zendesk.chat.ChatFormStage$OfflineFormCompletion offlineFormCompletion
zendesk.chat.ChatFormDriver_Factory: zendesk.chat.ChatFormDriver get()
zendesk.chat.ChatEngineModule_EngineStatusObservableFactory: zendesk.chat.ChatEngineModule_EngineStatusObservableFactory create()
zendesk.chat.MessageIdGenerator: long newId()
zendesk.chat.ChatLogMapper: java.lang.String CHAT_RATING_OPTION_BAD_ID
zendesk.chat.R$drawable: R$drawable()
zendesk.chat.ChatLog: java.lang.String displayName
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
zendesk.chat.NetworkConnectivityProvider$2$1: zendesk.chat.NetworkConnectivityProvider$2 this$0
zendesk.chat.R$attr: int imageButtonStyle
zendesk.chat.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
io.flutter.plugins.GeneratedPluginRegistrant
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_context: android.content.Context get()
zendesk.chat.R$id: int shortcut
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
zendesk.belvedere.SelectableView: void setSelectionListener(zendesk.belvedere.SelectableView$SelectionListener)
zendesk.chat.ChatModel: void onChatInit(zendesk.chat.ChatContext)
zendesk.chat.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
zendesk.chat.ZendeskConnectionProvider: zendesk.chat.ObservableData access$000(zendesk.chat.ZendeskConnectionProvider)
zendesk.chat.OkHttpUtils: OkHttpUtils()
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
zendesk.chat.R$styleable: int SearchView_queryBackground
zendesk.chat.DefaultChatSession$7: DefaultChatSession$7(zendesk.chat.DefaultChatSession,zendesk.chat.VisitorInfo,com.zendesk.service.ZendeskCallback)
zendesk.chat.ZendeskProfileProvider$1: ZendeskProfileProvider$1(zendesk.chat.ZendeskProfileProvider)
zendesk.chat.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
zendesk.chat.DefaultChatSession$2: void run()
zendesk.chat.R$attr: int contentInsetEndWithActions
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.R$styleable: int[] ActionMenuView
zendesk.chat.BaseModule_GetHttpLoggingInterceptorFactory: okhttp3.logging.HttpLoggingInterceptor getHttpLoggingInterceptor()
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
zendesk.chat.R$id: int action_bar
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Body2
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: javax.inject.Provider chatStringProvider
zendesk.chat.ChatProvider: void getChatInfo(com.zendesk.service.ZendeskCallback)
zendesk.chat.SharedPreferencesStorage: void put(java.lang.String,java.lang.String)
zendesk.chat.R$id: int progress_circular
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzau
zendesk.chat.DnModels$Account: int hashCode()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus phoneFieldStatus
zendesk.chat.ChatLog$AttachmentMessage: zendesk.chat.Attachment getAttachment()
zendesk.chat.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
zendesk.chat.FrameFactory: void setRemoteSequenceNumber(long)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory: zendesk.chat.ChatVisitorClient get()
zendesk.chat.MessageIdGenerator: long lastMillis
zendesk.chat.R$styleable: int Toolbar_contentInsetEndWithActions
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
zendesk.chat.ChatFormStage$OfflineFormCompletion: void onOfflineFormCompleted(zendesk.chat.ChatContext,zendesk.chat.OfflineForm)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
zendesk.chat.R$string: int abc_action_bar_home_description
zendesk.chat.VisitorInfo: zendesk.chat.VisitorInfo$Builder builder()
zendesk.chat.R$attr: int checkedTextViewStyle
zendesk.chat.DnUpdateModels$Chatting: DnUpdateModels$Chatting(boolean)
zendesk.chat.ChatConnectionSupervisor_Factory: zendesk.chat.ChatConnectionSupervisor_Factory create(javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ChatMenuAction: zendesk.chat.ChatMenuAction[] values()
zendesk.chat.JwtLoginDetailsProvider: java.lang.String accountKey
androidx.appcompat.widget.SearchView: int getPreferredWidth()
zendesk.chat.FrameMapper: int COMMAND_INDEX
zendesk.chat.AnonymousLoginDetailsProvider: AnonymousLoginDetailsProvider(zendesk.chat.MachineIdStorage,zendesk.chat.DataStore,zendesk.chat.LoginDetailsFactory)
zendesk.chat.ChatStringProvider: java.lang.String transcriptConfirmation(java.lang.String)
zendesk.chat.MessageAck$Wrapper: MessageAck$Wrapper()
zendesk.chat.R$styleable: int[] ActionBarLayout
zendesk.chat.R$anim: int abc_tooltip_exit
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
zendesk.chat.WebSocket$WebSocketListener: void frameReceived(java.lang.String)
zendesk.chat.DnUpdateModels$VisitorTypingStatus: boolean typing
zendesk.chat.R$attr: int editTextColor
io.flutter.plugins.firebasemessaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
zendesk.chat.FormField$Status: zendesk.chat.FormField$Status REQUIRED
zendesk.chat.ZendeskConnectionProvider$1: zendesk.chat.ZendeskConnectionProvider this$0
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider chatFormDriverProvider
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Display2
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzw)
zendesk.chat.R$styleable: int TextAppearance_android_shadowDx
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
zendesk.chat.Tls12SocketFactory: java.net.Socket patch(java.net.Socket)
zendesk.chat.ChatConversationOngoingChecker$1: void onSuccess(zendesk.chat.ChatInfo)
zendesk.chat.DnConverterUtils
zendesk.chat.ChatObserverFactory: java.util.Map access$400()
zendesk.chat.R$color: int primary_dark_material_dark
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
zendesk.chat.R$layout: int abc_alert_dialog_title_material
zendesk.chat.ChatProvidersModule_ObservableChatSettingsFactory: ChatProvidersModule_ObservableChatSettingsFactory()
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
zendesk.chat.ChatSocketListener: void onStateUpdate(zendesk.chat.ChatSocketConnection$State)
zendesk.chat.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzh
zendesk.chat.ChatState: java.lang.String getChatId()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_chatProvider: zendesk.chat.ChatProvider get()
zendesk.chat.ChatStringProvider: java.lang.String phoneFieldPrompt()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
zendesk.chat.DnUpdateModels$VisitorInfoUpdate: DnUpdateModels$VisitorInfoUpdate(java.lang.String,java.lang.String,java.lang.String,zendesk.chat.DnUpdateModels$1)
zendesk.chat.R$style: int Base_Widget_AppCompat_ActivityChooserView
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
zendesk.chat.DataNode: boolean remove(java.util.List)
zendesk.chat.PayloadChatTimeout: PayloadChatTimeout(int,java.util.concurrent.TimeUnit)
com.google.android.gms.internal.measurement.zzcd$zzh: com.google.android.gms.internal.measurement.zzii zze
zendesk.chat.DefaultChatSession$20: zendesk.chat.CompletionCallback val$completionCallback
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzae,long)
com.google.android.gms.internal.measurement.zzcd$zzj: com.google.android.gms.internal.measurement.zzif zze
zendesk.chat.R$styleable: int[] LinearLayoutCompat_Layout
zendesk.chat.ChatSession: zendesk.chat.ChatLog$AttachmentMessage sendFile(java.io.File,com.zendesk.service.ZendeskCallback,zendesk.chat.FileUploadListener)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
zendesk.chat.ZendeskChatProvider$3: void update(zendesk.chat.ChatState)
zendesk.chat.TimerModule_TimerFactoryFactory: javax.inject.Provider handlerProvider
zendesk.chat.R$drawable: int abc_list_pressed_holo_light
zendesk.chat.R$string: int abc_menu_space_shortcut_label
zendesk.chat.ChatLog: zendesk.chat.DeliveryStatus deliveryStatus
zendesk.chat.OptionSelectField: java.util.List getOptions()
zendesk.chat.R$attr: int background
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String sourceVersion
zendesk.chat.ZendeskProfileProvider: zendesk.chat.MainThreadPoster mainThreadPoster
zendesk.chat.R$styleable: int AppCompatTheme_panelMenuListTheme
zendesk.chat.ChatLogMapper_Factory: javax.inject.Provider chatLogBlacklisterProvider
zendesk.chat.ChatFormDriver: void updateConversationWithMessage(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
zendesk.chat.R$style: int Base_AlertDialog_AppCompat
zendesk.chat.R$style: int Base_Theme_AppCompat
zendesk.chat.R$styleable: int AppCompatTheme_ratingBarStyleSmall
zendesk.chat.DefaultChatStringProvider: java.lang.String expectCommentComposerHint()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
zendesk.chat.SendMessageRequest: void onSuccess(java.lang.Object)
zendesk.chat.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
zendesk.chat.ZendeskAccountProvider_Factory: javax.inject.Provider chatConfigProvider
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
zendesk.chat.Attachment: long getSize()
zendesk.chat.R$attr: int lastBaselineToBottomHeight
zendesk.chat.R$styleable: int AppCompatTheme_panelBackground
zendesk.chat.ChatProvidersStorage: ChatProvidersStorage(zendesk.chat.BaseStorage,zendesk.chat.BaseStorage,zendesk.chat.ChatConfig)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
zendesk.chat.R$color: int switch_thumb_material_light
zendesk.chat.DefaultChatSocketConnection: void openConnection(okhttp3.OkHttpClient,zendesk.chat.MediatorEndpoint)
zendesk.chat.ZendeskChatProvider_Factory: javax.inject.Provider chatSessionManagerProvider
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$styleable: int AppCompatTextView_autoSizePresetSizes
zendesk.chat.R$styleable: int AppCompatTheme_dialogTheme
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
zendesk.chat.ChatEngine$2: void onAction(java.lang.Object)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
zendesk.chat.ChatConfig
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
zendesk.chat.AuthenticationResponse: java.lang.String error
zendesk.chat.DefaultChatSession$18: long val$timestamp
zendesk.chat.R$attr: int listPreferredItemPaddingLeft
zendesk.chat.DaggerChatSdkComponent$Builder
zendesk.chat.DnModels
zendesk.chat.ZendeskChatProvider: void sendChatRating(zendesk.chat.ChatRating,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatLog$OptionsMessage: boolean equals(java.lang.Object)
zendesk.chat.VisitorPath: zendesk.chat.VisitorPath create(java.lang.String)
zendesk.chat.R$color: int dim_foreground_material_dark
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides valueOf(java.lang.String)
zendesk.chat.JwtLoginDetailsProvider$2: zendesk.chat.JwtLoginDetailsProvider this$0
zendesk.chat.R$style: int Platform_V25_AppCompat_Light
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
zendesk.chat.ChatForm: zendesk.chat.DepartmentField createDepartmentField(zendesk.chat.FormField$Status,zendesk.chat.ChatStringProvider,zendesk.messaging.AgentDetails,java.util.List)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
zendesk.chat.ChatSocketListener
zendesk.chat.ZendeskSettingsProvider_Factory: zendesk.chat.ZendeskSettingsProvider newInstance(java.lang.Object,java.lang.Object,zendesk.chat.ObservableData)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: boolean isNetworkError()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
zendesk.chat.R$attr: int alertDialogTheme
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
zendesk.chat.R$styleable: int SearchView_android_maxWidth
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
zendesk.chat.Account: zendesk.chat.AccountStatus getStatus()
zendesk.chat.MainThreadPoster$1: zendesk.chat.MainThreadPoster this$0
zendesk.chat.ZendeskChatProvider$2: void update(zendesk.chat.ChatState)
zendesk.chat.FrameMapper: java.lang.String LOG_TAG
zendesk.chat.DnModels$Channel: java.util.Map getLog()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
zendesk.chat.MainThreadPoster$2$2: com.zendesk.service.ErrorResponse val$errorResponse
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
zendesk.chat.Chat: void resetIdentity(zendesk.chat.CompletionCallback)
zendesk.chat.ChatObserverFactory$3
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
zendesk.chat.ChatProvidersComponent: zendesk.chat.IdentityManager identityManager()
com.google.android.gms.internal.measurement.zzck$zzb: int zzd
zendesk.chat.DaggerChatProvidersComponent: android.content.Context context
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
zendesk.chat.OfflineForm: java.lang.String getDepartmentName()
zendesk.chat.R$styleable: int AppCompatTheme_editTextBackground
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.android.gms.internal.measurement.zzbv$zzd: boolean zze
zendesk.chat.R$dimen: int abc_disabled_alpha_material_light
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
zendesk.chat.R$styleable: int ActionBar_background
zendesk.chat.DefaultChatSession$4: zendesk.chat.DefaultChatSession this$0
com.google.android.gms.internal.measurement.zzcd$zzg: boolean zzx
zendesk.chat.R$styleable: int Toolbar_title
zendesk.chat.DnModels$Connection$Status: zendesk.chat.DnModels$Connection$Status IDLE_DISCONNECT
zendesk.chat.DnModels$Department
zendesk.chat.R$styleable: int AppCompatTheme_windowActionModeOverlay
zendesk.chat.DnModels$FileSending: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
zendesk.chat.JwtLoginDetailsProvider$2: zendesk.chat.CompletionCallback val$callback
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_baseStorage: DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_baseStorage(zendesk.chat.ChatProvidersComponent)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
zendesk.chat.R$color: int switch_thumb_disabled_material_light
zendesk.chat.ZendeskAccountProvider: java.util.concurrent.atomic.AtomicReference observationScopeReference
zendesk.chat.ChatSession: void setDepartment(long,com.zendesk.service.ZendeskCallback)
zendesk.chat.RequestSender: void sendFile(long,java.io.File,zendesk.chat.FileUploadListener,zendesk.chat.CompletionCallback)
zendesk.chat.AuthenticationStorage$InMemory: void clearAuthenticationWrapper()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
zendesk.chat.JwtAuthenticator$JwtCompletion
zendesk.chat.NetworkConnectivityProvider$2$1: NetworkConnectivityProvider$2$1(zendesk.chat.NetworkConnectivityProvider$2)
io.flutter.plugins.firebasemessaging.FlutterFirebaseAppRegistrar
zendesk.chat.R$style: int Widget_AppCompat_ActivityChooserView
zendesk.chat.DnModels$Channel: java.lang.String comment
zendesk.chat.R$styleable: int ActionBar_contentInsetStart
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
zendesk.chat.ChatEngine$EngineStartedCompletion
zendesk.chat.R$styleable: int TextAppearance_android_textColor
androidx.media.AudioAttributesCompat
com.google.android.material.behavior.SwipeDismissBehavior
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
zendesk.chat.R$string: int zch_chat_transcript_email_prompt
zendesk.chat.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
zendesk.chat.R$styleable: int TextAppearance_android_shadowRadius
zendesk.chat.R$style: int Base_Widget_AppCompat_Button_Small
okio.ForwardingSink: void flush()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
zendesk.chat.ChatEngineModule_LifecycleOwnerFactory: zendesk.chat.ChatEngineModule_LifecycleOwnerFactory create()
zendesk.chat.R$id: int search_edit_frame
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
zendesk.chat.ZendeskSettingsProvider$1: zendesk.chat.ZendeskSettingsProvider this$0
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.ChatConfiguration build()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
zendesk.chat.R$id: int right_side
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.google.android.gms.internal.measurement.zzck$zza: com.google.android.gms.internal.measurement.zzii zzc
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus access$800(zendesk.chat.ChatConfiguration$Builder)
zendesk.chat.ChatEngineModule_ChatFormStageFactory: javax.inject.Provider chatStringProvider
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.ChatVisitorClient$Builder withAppInfo(java.lang.String,java.lang.String)
zendesk.chat.R$attr: int windowActionBar
zendesk.chat.R$attr: int titleMarginTop
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
zendesk.chat.ChatEngineModule: zendesk.messaging.components.bot.BotMessageDispatcher$MessageIdentifier provideBotMessageIdentifier()
zendesk.chat.Chat: zendesk.chat.Chat INSTANCE
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzii zzae
zendesk.chat.ChatRating: zendesk.chat.ChatRating[] $VALUES
zendesk.chat.DefaultChatSession$10
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.gms.internal.measurement.zzcd$zzb
zendesk.chat.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
zendesk.chat.DefaultChatSocketConnection: DefaultChatSocketConnection(zendesk.chat.ChatSocketListener,zendesk.chat.LoginDetails,zendesk.chat.KeepAliveSignal,zendesk.chat.FrameFactory,zendesk.chat.FrameMapper,zendesk.chat.SendCallbackManager)
zendesk.chat.R$styleable: int SwitchCompat_switchTextAppearance
zendesk.chat.ChatStringProvider: java.lang.String offlineMessage()
zendesk.chat.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
zendesk.chat.DnModels$Settings: DnModels$Settings(zendesk.chat.DnModels$FileSending)
zendesk.chat.MainThreadPoster$1$1: MainThreadPoster$1$1(zendesk.chat.MainThreadPoster$1,java.lang.Object)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.google.android.material.internal.NavigationMenuView
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
zendesk.chat.R$drawable: int abc_btn_radio_material
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
zendesk.chat.ChatConversationOngoingChecker_Factory
zendesk.chat.DefaultChatSession$17: void onCompleted(zendesk.chat.DeliveryStatus)
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
zendesk.chat.R$dimen: int abc_dialog_fixed_width_major
zendesk.chat.ChatConfiguration$1
zendesk.chat.ChatEngineModule: androidx.lifecycle.LifecycleOwner lifecycleOwner()
zendesk.chat.Attachment: java.lang.String getMimeType()
com.google.android.material.chip.Chip
zendesk.chat.R$layout: int abc_action_menu_item_layout
zendesk.chat.ChatEngine$3: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.R$styleable: int[] DrawerArrowToggle
zendesk.chat.R$attr: int titleTextColor
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
zendesk.chat.R$style: int TextAppearance_AppCompat_Body1
zendesk.chat.R$attr: int height
zendesk.chat.Attachment$Metadata: Attachment$Metadata(int,int)
zendesk.chat.R$layout: int abc_search_view
zendesk.chat.ChatConnectionSupervisor: void onAppBackgrounded()
zendesk.chat.R$attr: int textAppearanceListItem
zendesk.chat.R$id: int notification_background
zendesk.chat.LoginDetailsFactory: java.lang.String appId
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.BaseStorage baseStorage()
zendesk.chat.R$attr: int popupWindowStyle
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.R$string: int abc_menu_sym_shortcut_label
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
zendesk.chat.ChatEngine$Status: ChatEngine$Status(java.lang.String,int)
zendesk.chat.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
zendesk.chat.ZendeskConnectionProvider: java.util.concurrent.atomic.AtomicReference observationScopeReference
zendesk.chat.R$id: int line3
zendesk.chat.ChatStringProvider: java.lang.String transferString()
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$styleable: int SwitchCompat_showText
zendesk.chat.ChatFormDriver: void updateWithOptionSelection(zendesk.messaging.MessagingItem$Option)
zendesk.chat.R$dimen: int compat_control_corner_material
zendesk.chat.MessageAck$Status: zendesk.chat.MessageAck$Status FAILURE
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.FrameMapper getFrameMapper()
zendesk.chat.TextField: java.lang.String messageText
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
zendesk.chat.OkHttpWebSocket$1: void onMessage(okhttp3.WebSocket,okio.ByteString)
zendesk.chat.R$layout: int abc_action_bar_up_container
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
zendesk.chat.R$style: int Base_V26_Theme_AppCompat_Light
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
zendesk.chat.R$styleable: int Spinner_android_entries
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
zendesk.chat.R$id: int right_icon
zendesk.chat.NetworkConnectivityProvider$2$1
zendesk.chat.DnUpdateModels: java.util.List PATH_TYPING
zendesk.chat.ChatStatusCheckStage: java.lang.String LOG_TAG
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatSocketClient$1: ChatSocketClient$1(zendesk.chat.ChatSocketClient,zendesk.chat.ChatSocketListener,zendesk.chat.DefaultChatSocketConnection)
com.google.android.gms.internal.measurement.zzcd$zzk: com.google.android.gms.internal.measurement.zzcd$zzk zzj
com.google.android.gms.common.zzk: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$id: int submenuarrow
zendesk.chat.DefaultChatSession$13: DefaultChatSession$13(zendesk.chat.DefaultChatSession,java.util.List,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$dimen: int abc_text_size_button_material
com.google.android.gms.internal.measurement.zzca$zzb
zendesk.chat.R$styleable: int AppCompatImageView_tint
zendesk.chat.R$drawable: int notification_bg_low_normal
zendesk.chat.ChatSocketConnection: java.lang.String getSocketId()
zendesk.chat.UserAgentAndClientHeadersInterceptor: java.lang.String USER_AGENT_HEADER_TEMPLATE
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout
com.google.android.material.datepicker.MaterialTextInputPicker
com.google.android.material.chip.Chip: float getChipStrokeWidth()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
zendesk.chat.R$styleable: int FontFamilyFont_font
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
zendesk.chat.Attachment$Metadata: int getHeight()
zendesk.chat.DefaultChatStringProvider: java.lang.String offlineFormMessagePrompt()
zendesk.chat.ZendeskSettingsProvider_Factory: zendesk.chat.ZendeskSettingsProvider_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.R$styleable: int AppCompatTheme_android_windowAnimationStyle
zendesk.chat.R$styleable: int TextAppearance_textLocale
zendesk.chat.ChatInfo
zendesk.chat.ChatSession: boolean deleteFailedChatLog(java.lang.String)
zendesk.chat.PathValue: PathValue(java.lang.String,java.util.List,java.lang.Object)
zendesk.chat.R$style: int TextAppearance_AppCompat_Menu
zendesk.chat.AndroidModule
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider zendeskSettingsProvider
zendesk.chat.TimerModule_ProvideHandlerFactory
zendesk.chat.R$attr: int titleMarginEnd
zendesk.chat.ChatLogMapper_Factory: zendesk.chat.ChatLogMapper newInstance(android.content.Context,java.lang.Object)
zendesk.chat.ChatConfiguration: zendesk.chat.FormField$Status getEmailFieldStatus()
zendesk.chat.ChatVisitorClient: zendesk.chat.ChatSocketClient chatSocketClient
zendesk.chat.ChatEngine_Factory: zendesk.chat.ChatEngine_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ChatSocketClient$Builder: zendesk.chat.MediatorEndpoint mediatorEndpoint
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
zendesk.chat.AuthenticationResponse: long getExpiresIn()
zendesk.chat.R$styleable: int[] AnimatedStateListDrawableTransition
zendesk.chat.DepartmentStatus: zendesk.chat.DepartmentStatus valueOf(java.lang.String)
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider provideStateListenerProvider
io.flutter.plugin.platform.SingleViewPresentation
okio.ForwardingSink: ForwardingSink(okio.Sink)
zendesk.chat.DefaultChatSession$2: zendesk.chat.ChatRating val$chatRating
zendesk.chat.ChatProvidersModule_ObservableAccountFactory: java.lang.Object get()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
zendesk.chat.ChatSocketConnection: void send(zendesk.chat.PathValue,com.zendesk.service.ZendeskCallback)
zendesk.messaging.ui.MessagingView: MessagingView(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatLogBlacklister_Factory: zendesk.chat.ChatLogBlacklister_Factory create(javax.inject.Provider)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
zendesk.chat.Clock: void waitFor(long)
zendesk.chat.ChatLog$Type: zendesk.chat.ChatLog$Type MEMBER_JOIN
zendesk.chat.R$drawable: int notification_tile_bg
zendesk.chat.ZendeskPushNotificationsProvider_Factory
zendesk.chat.DnConverterUtils: boolean isChatting(zendesk.chat.DnModels$Channel)
zendesk.chat.IdentityManager_Factory: javax.inject.Provider chatProvidersStorageProvider
zendesk.chat.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.ChatSocketClient$Builder: zendesk.chat.ChatSocketClient build()
zendesk.messaging.ui.ActionOptionsView: ActionOptionsView(android.content.Context,android.util.AttributeSet)
zendesk.chat.SendCallbackManager$1: SendCallbackManager$1(zendesk.chat.SendCallbackManager,zendesk.chat.PathValue,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$style: int Base_Widget_AppCompat_Spinner_Underlined
zendesk.chat.ChatStateStore: void insertLocalAttachmentMessageLog(zendesk.chat.ChatLog$AttachmentMessage)
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
zendesk.chat.ChatEngineModule_ProvideBotMessageDispatcherFactory: javax.inject.Provider factoryProvider
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus CANCELLED
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
zendesk.chat.ChatProvidersModule_ObservableJwtAuthenticatorFactory
zendesk.chat.ChatConfiguration: zendesk.chat.FormField$Status getPhoneFieldStatus()
zendesk.chat.ChatSessionManager
zendesk.chat.JwtLoginDetailsProvider$2: JwtLoginDetailsProvider$2(zendesk.chat.JwtLoginDetailsProvider,zendesk.chat.CompletionCallback)
com.google.android.gms.internal.measurement.zzbv$zzf: int zzc
zendesk.chat.PersistentCookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
zendesk.chat.DnModels$ChatLog$Attachment: int hashCode()
zendesk.chat.R$style: int Base_Theme_AppCompat_Light_Dialog
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
zendesk.chat.R$styleable: int AppCompatTheme_actionBarWidgetTheme
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
zendesk.chat.R$style: int TextAppearance_AppCompat_Display1
zendesk.chat.ChatEngineModule_LifecycleOwnerFactory: zendesk.chat.ChatEngineModule_LifecycleOwnerFactory INSTANCE
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.ChatVisitorClient$Builder withBaseAuthUrl(java.lang.String)
zendesk.chat.ChatLogBlacklister_Factory: zendesk.chat.ChatLogBlacklister newInstance(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.R$style: int ThemeOverlay_AppCompat
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
zendesk.chat.R$styleable: int[] AnimatedStateListDrawableCompat
zendesk.belvedere.KeyboardHelper: int getKeyboardHeight()
zendesk.chat.R$styleable: int Toolbar_contentInsetStartWithNavigation
zendesk.chat.R$layout: R$layout()
zendesk.chat.ChatSession: void sendChatComment(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$style: int ThemeOverlay_AppCompat_Dialog
zendesk.chat.MainThreadPoster$2: MainThreadPoster$2(zendesk.chat.MainThreadPoster,com.zendesk.service.ZendeskCallback)
zendesk.chat.DaggerChatProvidersComponent$Builder: zendesk.chat.ChatProvidersComponent$Builder context(android.content.Context)
zendesk.chat.R$styleable: int GradientColor_android_centerY
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
zendesk.chat.R$styleable: int AppCompatTextHelper_android_drawableBottom
zendesk.chat.SendMessageRequest: zendesk.chat.PathValueSender pathValueSender
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.KeepAliveSignal getKeepAlive()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
zendesk.chat.DnUpdateModels$ChatTranscriptValue
zendesk.chat.IdentityManager: zendesk.chat.ObservableData access$900(zendesk.chat.IdentityManager)
zendesk.chat.ChatModel$3: ChatModel$3(zendesk.chat.ChatModel)
com.google.gson.reflect.TypeToken: java.lang.Class getRawType()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
zendesk.chat.R$style: int Theme_AppCompat_DialogWhenLarge
zendesk.chat.FormField$Status
zendesk.chat.R$styleable: int[] ViewStubCompat
zendesk.chat.ChatLogBlacklister_Factory: javax.inject.Provider baseStorageProvider
zendesk.chat.ChatEngine$Status
com.google.android.gms.internal.measurement.zzbv$zzf: java.lang.String zze
zendesk.chat.DataStore: zendesk.chat.ChatStateStore getChatStateStore()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
zendesk.chat.ChatForm: java.lang.String getMessageAcknowledgementMessage()
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
zendesk.chat.DepartmentField
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_connectionProvider: zendesk.chat.ConnectionProvider get()
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
zendesk.chat.BaseModule_GetHttpLoggingInterceptorFactory: java.lang.Object get()
zendesk.messaging.ui.AvatarView
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
zendesk.chat.IdentityManager$IdentityResetCompletion$1: void onSuccess(java.lang.Void)
zendesk.chat.R$styleable: int SwitchCompat_splitTrack
zendesk.chat.ChatLog$Rating: int hashCode()
zendesk.chat.R$attr: int navigationIcon
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
zendesk.chat.AndroidUtils: java.lang.String getVersionName(android.content.Context)
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
zendesk.chat.R$dimen: int notification_media_narrow_margin
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzcd$zzh zzaq
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
zendesk.chat.DeliveryStatusMonitor: void update(java.util.Map)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
zendesk.chat.ChatLog$OptionsMessage
zendesk.chat.SendFileRequest: void onCompleted(java.lang.Object)
zendesk.chat.R$styleable: int ActionBar_homeAsUpIndicator
com.google.android.material.chip.Chip: void setCheckableResource(int)
zendesk.chat.R$style: int Platform_Widget_AppCompat_Spinner
zendesk.chat.ObservationToken: zendesk.chat.Observer observer
zendesk.chat.R$styleable: int Toolbar_collapseIcon
zendesk.chat.R$dimen: int abc_text_size_title_material_toolbar
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
zendesk.chat.provider.BuildConfig: java.lang.String VERSION_NAME
zendesk.chat.ChatContext
zendesk.chat.ChatEngineModule_GetChatAgentAvailabilityStageFactory: zendesk.chat.ChatAgentAvailabilityStage get()
zendesk.chat.R$attr: int dialogPreferredPadding
zendesk.chat.ChatEngine$4
zendesk.chat.TextField: zendesk.chat.TextField$InputValidator inputValidator
zendesk.chat.ChatPhase: zendesk.chat.ChatPhase[] values()
zendesk.chat.R$dimen: int tooltip_margin
zendesk.chat.ChatForm: zendesk.chat.VisitorInfo extractVisitorInfo()
zendesk.chat.R$style: int Base_Widget_AppCompat_ListPopupWindow
zendesk.chat.R$drawable: int abc_scrubber_track_mtrl_alpha
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Menu
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
zendesk.chat.PushNotificationsProvider: void unregisterPushToken(com.zendesk.service.ZendeskCallback)
zendesk.chat.R$styleable: int AppCompatTheme_popupMenuStyle
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus nameFieldStatus
zendesk.chat.ChatLogMapper: zendesk.messaging.MessagingItem convertMemberJoin(zendesk.chat.ChatLog)
zendesk.chat.R$styleable: int LinearLayoutCompat_divider
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.android.gms.internal.measurement.zzcd$zza
zendesk.chat.ChatStatusCheckStage: zendesk.messaging.components.bot.BotMessageDispatcher botMessageDispatcher
zendesk.chat.ChatState: zendesk.chat.ChatSessionStatus chatSessionStatus
com.google.android.gms.internal.measurement.zzll: com.google.android.gms.internal.measurement.zzll[] values()
zendesk.chat.DnUpdateModels$Notes$SetNotes: java.lang.String notes
zendesk.chat.DeliveryStatus: DeliveryStatus(java.lang.String,int,int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
zendesk.chat.ChatSession: void sendChatRating(zendesk.chat.ChatRating,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$styleable: int ActivityChooserView_initialActivityCount
zendesk.chat.R$dimen: int abc_text_size_headline_material
zendesk.chat.R$string: int zch_chat_transcript_request_confirmation
zendesk.chat.ChatProvider: void sendOfflineForm(zendesk.chat.OfflineForm,com.zendesk.service.ZendeskCallback)
zendesk.chat.ZendeskChatProvider: zendesk.chat.ChatLog$Message resendFailedMessage(java.lang.String)
zendesk.commonui.AlmostRealProgressBar$Step: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$styleable: int AppCompatTextHelper_android_textAppearance
zendesk.chat.AnonymousLoginDetailsProvider: zendesk.chat.MachineIdStorage machineIdStorage
zendesk.chat.PersistentCookieJar: zendesk.chat.BaseStorage baseStorage
zendesk.chat.WebSocket$WebSocketListener$WebSocketState: zendesk.chat.WebSocket$WebSocketListener$WebSocketState CLOSING
zendesk.chat.R$styleable: int AppCompatTheme_popupWindowStyle
zendesk.chat.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
zendesk.chat.ChatEngine$InputProcessor: ChatEngine$InputProcessor(zendesk.chat.ChatEngine,zendesk.chat.ChatProvider,zendesk.chat.ObservableData,zendesk.chat.ChatStringProvider)
zendesk.chat.ChatSession: void connect()
zendesk.chat.ChatEngine$Status: zendesk.chat.ChatEngine$Status valueOf(java.lang.String)
zendesk.chat.ChatEngine$InputProcessor: void update(java.lang.String)
zendesk.chat.R$drawable: int abc_dialog_material_background
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String getDt()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
zendesk.chat.DnModels$Profile: java.lang.String getNick()
zendesk.chat.ChatStringProvider: java.lang.String emailFieldPrompt()
zendesk.chat.ZendeskChatProvider_Factory: java.lang.Object get()
zendesk.chat.IdentityManager: void setIdentity(zendesk.chat.JwtAuthenticator,zendesk.chat.CompletionCallback)
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
zendesk.chat.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$dimen: int abc_dialog_min_width_major
zendesk.chat.R$styleable: int ActionMode_background
zendesk.chat.Connection: java.util.concurrent.atomic.AtomicReference scheduledReconnection
zendesk.chat.ZendeskAccountProvider: void observeAccount(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.DataNode: void update(java.util.List)
zendesk.chat.R$style: int Theme_AppCompat_Light_Dialog_Alert
zendesk.chat.R$dimen: int abc_switch_padding
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.R$styleable: int AppCompatTheme_windowActionBar
zendesk.chat.R$dimen: int abc_edit_text_inset_horizontal_material
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
zendesk.chat.ChatAgentAvailabilityStage$1: zendesk.chat.ChatAgentAvailabilityStage this$0
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
zendesk.chat.R$style: int Widget_Compat_NotificationActionContainer
zendesk.chat.ChatProvidersModule: ChatProvidersModule()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
zendesk.chat.ChatProvidersModule_ObservableJwtAuthenticatorFactory: zendesk.chat.ObservableData get()
zendesk.chat.R$dimen: int abc_action_button_min_width_overflow_material
com.google.android.material.chip.Chip: void setIconStartPadding(float)
zendesk.chat.R$styleable: int PopupWindow_android_popupAnimationStyle
zendesk.chat.R$layout: int abc_list_menu_item_icon
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_Switch
zendesk.chat.DefaultChatSession: void sendPushToken(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.VisitorInfo: zendesk.chat.VisitorInfo$Builder builder(zendesk.chat.VisitorInfo)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
zendesk.chat.DnUpdateModels: DnUpdateModels()
zendesk.chat.R$style: int Widget_AppCompat_ListMenuView
zendesk.chat.DefaultChatSession$7
zendesk.chat.Frames$Command: zendesk.chat.Frames$Command valueOf(java.lang.String)
zendesk.chat.RequestSender: void onCompleted(java.lang.Object)
zendesk.chat.R$attr: int textColorAlertDialogListItem
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
androidx.coordinatorlayout.widget.CoordinatorLayout
com.google.android.gms.internal.measurement.zzck$zzb: com.google.android.gms.internal.measurement.zzck$zzb zzk
zendesk.chat.FrameFactory: FrameFactory(com.google.gson.Gson)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
zendesk.chat.MainThreadPoster$1$1: zendesk.chat.MainThreadPoster$1 this$1
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
zendesk.chat.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
zendesk.chat.DnUpdateModels$PushToken: DnUpdateModels$PushToken(java.lang.String,zendesk.chat.DnUpdateModels$1)
zendesk.chat.R$styleable: int Toolbar_popupTheme
zendesk.chat.ChatVisitorClient: ChatVisitorClient(java.lang.String,java.lang.String,zendesk.chat.ChatSocketClient,java.util.concurrent.ScheduledExecutorService,com.google.gson.Gson,zendesk.chat.NetworkConnectivity,zendesk.chat.MachineIdStorage,zendesk.chat.AuthenticationStorage,retrofit2.Retrofit)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
zendesk.chat.WebSocket$WebSocketListener$WebSocketState: zendesk.chat.WebSocket$WebSocketListener$WebSocketState CLOSED
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur$internal
zendesk.chat.DeliveryStatusMonitor: java.util.Map listenerByTimestampId
zendesk.chat.MainThreadPoster$3$1: MainThreadPoster$3$1(zendesk.chat.MainThreadPoster$3,java.lang.Object)
zendesk.chat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
zendesk.chat.DnModels$Account$Status: DnModels$Account$Status(java.lang.String,int)
zendesk.chat.JwtAuthenticator
zendesk.chat.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.google.android.gms.internal.measurement.zzca$zzc: com.google.android.gms.internal.measurement.zzca$zzc zzf
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
zendesk.chat.R$attr: int alertDialogStyle
zendesk.chat.R$id: int buttonPanel
zendesk.chat.MainThreadPoster$3$1: void run()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_identityManager
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)
zendesk.chat.ChatForm: zendesk.chat.ChatForm createOfflineForm(zendesk.chat.ChatStringProvider,zendesk.messaging.AgentDetails,zendesk.chat.EmailInputValidator,boolean,boolean)
zendesk.chat.JwtLoginDetailsProvider$1: zendesk.chat.JwtLoginDetailsProvider this$0
zendesk.chat.ChatProvidersStorage: java.lang.String MACHINE_ID_KEY
zendesk.chat.AnonymousLoginDetailsProvider$1
zendesk.chat.R$style: int Widget_AppCompat_CompoundButton_Switch
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
zendesk.chat.NetworkConnectivity$State: zendesk.chat.NetworkConnectivity$State[] $VALUES
com.google.android.gms.measurement.internal.zzw: android.os.Parcelable$Creator CREATOR
zendesk.chat.ChatProvidersModule_ObservableChatSettingsFactory: zendesk.chat.ObservableData get()
zendesk.chat.DefaultChatSession$14: DefaultChatSession$14(zendesk.chat.DefaultChatSession,java.util.List,com.zendesk.service.ZendeskCallback)
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus[] values()
zendesk.chat.AndroidModule_V1StorageFactory
zendesk.chat.R$string: int zch_offline_form_completion_acknowledgement
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
zendesk.chat.ChatEngine_Factory: javax.inject.Provider chatProvider
zendesk.chat.R$bool: int abc_action_bar_embed_tabs
zendesk.chat.Connection: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.AnonymousLoginDetailsProvider anonymousLoginDetailsProvider
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
zendesk.chat.ChatEngineModule: zendesk.chat.ChatEngine$EngineStartedCompletion engineStartedCompletion(zendesk.chat.ChatProvider,zendesk.chat.ChatAgentAvailabilityStage,zendesk.chat.ChatModel,zendesk.messaging.components.bot.BotMessageDispatcher,zendesk.messaging.components.DateProvider,zendesk.messaging.components.IdProvider,zendesk.chat.ChatStringProvider)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.MessageAck: java.lang.String id
zendesk.chat.ChatInfo: boolean isChatting
zendesk.chat.SharedPreferencesStorage_Factory: javax.inject.Provider gsonProvider
zendesk.chat.ChatEngineModule_ProvideIdProviderFactory: zendesk.messaging.components.IdProvider get()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.google.android.material.chip.Chip: float getCloseIconSize()
zendesk.chat.PayloadAuthenticatedVisitorLogin
com.google.android.gms.internal.measurement.zzcd$zzc: long zzf
zendesk.chat.ChatEngineModule_ProvideDateProviderFactory
zendesk.chat.ProfileProvider: void trackVisitorPath(zendesk.chat.VisitorPath,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$string: int abc_capital_on
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
zendesk.chat.AuthenticationResponse: boolean isSuccess()
zendesk.chat.WebSocket$WebSocketListener$WebSocketState: zendesk.chat.WebSocket$WebSocketListener$WebSocketState CONNECTED
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserPropertiesAs(java.lang.String,java.lang.String,java.lang.String)
zendesk.chat.R$styleable: int ViewBackgroundHelper_backgroundTintMode
zendesk.chat.ChatSession: void removeVisitorTags(java.util.List,com.zendesk.service.ZendeskCallback)
zendesk.chat.Connection$3: void run()
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
zendesk.chat.ChatSdkComponent
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzib getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
zendesk.chat.ChatEngineModule: zendesk.chat.ChatStringProvider chatStringProvider(zendesk.chat.DefaultChatStringProvider)
zendesk.chat.R$attr: int listMenuViewStyle
zendesk.chat.LoginDetailsFactory: java.lang.String ref
zendesk.chat.ChatSocketConnection$State: zendesk.chat.ChatSocketConnection$State[] values()
zendesk.chat.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
zendesk.chat.R$color: int bright_foreground_material_dark
zendesk.chat.ChatEngine$3: ChatEngine$3(zendesk.chat.ChatEngine,java.lang.String)
zendesk.chat.AccountStatus: zendesk.chat.AccountStatus OFFLINE
zendesk.chat.IdentityManager: zendesk.chat.ChatSessionManager chatSessionManager
zendesk.chat.R$attr: int listPreferredItemHeightLarge
zendesk.chat.R$attr: int selectableItemBackgroundBorderless
zendesk.chat.R$attr: int listPreferredItemHeight
com.google.android.material.internal.ForegroundLinearLayout
zendesk.chat.ChatModel_Factory: javax.inject.Provider chatProvider
zendesk.chat.R$string: int zch_chat_rating_label_good
com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter next
zendesk.chat.ZendeskAccountProvider: zendesk.chat.ChatService chatService
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
zendesk.chat.R$style: int Widget_AppCompat_ButtonBar
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: javax.inject.Provider chatProvider
zendesk.chat.R$attr: int subtitle
zendesk.chat.EmailInputValidator: EmailInputValidator(zendesk.chat.ChatStringProvider)
androidx.activity.ImmLeaksCleaner
zendesk.chat.ChatParticipant: zendesk.chat.ChatParticipant valueOf(java.lang.String)
zendesk.chat.R$styleable: int SearchView_android_inputType
zendesk.chat.R$attr: int splitTrack
zendesk.chat.R$attr: int buttonBarButtonStyle
zendesk.chat.R$attr: int actionViewClass
zendesk.chat.provider.BuildConfig: java.lang.String BUILD_TYPE
zendesk.chat.ObservationScope: void cancel()
zendesk.chat.DefaultChatSession$6: zendesk.chat.DefaultChatSession this$0
zendesk.chat.R$dimen: int abc_edit_text_inset_top_material
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzw
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
zendesk.chat.R$attr: int tintMode
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.gms.internal.measurement.zzcd$zzg: int zzao
zendesk.chat.SharedPreferencesStorage: android.content.SharedPreferences sharedPreferences
zendesk.chat.ZendeskSettingsProvider_Factory: javax.inject.Provider observableChatSettingsProvider
android.support.v4.media.MediaDescriptionCompat
androidx.appcompat.app.AppCompatActivity
zendesk.chat.ChatEngineModule_ChatFormStageFactory: zendesk.chat.ChatEngineModule_ChatFormStageFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.DnModels$Account: zendesk.chat.DnModels$Account$Status status
com.google.android.gms.internal.measurement.zzli: com.google.android.gms.internal.measurement.zzli[] values()
zendesk.chat.DefaultChatSession$16: void run()
zendesk.chat.FileUploader$MeteredRequestBody$1
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
zendesk.chat.Frames$Base
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
zendesk.chat.MessageIdGenerator: void update(zendesk.chat.ChatState)
zendesk.chat.ChatEngine$Status: zendesk.chat.ChatEngine$Status ENGINE_STARTED
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
zendesk.chat.DnModels$ChatLog: java.lang.String msg
zendesk.chat.ZendeskAccountProvider$1: void update(zendesk.chat.Account)
zendesk.chat.R$attr: int commitIcon
zendesk.chat.AndroidModule_BaseStorageFactory
zendesk.chat.ChatStateStore: java.util.Map messageLogsById
zendesk.chat.ChatEngineModule_ProvideCompositeUpdateListenerFactory: ChatEngineModule_ProvideCompositeUpdateListenerFactory()
zendesk.chat.ChatStatusCheckStage$1: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.R$dimen: int notification_content_margin_start
com.google.android.gms.internal.measurement.zzcd$zzj: com.google.android.gms.internal.measurement.zzcd$zzj zzf
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider chatProvidersStorageProvider
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.google.android.gms.internal.measurement.zzcd$zzf: com.google.android.gms.internal.measurement.zzju zze
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider identityManagerProvider
zendesk.chat.MainThreadPoster$1$1: void run()
zendesk.chat.R$styleable: int ColorStateListItem_alpha
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
zendesk.chat.SharedPreferencesStorage: java.lang.Object get(java.lang.String,java.lang.Class)
zendesk.chat.R$id: int decor_content_parent
com.google.android.gms.signin.internal.zah: android.os.Parcelable$Creator CREATOR
zendesk.chat.BaseModule_ScheduledExecutorServiceFactory: zendesk.chat.BaseModule_ScheduledExecutorServiceFactory create()
zendesk.chat.AccountStatus: zendesk.chat.AccountStatus[] $VALUES
zendesk.chat.ChatProvidersModule_ObservableVisitorInfoFactory: zendesk.chat.ChatProvidersModule_ObservableVisitorInfoFactory INSTANCE
zendesk.chat.ChatLogBlacklister: zendesk.chat.BaseStorage baseStorage
zendesk.chat.ChatLogMapper: java.lang.String CHAT_RATING_OPTION_GOOD_ID
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
zendesk.chat.ObservableData$1: void run()
zendesk.chat.OkHttpWebSocket
zendesk.chat.ChatConfiguration$Builder: boolean access$102(zendesk.chat.ChatConfiguration$Builder,boolean)
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
zendesk.belvedere.BelvedereFileProvider: BelvedereFileProvider()
zendesk.chat.R$styleable: int[] AlertDialog
zendesk.chat.DefaultChatSession$7: void run()
zendesk.chat.R$string: int abc_searchview_description_submit
zendesk.chat.AndroidModule: zendesk.chat.NetworkConnectivity networkConnectivity(android.content.Context,android.os.Handler)
zendesk.chat.ChatMenuAction: zendesk.chat.ChatMenuAction valueOf(java.lang.String)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
zendesk.chat.OfflineForm: zendesk.chat.VisitorInfo getVisitorInfo()
zendesk.chat.DefaultChatSession$4: com.zendesk.service.ZendeskCallback val$callback
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
zendesk.chat.OfflineForm$Builder: zendesk.chat.OfflineForm$Builder withDepartment(java.lang.String)
androidx.cardview.widget.CardView: void setCardElevation(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
zendesk.chat.ChatModel: zendesk.chat.CacheManager cacheManager
zendesk.chat.R$styleable: int ViewStubCompat_android_inflatedId
zendesk.chat.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
zendesk.chat.BaseModule_RetrofitFactory: javax.inject.Provider gsonProvider
com.google.android.gms.internal.measurement.zzcd$zzh: int zzc
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
zendesk.chat.ChatLogBlacklister_Factory: java.lang.Object get()
zendesk.chat.ChatFormDriver$2: zendesk.chat.ChatFormStage$OfflineFormCompletion val$offlineFormCompletion
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
zendesk.chat.TimerModule
zendesk.chat.Tls12SocketFactory: java.net.Socket createSocket(java.lang.String,int)
zendesk.chat.R$string: int zch_member_leave
zendesk.chat.R$drawable: int abc_list_pressed_holo_dark
zendesk.chat.ChatFormDriver$2: ChatFormDriver$2(zendesk.chat.ChatFormDriver,zendesk.chat.ChatFormStage$OfflineFormCompletion,zendesk.chat.ChatContext)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
zendesk.chat.R$dimen: int abc_text_size_subhead_material
zendesk.chat.ChatObserverFactory: zendesk.chat.ChatLogMapper chatLogMapper
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue createChatMessage(long,java.lang.String)
zendesk.chat.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
zendesk.chat.R$style: int Widget_AppCompat_ProgressBar_Horizontal
zendesk.chat.ChatEngine: zendesk.messaging.Engine$TransferOptionDescription transferOptionDescription
zendesk.chat.ZendeskAccountProvider_Factory: javax.inject.Provider mainThreadPosterProvider
zendesk.messaging.ui.InputBox: void setInputType(java.lang.Integer)
zendesk.chat.JwtLoginDetailsProvider: boolean access$000(zendesk.chat.JwtLoginDetailsProvider,zendesk.chat.AuthenticationWrapper)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
zendesk.chat.R$layout: int abc_search_dropdown_item_icons_2line
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
zendesk.chat.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
zendesk.belvedere.KeyboardHelper: int getStatusBarHeight()
zendesk.chat.R$attr: int logo
zendesk.chat.DnUpdateModels$VisitorTypingStatus
zendesk.chat.ChatProvidersStorage: void saveAuthenticationWrapper(zendesk.chat.AuthenticationWrapper)
zendesk.chat.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
zendesk.chat.R$dimen: int abc_action_bar_default_padding_end_material
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzbv$zzf zzd
zendesk.chat.ChatNetworkModule_ChatServiceFactory: zendesk.chat.ChatService get()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.R$styleable: int AppCompatTheme_colorControlNormal
zendesk.messaging.ui.AttachmentsIndicator: void setBottomBorderVisible(boolean)
com.google.android.material.internal.CheckableImageButton
zendesk.chat.Connection$4: void onCompleted(zendesk.chat.LoginDetails)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
zendesk.chat.FileUploader$MeteredRequestBody: okhttp3.RequestBody requestBody
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
zendesk.chat.ChatModel: zendesk.chat.ChatConnectionSupervisor chatConnectionSupervisor
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_profileProvider: zendesk.chat.ChatProvidersComponent chatProvidersComponent
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzii zze
zendesk.chat.DefaultChatSession$19: long val$timestamp
zendesk.chat.ChatObserverFactory$3: void update(java.lang.Object)
zendesk.chat.Connection$1: void update(java.lang.Object)
zendesk.chat.R$attr: int multiChoiceItemLayout
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
zendesk.chat.OfflineForm$Builder: java.lang.String message
zendesk.chat.R$styleable: int AppCompatTheme_actionDropDownStyle
zendesk.chat.ChatLog$Rating: zendesk.chat.ChatRating newChatRating
com.google.android.material.chip.Chip: void setChipIconSize(float)
zendesk.chat.DefaultChatStringProvider_Factory: zendesk.chat.DefaultChatStringProvider get()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
zendesk.chat.Connection: void onStateUpdate(zendesk.chat.ChatSocketConnection$State)
zendesk.chat.SendMessageRequest: void onSuccess(zendesk.chat.PathValue)
zendesk.chat.DnModels$ChatLog: java.lang.String chatId
zendesk.chat.DnModels$Connection$Status: zendesk.chat.DnModels$Connection$Status valueOf(java.lang.String)
zendesk.chat.AndroidModule_BaseStorageFactory: javax.inject.Provider gsonProvider
zendesk.chat.KeepAliveSignal
zendesk.chat.Connection$2: void update(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
zendesk.chat.R$styleable: int AppCompatTheme_spinnerStyle
zendesk.chat.ZendeskPushNotificationsProvider: void update(java.lang.Object)
zendesk.chat.ChatFormDriver: ChatFormDriver(zendesk.messaging.components.bot.BotMessageDispatcher,zendesk.messaging.components.DateProvider,zendesk.messaging.components.IdProvider,zendesk.chat.ChatStringProvider,zendesk.chat.EmailInputValidator)
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider observableAccountProvider
zendesk.chat.Agent: java.lang.String getAvatarPath()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
zendesk.chat.R$styleable: int SearchView_android_focusable
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
zendesk.chat.R$string: int zch_chat_rating_label_bad
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
zendesk.chat.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
zendesk.chat.R$attr: int panelMenuListTheme
zendesk.chat.ChatConfiguration: ChatConfiguration(zendesk.chat.ChatConfiguration$Builder)
zendesk.chat.SendCallbackManager$Transmission
androidx.appcompat.widget.ActionBarContainer
zendesk.chat.ZendeskPushNotificationsProvider_Factory: java.lang.Object get()
zendesk.chat.IdentityManager$IdentityResetCompletion$2: zendesk.chat.IdentityManager$IdentityResetCompletion this$1
zendesk.chat.R$style: int Widget_AppCompat_ListView_DropDown
zendesk.chat.ChatLog$Comment
zendesk.chat.DefaultChatSession$9: boolean val$isTyping
io.flutter.embedding.android.FlutterImageView
zendesk.chat.AuthenticationResponse: java.lang.String state
zendesk.chat.DnModels$ChatLog$Type: zendesk.chat.DnModels$ChatLog$Type CHAT_RATING
zendesk.chat.DataStore: zendesk.chat.ObservableData access$500(zendesk.chat.DataStore)
com.google.android.gms.internal.measurement.zzhz$zzb
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
zendesk.chat.ChatStateStore: zendesk.chat.ChatLog deleteLog(java.lang.String,java.util.Map)
androidx.fragment.app.FragmentActivity: FragmentActivity()
zendesk.chat.FormField$Status: zendesk.chat.FormField$Status UNKNOWN
zendesk.chat.ChatEngineModule_ProvideIdProviderFactory: ChatEngineModule_ProvideIdProviderFactory()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
zendesk.chat.Form: java.lang.String skipLabelText
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String getAccountKey()
zendesk.chat.R$styleable: int MenuGroup_android_menuCategory
zendesk.chat.R$style: int ThemeOverlay_AppCompat_Dark
zendesk.chat.R$styleable: int TextAppearance_android_typeface
zendesk.chat.ChatLog$Type: ChatLog$Type(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
zendesk.chat.ZendeskChatProvider$3: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.ChatState: java.lang.String chatComment
zendesk.messaging.ui.InputBox: void setEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
zendesk.chat.TimerModule: android.os.Handler provideHandler()
zendesk.chat.R$attr: int measureWithLargestChild
zendesk.chat.MessageAck: java.lang.Integer getStatusCode()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
zendesk.chat.DefaultChatSession$1: void run()
zendesk.chat.ChatBotMessagingItems_Factory
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
zendesk.chat.ChatFormDriver: zendesk.messaging.components.bot.BotMessageDispatcher botMessageDispatcher
zendesk.chat.LoginDetailsFactory: java.lang.String url
zendesk.chat.DefaultChatSession: void appendVisitorNote(java.lang.String,com.zendesk.service.ZendeskCallback)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
zendesk.chat.DefaultChatStringProvider: java.lang.String skip()
zendesk.chat.DefaultChatSocketConnection: void frameReceived(java.lang.String)
zendesk.chat.MainThreadPoster_Factory: zendesk.chat.MainThreadPoster_Factory create(javax.inject.Provider)
zendesk.chat.R$attr: int titleMarginStart
zendesk.chat.ChatLogMapper: zendesk.messaging.Update getTypingUpdate(zendesk.chat.ChatState)
zendesk.chat.R$attr: int actionModeBackground
zendesk.chat.AndroidModule_NetworkConnectivityFactory: zendesk.chat.AndroidModule_NetworkConnectivityFactory create(javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ChatEngineModule: zendesk.messaging.components.DateProvider provideDateProvider()
zendesk.chat.R$styleable: int AppCompatTextView_drawableTint
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
zendesk.chat.R$style: int TextAppearance_AppCompat_Medium
zendesk.chat.DnUpdateModels$DepartmentPref: DnUpdateModels$DepartmentPref(java.lang.Long,zendesk.chat.DnUpdateModels$1)
zendesk.chat.Chat: void init(zendesk.chat.ChatProvidersComponent)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level valueOf(java.lang.String)
zendesk.chat.R$style: int TextAppearance_Compat_Notification
zendesk.chat.BaseModule_GetHttpLoggingInterceptorFactory: zendesk.chat.BaseModule_GetHttpLoggingInterceptorFactory create()
zendesk.chat.OkHttpWebSocket: okhttp3.OkHttpClient client
zendesk.chat.R$style: int Theme_AppCompat
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
zendesk.chat.DnUpdateModels$DepartmentPref: java.lang.Long departmentId
zendesk.chat.R$layout: int abc_list_menu_item_radio
zendesk.chat.ZendeskProfileProvider: java.util.concurrent.atomic.AtomicReference observationScopeReference
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: javax.inject.Provider chatModelProvider
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
zendesk.chat.R$dimen: int highlight_alpha_material_colored
zendesk.chat.ChatStringProvider: java.lang.String preChatFormIntroduction()
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
zendesk.chat.DefaultChatSocketConnection: void sendObject(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView
zendesk.chat.Connection$3
zendesk.chat.BaseStorage: java.lang.String get(java.lang.String)
zendesk.chat.IdentityManager$IdentityResetCompletion: zendesk.chat.IdentityManager this$0
zendesk.chat.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.google.android.gms.internal.measurement.zzcd$zzg: int zzc
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
zendesk.chat.PathUpdate
zendesk.chat.AndroidModule_MainHandlerFactory: android.os.Handler get()
androidx.appcompat.widget.Toolbar: void setTitle(int)
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider scheduledExecutorServiceProvider
zendesk.chat.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
zendesk.chat.IdentityManager: java.util.Queue updateQueue
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
zendesk.chat.Form: zendesk.messaging.Update$State$UpdateInputFieldState getNextInputFieldState()
zendesk.chat.DefaultChatSocketConnection: void inquiryReceived(zendesk.chat.Frames$Base)
zendesk.chat.DefaultChatSession$17: zendesk.chat.ChatStateStore val$chatStateStore
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_observableChatSettings: zendesk.chat.ObservableData get()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider settingsProvider
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.TimerModule_ProvideHandlerFactory: android.os.Handler get()
zendesk.chat.R$styleable: int CompoundButton_buttonTintMode
zendesk.chat.ChatStateStore: void updateChatStatus(zendesk.chat.ChatSessionStatus)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
zendesk.chat.ChatStateStore: java.lang.String LOG_TAG
zendesk.chat.OfflineForm: java.lang.Long getDepartmentId()
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
zendesk.chat.R$drawable: int abc_list_divider_mtrl_alpha
zendesk.chat.ZendeskChatProvider$2: ZendeskChatProvider$2(zendesk.chat.ZendeskChatProvider)
zendesk.chat.ZendeskPushNotificationsProvider
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzju zzn
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
zendesk.chat.MainThreadPoster$1: MainThreadPoster$1(zendesk.chat.MainThreadPoster,zendesk.chat.Observer)
zendesk.chat.R: R()
com.zendesk.service.ErrorResponseAdapter: com.zendesk.service.ErrorResponse fromException(java.lang.Throwable)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
zendesk.chat.R$drawable: int abc_switch_thumb_material
zendesk.chat.WebSocket$WebSocketListener$WebSocketState: zendesk.chat.WebSocket$WebSocketListener$WebSocketState[] $VALUES
zendesk.chat.ChatConnectionSupervisor
com.google.android.gms.measurement.internal.zzam: android.os.Parcelable$Creator CREATOR
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
zendesk.chat.RequestSender: void sendMessage(long,java.lang.String,zendesk.chat.CompletionCallback)
zendesk.chat.ZendeskChatProvider: void setDepartment(long,com.zendesk.service.ZendeskCallback)
zendesk.chat.provider.BuildConfig: BuildConfig()
zendesk.chat.R$attr: int colorPrimary
zendesk.chat.ChatEngine_Factory: javax.inject.Provider engineStatusObservableProvider
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
zendesk.chat.R$attr: int actionBarTabBarStyle
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
zendesk.chat.MainThreadPoster$2
zendesk.chat.R$drawable: int abc_textfield_search_default_mtrl_alpha
zendesk.chat.ChatEngine$InputProcessor
zendesk.chat.ChatEngineModule_ProvideCompositeUpdateListenerFactory: zendesk.chat.ChatEngineModule_ProvideCompositeUpdateListenerFactory create()
zendesk.chat.ChatEngineModule_ProvideBotMessageDispatcherFactory: ChatEngineModule_ProvideBotMessageDispatcherFactory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: java.lang.Object get()
zendesk.chat.ChatConfig: java.lang.String baseUrl
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
zendesk.chat.CacheManager: void clearCache()
zendesk.chat.ChatProvidersComponent$Builder: zendesk.chat.ChatProvidersComponent build()
zendesk.chat.R$attr: int closeIcon
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
zendesk.chat.DefaultChatSession$18: void run()
zendesk.chat.ChatObserverFactory$3: zendesk.chat.ChatObserverFactory this$0
zendesk.chat.R$anim: int abc_popup_enter
zendesk.chat.R$attr
zendesk.chat.OfflineForm$Builder: java.lang.String departmentName
com.google.android.material.internal.FlowLayout: int getLineSpacing()
zendesk.chat.JwtLoginDetailsProvider: void processQueue()
zendesk.chat.ChatModel_Factory: ChatModel_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
zendesk.chat.PayloadAuthenticatedVisitorLogin: java.lang.String getRef()
zendesk.chat.R$dimen: int abc_seekbar_track_background_height_material
zendesk.chat.ChatStatusCheckStage: void onEngineStarted(zendesk.chat.ChatContext)
zendesk.chat.R$style: int TextAppearance_Compat_Notification_Title
zendesk.chat.R$style: int Animation_AppCompat_DropDownUp
zendesk.chat.R$styleable: int Toolbar_menu
zendesk.chat.R$styleable: int MenuView_android_headerBackground
zendesk.chat.CacheManager_Factory: zendesk.chat.CacheManager newInstance(zendesk.chat.ObservableData,zendesk.chat.ObservableData,zendesk.chat.ObservableData)
zendesk.chat.Connection: java.lang.String getSocketId()
zendesk.messaging.Banner$Position: zendesk.messaging.Banner$Position valueOf(java.lang.String)
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory: ChatEngineModule_EngineStartedCompletionFactory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.DnModels$Account$Status: zendesk.chat.DnModels$Account$Status UNKNOWN
zendesk.chat.AuthenticationResponse: java.lang.String getIdToken()
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
zendesk.chat.OptionSelectField: zendesk.messaging.AgentDetails agentDetails
zendesk.chat.R$styleable: int AppCompatImageView_srcCompat
zendesk.chat.R$string: int zch_chat_rating_comment_action_label
zendesk.chat.ZendeskProfileProvider_Factory: zendesk.chat.ZendeskProfileProvider newInstance(java.lang.Object,java.lang.Object,zendesk.chat.ObservableData)
kotlinx.coroutines.android.AndroidExceptionPreHandler
zendesk.chat.ChatSessionManager: ChatSessionManager(zendesk.chat.ObservableData,zendesk.chat.ChatVisitorClient,zendesk.chat.ChatConfig)
zendesk.chat.UserAgentAndClientHeadersInterceptor_Factory: UserAgentAndClientHeadersInterceptor_Factory()
zendesk.chat.Account: java.util.List departments
zendesk.chat.R$dimen: int notification_action_text_size
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
zendesk.chat.IdentityManager: java.util.concurrent.atomic.AtomicBoolean updateInProgress
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
zendesk.chat.FormField: java.util.List getMessagingItems(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
zendesk.chat.ChatStatusCheckStage: zendesk.chat.ChatStatusCheckStage$ChatStartedCompletion access$000(zendesk.chat.ChatStatusCheckStage)
com.google.android.material.chip.Chip: void setTextAppearance(int)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.R$style: int Theme_AppCompat_Dialog_Alert
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
zendesk.chat.R$styleable: int MenuView_android_itemBackground
zendesk.chat.R$id: int action_divider
zendesk.chat.AuthenticationWrapper: long getTimeFetched()
zendesk.chat.R$attr: int dropDownListViewStyle
zendesk.chat.R$styleable: int ButtonBarLayout_allowStacking
zendesk.chat.BaseModule_GetHttpLoggingInterceptorFactory: okhttp3.logging.HttpLoggingInterceptor get()
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzt
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
zendesk.chat.ChatEngineModule_EngineStatusObservableFactory: java.lang.Object get()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
zendesk.chat.R$drawable: int notification_template_icon_low_bg
zendesk.chat.SendCallbackManager
zendesk.chat.R$styleable: int AppCompatTextView_drawableRightCompat
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
zendesk.chat.R$dimen: int disabled_alpha_material_dark
zendesk.chat.DnModels$Connection: zendesk.chat.DnModels$Connection$Status status
android.support.v4.media.session.MediaSessionCompat$QueueItem
zendesk.chat.ChatEngineModule_GetChatAgentAvailabilityStageFactory: javax.inject.Provider chatFormStageProvider
zendesk.chat.R$drawable: int abc_ic_search_api_material
zendesk.chat.DefaultChatSession$3: DefaultChatSession$3(zendesk.chat.DefaultChatSession,java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
zendesk.chat.R$styleable: int ActionBar_displayOptions
zendesk.chat.ChatEngineModule_ProvideBotMessageDispatcherFactory: javax.inject.Provider updateActionListenerProvider
zendesk.chat.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
zendesk.chat.R$attr: int subMenuArrow
zendesk.chat.UserAgentAndClientHeadersInterceptor: java.lang.String X_ZENDESK_CLIENT_HEADER_NAME
zendesk.chat.R$styleable: int GradientColor_android_startX
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory: zendesk.chat.ChatVisitorClient getChatVisitorClient(java.lang.Object,okhttp3.OkHttpClient,java.util.concurrent.ScheduledExecutorService,zendesk.chat.NetworkConnectivity,java.lang.Object,android.content.Context)
zendesk.chat.ChatSocketClient
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
zendesk.chat.DnUpdateModels$VisitorPathUpdate
zendesk.chat.Frames$Command: zendesk.chat.Frames$Command UNKNOWN
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
zendesk.chat.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
zendesk.chat.DnConverterUtils: zendesk.chat.ChatPhase getChatPhase(zendesk.chat.DnModels$LiveChat)
zendesk.chat.ChatLogMapper: zendesk.chat.ChatLogBlacklister chatLogBlacklister
zendesk.chat.NetworkConnectivityProvider$2$2: NetworkConnectivityProvider$2$2(zendesk.chat.NetworkConnectivityProvider$2)
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
zendesk.chat.ChatForm: java.lang.String EMAIL_FIELD_ID
zendesk.chat.TimerModule_TimerFactoryFactory: zendesk.messaging.components.Timer$Factory get()
zendesk.chat.FormField$Status: zendesk.chat.FormField$Status[] values()
zendesk.chat.Frames$Base: long getSequenceNumber()
zendesk.chat.ChatEngineModule_ProvideDateProviderFactory: zendesk.messaging.components.DateProvider get()
zendesk.chat.DefaultChatSession$20: void run()
zendesk.chat.DnModels$Agent: java.lang.String getAvatarPath()
zendesk.chat.MessageAck$Wrapper: zendesk.chat.MessageAck getMessageAck()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String)
zendesk.chat.ChatNetworkModule_ChatServiceFactory: java.lang.Object get()
zendesk.chat.DataNode: java.util.Map observableBranchMap
zendesk.chat.SendFileRequest: long ts
zendesk.chat.R$style: int Widget_AppCompat_DropDownItem_Spinner
zendesk.chat.R$styleable: int[] FontFamily
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.google.android.gms.internal.measurement.zzck$zzb: com.google.android.gms.internal.measurement.zzii zzi
zendesk.chat.R$bool: R$bool()
zendesk.chat.R$styleable: int[] LinearLayoutCompat
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
zendesk.chat.ChatObserverFactory$1: javax.inject.Provider val$preChatMessagingItemsProvider
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
zendesk.chat.R$string: R$string()
zendesk.chat.Frames$Base: zendesk.chat.Frames$Command command
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
zendesk.chat.R$styleable: int[] ActionMenuItemView
zendesk.chat.R$styleable: int[] ViewBackgroundHelper
zendesk.chat.R$color: int material_grey_600
zendesk.chat.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.google.android.material.button.MaterialButton: void setIconPadding(int)
zendesk.chat.R$attr: int buttonBarNegativeButtonStyle
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
zendesk.chat.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
zendesk.chat.ChatEngine_Factory: javax.inject.Provider chatStringProvider
zendesk.chat.R$attr: int tickMarkTintMode
zendesk.chat.R$drawable: int notification_bg
zendesk.chat.IdentityManager$IdentityResetCompletion$2
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
zendesk.chat.ChatProvidersModule_ObservableChatStateFactory
zendesk.chat.ChatEngineModule_ProvideBotMessageIdentifierFactory: zendesk.messaging.components.bot.BotMessageDispatcher$MessageIdentifier provideBotMessageIdentifier()
zendesk.chat.R$id: int checkbox
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus FAILED_FILE_SIZE_TOO_LARGE
zendesk.chat.ChatSessionManager_Factory: zendesk.chat.ChatSessionManager_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
zendesk.chat.DefaultChatStringProvider: java.lang.String emailFieldPrompt()
zendesk.chat.DnUpdateModels$RequestChat
com.google.android.gms.internal.measurement.zzcd$zze
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
io.flutter.app.FlutterApplication: FlutterApplication()
zendesk.chat.ZendeskSettingsProvider: void update(zendesk.chat.ChatSession)
zendesk.chat.R$styleable: int ActionMode_titleTextStyle
zendesk.chat.ChatConfiguration$Builder: boolean access$302(zendesk.chat.ChatConfiguration$Builder,boolean)
zendesk.chat.R$styleable: int StateListDrawableItem_android_drawable
zendesk.messaging.DialogContent$Config: zendesk.messaging.DialogContent$Config valueOf(java.lang.String)
zendesk.chat.ChatFormStage: zendesk.chat.ConnectionProvider connectionProvider
okhttp3.WebSocketListener: WebSocketListener()
zendesk.chat.ZendeskProfileProvider_Factory: javax.inject.Provider observableVisitorInfoProvider
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
zendesk.chat.DnConverterUtils: zendesk.chat.ChatLog$Message message(long,java.lang.String,zendesk.chat.DataStore,zendesk.chat.DeliveryStatus)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
zendesk.chat.ChatProvider: void sendChatRating(zendesk.chat.ChatRating,com.zendesk.service.ZendeskCallback)
zendesk.chat.JwtLoginDetailsProvider$1: JwtLoginDetailsProvider$1(zendesk.chat.JwtLoginDetailsProvider,zendesk.chat.AuthenticationWrapper,zendesk.chat.CompletionCallback)
zendesk.chat.R$styleable: int[] ActionMode
zendesk.chat.ChatConfiguration$Builder: ChatConfiguration$Builder()
zendesk.chat.ChatProvidersModule_ObservableVisitorInfoFactory: zendesk.chat.ChatProvidersModule_ObservableVisitorInfoFactory create()
zendesk.chat.ChatLog: java.lang.String getNick()
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
okio.ForwardingSink: okio.Sink delegate
zendesk.chat.OkHttpWebSocket$WebSocketErrorResponse: java.lang.String getResponseBodyType()
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.LoginDetailsFactory loginDetailsFactory
zendesk.chat.ConnectionProvider: void disconnect()
zendesk.chat.R$styleable: int MenuGroup_android_id
zendesk.chat.R$layout: int abc_screen_simple_overlay_action_mode
zendesk.chat.ChatProvidersModule: zendesk.chat.ObservableData observableChatState()
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
zendesk.chat.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
androidx.core.content.FileProvider: FileProvider()
zendesk.chat.R$drawable: int abc_btn_default_mtrl_shape
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
zendesk.chat.ChatProvider: void sendChatComment(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatEngine: void setupActionListeners(zendesk.messaging.AgentDetails)
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzcd$zzi zzg
zendesk.chat.ZendeskChatProvider$1: zendesk.chat.ZendeskChatProvider this$0
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_settingsProvider: zendesk.chat.ChatProvidersComponent chatProvidersComponent
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String getRef()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
zendesk.chat.DnConverterUtils$1: int[] $SwitchMap$zendesk$chat$ChatSessionStatus
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
zendesk.chat.R$attr: int textAppearanceSearchResultTitle
zendesk.chat.R$attr: int layout_anchorGravity
zendesk.chat.Chat: void clearCache()
zendesk.chat.AnonymousLoginDetailsProvider$1: zendesk.chat.MachineIdStorage val$machineIdStorage
zendesk.chat.IdentityManager$IdentityResetCompletion$2: IdentityManager$IdentityResetCompletion$2(zendesk.chat.IdentityManager$IdentityResetCompletion)
zendesk.chat.DnModels$ChatLog$Type
zendesk.chat.R$attr: int listPreferredItemHeightSmall
zendesk.chat.MainThreadPoster
androidx.fragment.app.FragmentManagerViewModel
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
zendesk.chat.R$style: int Widget_AppCompat_PopupMenu_Overflow
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks
zendesk.chat.SendCallbackManager$1: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.ChatNetworkModule_ChatServiceFactory: javax.inject.Provider retrofitProvider
zendesk.chat.PushData: java.lang.String message
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.ChatConfiguration$Builder withTranscriptEnabled(boolean)
androidx.activity.ComponentActivity$3
zendesk.chat.R$attr: int icon
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String getSource()
zendesk.chat.Department: Department(long,java.lang.String,zendesk.chat.DepartmentStatus)
zendesk.chat.ChatSession: void observeChatState(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.ZendeskSettingsProvider_Factory: java.lang.Object get()
zendesk.chat.ChatEngineModule_EngineStatusObservableFactory: ChatEngineModule_EngineStatusObservableFactory()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
zendesk.chat.ChatConversationOngoingChecker$1: zendesk.messaging.Engine val$engine
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
zendesk.chat.R$style: int TextAppearance_AppCompat_Button
zendesk.chat.DefaultChatSession: com.zendesk.service.ZendeskCallback errorCallback(com.zendesk.service.ZendeskCallback,java.lang.String)
zendesk.chat.ChatConnectionSupervisor_Factory: java.lang.Object get()
zendesk.chat.ChatEngine$3
zendesk.chat.ChatParticipant
zendesk.chat.DefaultChatSession: void observeChatSettings(zendesk.chat.ObservationScope,zendesk.chat.Observer)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
zendesk.chat.R$style: int Widget_AppCompat_Spinner_Underlined
zendesk.chat.DeliveryStatusMonitor: void registerListener(long,zendesk.chat.DeliveryStatusMonitor$Listener)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
zendesk.chat.ChatParticipant: zendesk.chat.ChatParticipant SYSTEM
zendesk.chat.AuthenticationWrapper: zendesk.chat.AuthenticationResponse authenticationResponse
zendesk.chat.ChatNetworkModule_ChatServiceFactory
zendesk.chat.ChatAgentAvailabilityStage: zendesk.chat.ChatAgentAvailabilityStage$AgentUnavailableContinuation access$100(zendesk.chat.ChatAgentAvailabilityStage)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
zendesk.belvedere.ImageStream
zendesk.chat.R$style: int Widget_Support_CoordinatorLayout
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.ChatSocketConnection$State mapState(zendesk.chat.WebSocket$WebSocketListener$WebSocketState)
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.SettingsProvider settingsProvider()
zendesk.chat.ChatVisitorClient: com.google.gson.Gson gson
zendesk.chat.ChatEngine$Status: zendesk.chat.ChatEngine$Status[] values()
zendesk.chat.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
zendesk.chat.ChatModel$1: void update(java.lang.Object)
zendesk.chat.BuildConfig: boolean DEBUG
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
zendesk.chat.PushData: java.lang.String getMessage()
zendesk.chat.R$string: int zch_chat_transcript_prompt
zendesk.chat.SendCallbackManager$Transmission: SendCallbackManager$Transmission(zendesk.chat.PathValue,java.util.concurrent.ScheduledFuture,com.zendesk.service.ZendeskCallback)
zendesk.chat.DataNode$ObservableBranch: com.google.gson.Gson gson
zendesk.chat.ZendeskConnectionProvider: zendesk.chat.ConnectionStatus getConnectionStatus()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
zendesk.chat.R$styleable: int DrawerArrowToggle_thickness
com.google.android.material.card.MaterialCardView
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
zendesk.chat.DnModels$Department: int hashCode()
zendesk.chat.VisitorInfo: java.lang.String getEmail()
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider engineStatusObservableProvider
zendesk.chat.ChatObserverFactory$2: void update(zendesk.chat.ChatSettings)
com.zendesk.service.ErrorResponseAdapter: java.lang.String getReason()
zendesk.chat.R$styleable: int GradientColor_android_startColor
zendesk.chat.ZendeskConnectionProvider$1: void update(zendesk.chat.ConnectionStatus)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
zendesk.chat.AndroidModule_NetworkConnectivityFactory: zendesk.chat.NetworkConnectivity get()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
zendesk.chat.PathValueSender$Request
zendesk.chat.AndroidModule_NetworkConnectivityFactory
zendesk.chat.ChatProvidersStorage_Factory: javax.inject.Provider chatConfigProvider
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$style: int Widget_AppCompat_ActionBar_TabText
zendesk.chat.R$attr: int textAppearanceListItemSecondary
zendesk.chat.R$style: int Widget_AppCompat_RatingBar
zendesk.chat.ChatEngineModule_EngineStartedCompletionFactory
zendesk.chat.R$color: int abc_background_cache_hint_selector_material_light
zendesk.chat.ChatFormDriver: java.util.concurrent.atomic.AtomicBoolean isStarted
zendesk.chat.R$style: int Theme_AppCompat_Light_DialogWhenLarge
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
zendesk.chat.ChatLog: java.lang.String getId()
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
androidx.appcompat.widget.AppCompatCheckBox
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider timerFactoryProvider
zendesk.chat.DefaultChatSession: void update(java.lang.Object)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
zendesk.chat.R$attr: int navigationMode
zendesk.chat.R$styleable: int MenuGroup_android_enabled
zendesk.chat.ChatStatusCheckStage: zendesk.chat.ChatStatusCheckStage$ChatEndedCompletion chatEndedCompletion
zendesk.chat.DefaultChatSession$1$1: void onSuccess(java.lang.Void)
zendesk.chat.R$styleable: int AnimatedStateListDrawableItem_android_id
zendesk.chat.ObservableData$1
zendesk.messaging.Banner$Duration: zendesk.messaging.Banner$Duration valueOf(java.lang.String)
zendesk.chat.ChatSessionManager$1: void update(zendesk.chat.JwtAuthenticator)
com.google.android.material.snackbar.SnackbarContentLayout
zendesk.chat.ChatProvidersStorage_Factory: zendesk.chat.ChatProvidersStorage newInstance(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
zendesk.chat.ObservationToken: void cancel()
zendesk.chat.ChatProvidersModule$1: boolean shouldNotifyObservers(java.lang.Object,java.lang.Object)
zendesk.chat.DefaultChatSession$21: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.DnModels$Department: zendesk.chat.DnModels$Department$Status status
zendesk.chat.AuthenticationResponse: java.lang.String idToken
zendesk.chat.PushNotificationsProvider: void registerPushToken(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatProvidersStorage: void clearIdentityStorage()
zendesk.chat.ChatModel_Factory: javax.inject.Provider chatProcessorFactoryProvider
zendesk.chat.PathValueSender
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzif zzd
zendesk.chat.R$styleable: int ActionMenuItemView_android_minWidth
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
zendesk.chat.DnUpdateModels$ChatRatingValue: DnUpdateModels$ChatRatingValue(zendesk.chat.ChatRating)
zendesk.messaging.ui.InputBox
zendesk.chat.R$style: int Widget_AppCompat_AutoCompleteTextView
zendesk.chat.R$styleable: int AppCompatTheme_colorControlHighlight
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue createRequestChat()
zendesk.chat.R$style: int Base_Widget_AppCompat_Light_ActionBar
zendesk.chat.DnUpdateModels$Tags$RemoveTags: java.util.List tags
okio.ForwardingSink: okio.Timeout timeout()
androidx.recyclerview.widget.LinearLayoutManager
zendesk.chat.Connection: void nukeSocket()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzac)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
zendesk.chat.VisitorActiveSignal$1
zendesk.chat.IdentityManager$IdentityResetCompletion: zendesk.chat.CompletionCallback completionCallback
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
zendesk.chat.R$id: int action_context_bar
zendesk.chat.R$color: int material_grey_850
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
zendesk.messaging.ConnectionState: zendesk.messaging.ConnectionState[] values()
zendesk.chat.R$styleable: int AppCompatTheme_actionBarTabTextStyle
zendesk.chat.R$drawable: int abc_edit_text_material
android.support.v4.media.MediaBrowserCompat$ItemReceiver
zendesk.chat.R$attr: int autoSizePresetSizes
zendesk.chat.R$attr: int statusBarBackground
zendesk.chat.ChatObserverFactory_Factory
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzbv$zza zzi
com.squareup.picasso.NetworkPolicy: com.squareup.picasso.NetworkPolicy valueOf(java.lang.String)
zendesk.chat.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
zendesk.chat.ChatModel: zendesk.chat.CacheManager access$300(zendesk.chat.ChatModel)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory: javax.inject.Provider chatConfigProvider
zendesk.chat.ChatProvidersModule_ObservableChatStateFactory: zendesk.chat.ChatProvidersModule_ObservableChatStateFactory INSTANCE
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.material.card.MaterialCardView: int getStrokeColor()
zendesk.chat.ZendeskChatProvider_Factory: javax.inject.Provider observableAuthenticatorProvider
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
zendesk.chat.DefaultChatSession$13: com.zendesk.service.ZendeskCallback val$callback
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
zendesk.chat.Chat: zendesk.chat.Chat valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzw,int)
zendesk.messaging.ui.ArticlesResponseView
zendesk.chat.AndroidModule_BaseStorageFactory: zendesk.chat.BaseStorage get()
zendesk.chat.R$string: int zch_chat_ended
zendesk.chat.DefaultChatSession: void sendChatRating(zendesk.chat.ChatRating,com.zendesk.service.ZendeskCallback)
zendesk.chat.ChatState: int hashCode()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
zendesk.chat.R$attr: int paddingBottomNoButtons
zendesk.belvedere.FixedWidthImageView: FixedWidthImageView(android.content.Context,android.util.AttributeSet)
zendesk.chat.EmailInputValidator_Factory: zendesk.chat.EmailInputValidator get()
zendesk.chat.BaseModule_RetrofitFactory: retrofit2.Retrofit retrofit(java.lang.Object,com.google.gson.Gson,okhttp3.OkHttpClient)
zendesk.chat.ZendeskConnectionProvider: void connect()
zendesk.chat.R$attr: int firstBaselineToTopHeight
zendesk.chat.R$styleable: int SwitchCompat_trackTintMode
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
zendesk.chat.Connection$3: Connection$3(zendesk.chat.Connection)
zendesk.chat.Clock$1: long nowNanos()
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
zendesk.chat.R$drawable: int zch_ic_trigger_message_avatar_16
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
okhttp3.RequestBody: RequestBody()
com.google.android.gms.internal.measurement.zzbv$zzb
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
zendesk.chat.R$styleable: int AppCompatTheme_editTextColor
zendesk.chat.R$attr: int ttcIndex
zendesk.chat.PersistentCookieJar$Data: PersistentCookieJar$Data(java.util.List,zendesk.chat.PersistentCookieJar$1)
zendesk.chat.R$drawable: int abc_textfield_default_mtrl_alpha
zendesk.chat.ChatEngine_Factory: java.lang.Object get()
zendesk.chat.ChatVisitorClient$Builder: java.lang.String baseAuthUrl
zendesk.chat.ChatModel$2: zendesk.chat.ChatModel this$0
zendesk.chat.R$string: int status_bar_notification_info_overflow
zendesk.chat.ChatFormDriver: zendesk.chat.EmailInputValidator emailInputValidator
io.flutter.view.FlutterView: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.ChatProvidersComponent$Builder builder()
zendesk.chat.JwtLoginDetailsProvider$2: void onSuccess(java.lang.Object)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
zendesk.chat.ChatModel$3: zendesk.chat.ChatModel this$0
zendesk.chat.MainThreadPoster: MainThreadPoster(android.os.Handler)
zendesk.chat.UserAgentAndClientHeadersInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
zendesk.chat.ChatEngine: java.lang.String getId()
zendesk.chat.DnModels$Profile: java.lang.String departmentId
zendesk.chat.ChatProvidersModule_ObservableAccountFactory: zendesk.chat.ChatProvidersModule_ObservableAccountFactory INSTANCE
zendesk.chat.ChatObserverFactory_Factory: ChatObserverFactory_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.R$styleable: int LinearLayoutCompat_dividerPadding
zendesk.chat.ChatModel$2: zendesk.chat.ChatContext val$chatContext
zendesk.chat.ChatStringProvider: java.lang.String emailFieldHint()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
zendesk.chat.ChatSocketConnection
zendesk.chat.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$attr: int backgroundTintMode
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
kotlinx.coroutines.android.AndroidExceptionPreHandler: kotlin.Lazy preHandler$delegate
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
zendesk.chat.ChatStringProvider: java.lang.String preChatFormWelcomeMessage()
zendesk.chat.R$color: int bright_foreground_disabled_material_light
zendesk.chat.ChatPhase: zendesk.chat.ChatPhase[] $VALUES
zendesk.chat.ChatLog: zendesk.chat.ChatParticipant chatParticipant
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String toString()
com.google.gson.reflect.TypeToken: TypeToken(java.lang.reflect.Type)
zendesk.chat.R$styleable: int MenuItem_contentDescription
zendesk.chat.FrameMapper: java.util.List stringsToMessageAcks(java.util.List)
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
zendesk.chat.ChatProvidersStorage: java.lang.String V1_MACHINE_ID_KEY
zendesk.chat.ChatSession: void observeVisitorInfo(zendesk.chat.ObservationScope,zendesk.chat.Observer)
com.google.android.gms.common.util.DynamiteApi
zendesk.messaging.ObservableEngine: java.util.Set updateObservers
zendesk.chat.DataNode$ObservableBranch: void updateBranch(com.google.gson.JsonObject)
zendesk.chat.PreChatFormFieldStatus: zendesk.chat.PreChatFormFieldStatus[] values()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
zendesk.chat.Tls12SocketFactory: java.lang.String[] getDefaultCipherSuites()
zendesk.chat.R$styleable: int SearchView_searchIcon
zendesk.chat.CacheManager_Factory: javax.inject.Provider observableVisitorInfoProvider
zendesk.chat.VisitorActiveSignal: void update(java.lang.Object)
zendesk.chat.VisitorActiveSignal: java.util.concurrent.ScheduledFuture scheduledFuture
zendesk.chat.JwtLoginDetailsProvider: boolean requestInProgress
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.google.android.material.chip.Chip: void setChecked(boolean)
zendesk.chat.DnConverterUtils: zendesk.chat.ChatSessionStatus chatStatus(zendesk.chat.DnModels$Channel)
zendesk.chat.ChatConnectionSupervisor: java.lang.String LOG_TAG
zendesk.chat.ZendeskSettingsProvider: java.util.concurrent.atomic.AtomicReference observationScopeReference
zendesk.chat.R$id: int search_plate
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
zendesk.chat.DeliveryStatusMonitor: void update(java.lang.Object)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
zendesk.chat.DefaultChatSession$12
zendesk.chat.SendCallbackManager: void onMessageAckReceived(zendesk.chat.MessageAck)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
zendesk.chat.R$dimen: int notification_small_icon_background_padding
zendesk.chat.ChatObserverFactory: zendesk.chat.Observer connectionStatusObserver(zendesk.chat.ChatContext)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
zendesk.chat.ZendeskProfileProvider: void clearVisitorNotes(com.zendesk.service.ZendeskCallback)
zendesk.chat.DnUpdateModels: java.util.List PATH_PAGE_PATH
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$style: int Base_Widget_AppCompat_ActionBar
com.google.android.gms.internal.measurement.zzcd$zzd: com.google.android.gms.internal.measurement.zzcd$zzd zzf
zendesk.chat.R$styleable: int AppCompatSeekBar_tickMarkTintMode
zendesk.chat.R$style: int Base_AlertDialog_AppCompat_Light
zendesk.chat.R$dimen: int abc_text_size_small_material
com.zendesk.logger.Logger$Priority: com.zendesk.logger.Logger$Priority valueOf(java.lang.String)
zendesk.chat.DnModels: java.util.List chatLogPath(java.lang.String)
zendesk.chat.PushData: java.lang.String getAuthor()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
zendesk.chat.R$styleable: int LinearLayoutCompat_android_weightSum
zendesk.chat.MainThreadPoster$3
zendesk.chat.SettingsProvider
zendesk.belvedere.SelectableView: SelectableView(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$style: int Base_ThemeOverlay_AppCompat_Dialog
androidx.appcompat.widget.SearchView: int getInputType()
zendesk.chat.Connection: java.util.Set wsStateObservers
zendesk.chat.FileUploader$1: FileUploader$1(zendesk.chat.FileUploader,zendesk.chat.CompletionCallback)
zendesk.chat.DaggerChatSdkComponent: DaggerChatSdkComponent(zendesk.chat.ChatProvidersComponent,zendesk.chat.DaggerChatSdkComponent$1)
zendesk.chat.DnConverterUtils: zendesk.chat.ChatSettings chatSettings(zendesk.chat.DnModels$LiveChat)
zendesk.chat.DnModels$Connection: zendesk.chat.DnModels$Connection$Status getStatus()
zendesk.chat.ZendeskAccountProvider_Factory: javax.inject.Provider chatServiceProvider
zendesk.chat.DefaultChatSession$21: void onSuccess(zendesk.chat.PathValue)
zendesk.chat.R$id: int expanded_menu
zendesk.chat.ChatModel_Factory: javax.inject.Provider chatLogBlacklisterProvider
zendesk.chat.R$string: int abc_search_hint
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
zendesk.chat.R$color: int tooltip_background_dark
zendesk.chat.R$attr: int searchIcon
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.measurement.zzcd$zzc: com.google.android.gms.internal.measurement.zzcd$zzc zzi
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider chatConnectionSupervisorProvider
zendesk.chat.R$attr: int tooltipForegroundColor
zendesk.chat.ChatSessionManager: zendesk.chat.ChatVisitorClient chatVisitorClient
zendesk.chat.ChatAgentAvailabilityStage$AgentAvailableContinuation
zendesk.chat.ChatForm: java.lang.String messageAcknowledgementMessage
zendesk.chat.ChatLog$Rating: zendesk.chat.ChatRating getNewChatRating()
zendesk.chat.ChatLogMapper: java.util.List convertChatComment(zendesk.chat.ChatLog$Comment,zendesk.messaging.AgentDetails)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
zendesk.chat.PushData$Type: zendesk.chat.PushData$Type[] $VALUES
com.google.android.gms.internal.measurement.zzca$zzc
zendesk.belvedere.KeyboardHelper: void setKeyboardHeightListener(zendesk.belvedere.KeyboardHelper$SizeListener)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.Form: void update(java.lang.String)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
zendesk.chat.Attachment: zendesk.chat.Attachment$Metadata getMetadata()
zendesk.chat.Form: void skipCurrentField()
com.google.android.gms.internal.measurement.zzcd$zzg: int zzq
zendesk.chat.DefaultChatSocketConnection: void pingReceived(zendesk.chat.Frames$Base)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.R$styleable: int AppCompatTheme_colorAccent
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
zendesk.chat.ChatEngineModule$3
zendesk.chat.ChatObserverFactory$1
zendesk.belvedere.SelectableView: void setSelected(boolean)
zendesk.chat.R$drawable: int abc_ic_star_black_36dp
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
zendesk.chat.OfflineForm
zendesk.chat.ChatParticipant: zendesk.chat.ChatParticipant TRIGGER
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
zendesk.chat.EmailInputValidator: zendesk.chat.ChatStringProvider chatStringProvider
zendesk.chat.VisitorActiveSignal: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
zendesk.messaging.ui.AgentImageCellView
com.zendesk.service.ErrorResponseAdapter: int getStatus()
zendesk.chat.PreChatFormFieldStatus: zendesk.chat.PreChatFormFieldStatus[] $VALUES
zendesk.chat.ChatEngine_Factory: javax.inject.Provider chatConversationOngoingCheckerProvider
zendesk.chat.R$styleable: int Spinner_popupTheme
zendesk.chat.Agent: boolean isTyping()
zendesk.chat.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
zendesk.chat.IdentityManager$IdentityResetCompletion$2: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.R$styleable: int ActionBar_backgroundSplit
io.flutter.plugin.platform.SingleViewPresentation: int viewId
zendesk.chat.R$attr: int windowFixedWidthMajor
zendesk.chat.R$id: int split_action_bar
zendesk.chat.ChatConfiguration: zendesk.chat.FormField$Status mapStatus(zendesk.chat.PreChatFormFieldStatus)
zendesk.chat.R$styleable: int[] CoordinatorLayout
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
zendesk.chat.ChatModel$1: zendesk.chat.ChatModel this$0
zendesk.chat.Form: java.util.List skippedFields
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.appcompat.view.menu.ActionMenuItemView
zendesk.chat.DnModels$ChatLog$Type: zendesk.chat.DnModels$ChatLog$Type CHAT_COMMENT
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
zendesk.chat.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
zendesk.chat.DnModels$Channel: java.lang.Integer queuePosition
zendesk.chat.ChatSessionManager$1: ChatSessionManager$1(zendesk.chat.ChatSessionManager)
zendesk.chat.ChatSessionStatus: zendesk.chat.ChatSessionStatus ENDED
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzca$zzb zzm
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
zendesk.chat.ZendeskProfileProvider: void setVisitorNote(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.google.android.material.transformation.TransformationChildCard
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
zendesk.chat.ProfileProvider: void setVisitorNote(java.lang.String,com.zendesk.service.ZendeskCallback)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
zendesk.chat.DnUpdateModels$VisitorActive
zendesk.chat.ChatFormDriver$2: zendesk.chat.ChatFormDriver this$0
com.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
zendesk.chat.R$attr: int switchStyle
zendesk.chat.AuthenticationStorage$InMemory: void saveAuthenticationWrapper(zendesk.chat.AuthenticationWrapper)
zendesk.chat.ChatAgentAvailabilityStage: zendesk.chat.ChatAgentAvailabilityStage$AgentAvailableContinuation agentAvailableContinuation
androidx.appcompat.widget.ButtonBarLayout
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type)
zendesk.chat.R$color: int abc_tint_edittext
zendesk.chat.R$string: int zch_pre_chat_skip_button
zendesk.chat.DnModels$ChatLog: long timestamp
zendesk.chat.ZendeskAccountProvider: java.lang.String accountKey
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String getUserAgent()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.google.android.gms.internal.measurement.zzck$zzb: java.lang.String zzj
zendesk.chat.ChatConversationOngoingChecker_Factory: javax.inject.Provider chatProvider
zendesk.chat.ZendeskChatProvider: void sendChatComment(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.MainThreadPoster$3: MainThreadPoster$3(zendesk.chat.MainThreadPoster,zendesk.chat.CompletionCallback)
zendesk.chat.ChatEngine_Factory: javax.inject.Provider chatBotMessagingItemsProvider
zendesk.chat.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
zendesk.chat.AnonymousLoginDetailsProvider$1: zendesk.chat.AnonymousLoginDetailsProvider this$0
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
zendesk.chat.ChatModel: zendesk.chat.ObservableData access$000(zendesk.chat.ChatModel)
zendesk.chat.R$styleable: int Toolbar_contentInsetLeft
zendesk.chat.DefaultChatSession$19: com.zendesk.service.ZendeskCallback val$callback
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
com.google.firebase.installations.FirebaseInstallationsRegistrar
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String source
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
zendesk.chat.ChatFormStage: zendesk.messaging.components.DateProvider dateProvider
com.google.android.gms.internal.measurement.zzcd$zzd: int zzc
zendesk.chat.DataNode: DataNode(com.google.gson.Gson)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
zendesk.chat.Frames$Base: Frames$Base(long,double,long,zendesk.chat.Frames$Command)
zendesk.chat.Connection$5
zendesk.chat.R$styleable: int AppCompatTheme_buttonBarButtonStyle
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
zendesk.chat.ChatFormStage: zendesk.chat.ChatFormStage$PreChatFormCompletion preChatFormCompletion
zendesk.chat.R$style: int TextAppearance_Compat_Notification_Time
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
zendesk.chat.ObservableData: ObservableData()
zendesk.chat.R$string: int abc_menu_delete_shortcut_label
zendesk.chat.R$id: int search_bar
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider cacheManagerProvider
androidx.appcompat.widget.AppCompatImageView
com.google.android.material.chip.Chip: void setBackgroundColor(int)
zendesk.chat.PathUpdate$1$1: zendesk.chat.PathUpdate$1 this$0
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
zendesk.chat.DefaultChatSession$14
zendesk.chat.DnUpdateModels$ChatRatingValue
zendesk.chat.R$styleable: int FontFamily_fontProviderFetchTimeout
com.google.gson.reflect.TypeToken: java.lang.String toString()
zendesk.chat.R$drawable: int abc_ratingbar_small_material
zendesk.chat.DnModels: java.util.List PATH_LIVE_CHAT
zendesk.chat.ChatEngineModule_ProvideStateListenerFactory: zendesk.chat.ChatEngineModule_ProvideStateListenerFactory create(javax.inject.Provider)
zendesk.chat.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
zendesk.chat.R$styleable: int PopupWindowBackgroundState_state_above_anchor
zendesk.chat.R$drawable: int abc_list_selector_background_transition_holo_light
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
zendesk.chat.NetworkConnectivityProvider: java.lang.String LOG_TAG
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
zendesk.chat.ChatModel$2: void onSuccess(java.lang.Object)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.google.android.gms.internal.measurement.zzcd$zzj: int zzd
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
zendesk.chat.R$string: int search_menu_title
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider observableJwtAuthenticatorProvider
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_profileProvider
zendesk.chat.R$dimen: int abc_text_size_medium_material
zendesk.chat.ChatFormStage: java.lang.String OFFLINE_MESSAGE_ID
zendesk.chat.ChatConversationOngoingChecker_Factory: zendesk.chat.ChatConversationOngoingChecker get()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
zendesk.chat.AccountStatus: AccountStatus(java.lang.String,int)
zendesk.chat.ChatEngine_Factory: javax.inject.Provider stateActionListenerProvider
zendesk.chat.ChatService: retrofit2.Call getChatInfo(java.lang.String,java.lang.String)
zendesk.chat.DnModels$ChatLog: java.lang.String newComment
zendesk.chat.Frames$Command: java.lang.String command
zendesk.chat.ChatStatusCheckStage
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.R$id: int action_menu_divider
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
zendesk.chat.DnModels$Account$Status: zendesk.chat.DnModels$Account$Status valueOf(java.lang.String)
zendesk.chat.R$styleable: int AnimatedStateListDrawableTransition_android_toId
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
zendesk.chat.ChatEngine$2: ChatEngine$2(zendesk.chat.ChatEngine)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
zendesk.chat.DnModels$ChatLog$Attachment$Metadata: int width
com.google.android.gms.internal.measurement.zzbv$zzf: int zzd
zendesk.chat.UserAgentAndClientHeadersInterceptor: java.lang.String VARIANT
zendesk.chat.R$style: R$style()
zendesk.chat.ChatBotMessagingItems_Factory: java.lang.Object get()
zendesk.chat.R$dimen: int abc_dialog_padding_top_material
zendesk.chat.R$styleable: int AppCompatTextHelper_android_drawableRight
zendesk.chat.Connection: zendesk.chat.LoginDetailsProvider loginDetailsProvider
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String getTitle()
zendesk.chat.AndroidModule_BaseStorageFactory: java.lang.Object get()
zendesk.chat.PathValueSender$Request: PathValueSender$Request(zendesk.chat.PathValue,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$styleable: int AppCompatSeekBar_tickMarkTint
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzju zzj
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.ChatSessionManager chatSessionManager()
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzif zzc
zendesk.chat.R$drawable: int abc_item_background_holo_dark
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
zendesk.chat.BaseModule_GetOkHttpClientFactory: javax.inject.Provider scheduledExecutorServiceProvider
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider userAgentAndClientHeadersInterceptorProvider
zendesk.chat.R$dimen: int abc_list_item_padding_horizontal_material
zendesk.chat.R$styleable: int AlertDialog_buttonIconDimen
zendesk.chat.DeliveryStatus: zendesk.chat.DeliveryStatus[] $VALUES
zendesk.chat.R$drawable: int abc_list_selector_disabled_holo_dark
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
zendesk.chat.MessageAck$Status: zendesk.chat.MessageAck$Status valueOf(java.lang.String)
zendesk.chat.R$color: int switch_thumb_normal_material_light
com.google.android.gms.measurement.AppMeasurementReceiver
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
zendesk.chat.DataStore: zendesk.chat.ObservableData getObservableProfile()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
zendesk.chat.Tls12SocketFactory: java.lang.String[] TLS_V12_ONLY
zendesk.chat.AndroidModule_BaseStorageFactory: javax.inject.Provider contextProvider
zendesk.chat.CacheManager: zendesk.chat.ObservableData observableChatState
zendesk.chat.ChatProvidersStorage: java.lang.String LOG_TAG
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.LoginDetails getLoginDetails()
zendesk.chat.ZendeskPushNotificationsProvider_Factory: javax.inject.Provider gsonProvider
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
zendesk.chat.DnUpdateModels$VisitorPathUpdate: java.lang.String title
zendesk.chat.BaseModule: retrofit2.Retrofit retrofit(zendesk.chat.ChatConfig,com.google.gson.Gson,okhttp3.OkHttpClient)
zendesk.chat.R$style: int Theme_AppCompat_Light
com.google.android.gms.internal.measurement.zzcd$zze: com.google.android.gms.internal.measurement.zzcd$zze zzj
zendesk.chat.Tls12SocketFactory: javax.net.ssl.SSLSocketFactory delegate
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
androidx.cardview.widget.CardView: float getRadius()
zendesk.chat.ChatLog$Type: zendesk.chat.ChatLog$Type MEMBER_LEAVE
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
zendesk.chat.R$styleable: int SearchView_android_imeOptions
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider compositeActionListenerProvider
zendesk.chat.FrameMapper: int REMOTE_SKEWED_TIME_INDEX
zendesk.chat.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
zendesk.chat.IdentityManager$IdentityResetCompletion
zendesk.chat.ZendeskAccountProvider_Factory: zendesk.chat.ZendeskAccountProvider get()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
zendesk.chat.R$drawable: int abc_list_selector_disabled_holo_light
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
zendesk.chat.Chat: zendesk.chat.Providers providers()
zendesk.chat.R$styleable: int AppCompatTheme_actionBarTabStyle
zendesk.chat.R$color: int material_blue_grey_950
zendesk.chat.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.google.gson.reflect.TypeToken: int hashCode
zendesk.chat.DefaultChatSession$12: zendesk.chat.DefaultChatSession this$0
zendesk.chat.ChatEngineModule_ProvideBotMessageIdentifierFactory: ChatEngineModule_ProvideBotMessageIdentifierFactory()
zendesk.chat.ChatLog$1: int compare(java.lang.Object,java.lang.Object)
zendesk.chat.Frames$Command: zendesk.chat.Frames$Command[] $VALUES
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Caption
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
zendesk.chat.R$styleable: int ActionBar_homeLayout
zendesk.chat.R$attr: int layout_insetEdge
zendesk.chat.PathValueSender: void enqueue(zendesk.chat.PathValue,com.zendesk.service.ZendeskCallback)
zendesk.chat.JwtLoginDetailsProvider: zendesk.chat.Clock clock
zendesk.chat.ChatSocketClient: okhttp3.OkHttpClient getOkHttpClient()
zendesk.chat.ChatProvidersModule: zendesk.chat.ObservableData observableChatSettings()
zendesk.chat.R$styleable: int AppCompatTextHelper_android_drawableEnd
zendesk.chat.DnModels$Channel: zendesk.chat.ChatRating rating
zendesk.chat.ZendeskSettingsProvider$1: void update(zendesk.chat.ChatSettings)
zendesk.chat.ChatModel$2: java.lang.String val$initialMessage
com.google.android.material.chip.Chip: float getChipEndPadding()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
zendesk.chat.Connection$2: Connection$2(zendesk.chat.Connection)
com.google.android.gms.internal.measurement.zzcd$zzh
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
zendesk.chat.ZendeskPushNotificationsProvider: void unregisterPushToken()
zendesk.chat.PathValueSender: void update(zendesk.chat.ConnectionStatus)
zendesk.chat.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
zendesk.chat.EmailInputValidator_Factory: EmailInputValidator_Factory(javax.inject.Provider)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
zendesk.messaging.ObservableEngine: boolean isConversationOngoing()
zendesk.chat.DepartmentStatus
zendesk.chat.RequestSender: RequestSender(zendesk.chat.DataNode,zendesk.chat.PathValueSender,zendesk.chat.FileUploader,zendesk.chat.ConnectionStateMachine)
zendesk.chat.AndroidModule: java.lang.String STORAGE_NAME_PREFERENCES
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
zendesk.chat.ChatSession: void setVisitorNote(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$style: int Platform_ThemeOverlay_AppCompat_Dark
zendesk.chat.BaseModule$1: java.util.concurrent.atomic.AtomicInteger atomicInteger
zendesk.chat.R$styleable: int[] Spinner
zendesk.chat.OkHttpWebSocket$1: zendesk.chat.OkHttpWebSocket this$0
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
zendesk.chat.Connection$4: zendesk.chat.Connection this$0
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.ChatEngineModule_ProvideIdProviderFactory: java.lang.Object get()
zendesk.chat.OfflineForm: zendesk.chat.VisitorInfo visitorInfo
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
zendesk.chat.AuthenticationService
zendesk.chat.ChatObserverFactory$1: zendesk.chat.ChatObserverFactory this$0
zendesk.chat.ChatSocketConnection$State: zendesk.chat.ChatSocketConnection$State CONNECTED
zendesk.chat.ChatObserverFactory: zendesk.chat.Observer chatStateObserver(zendesk.chat.ChatContext,javax.inject.Provider)
zendesk.chat.MessageAck$Status: zendesk.chat.MessageAck$Status[] values()
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionBar_Solid
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
zendesk.chat.ZendeskChatProvider_Factory: javax.inject.Provider chatProvidersStorageProvider
zendesk.chat.LoginDetailsFactory: zendesk.chat.LoginDetails buildAnonymousLoginDetails(java.lang.String)
zendesk.chat.DnModels$ChatLog$Type: zendesk.chat.DnModels$ChatLog$Type[] $VALUES
zendesk.chat.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
zendesk.chat.R$id: int default_activity_button
zendesk.chat.R$styleable: int Toolbar_titleTextAppearance
zendesk.chat.R$drawable: int abc_control_background_material
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
zendesk.chat.ObservableData: void addObserver(zendesk.chat.Observer)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
zendesk.chat.DnModels$Department$Status: zendesk.chat.DnModels$Department$Status ONLINE
zendesk.chat.R$drawable: int abc_ic_go_search_api_material
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
zendesk.chat.R$styleable: int DrawerArrowToggle_color
zendesk.belvedere.MediaResult: android.os.Parcelable$Creator CREATOR
zendesk.chat.R$styleable: int[] MenuGroup
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
zendesk.chat.R$attr: int listDividerAlertDialog
zendesk.chat.ChatProvidersModule: zendesk.chat.ObservableData observableVisitorInfo()
zendesk.chat.R$attr: int alertDialogButtonGroupStyle
zendesk.chat.SendCallbackManager$Transmission: zendesk.chat.PathValue pathValue
zendesk.chat.R$dimen: int abc_action_bar_elevation_material
zendesk.chat.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
zendesk.chat.ChatPhase
zendesk.chat.DataNode: java.lang.String getString(java.util.List)
zendesk.chat.R$id: int scrollView
com.google.android.material.appbar.AppBarLayout
zendesk.chat.SendMessageRequest: zendesk.chat.CompletionCallback externalCompletion
zendesk.chat.ChatEngine: zendesk.chat.ChatEngine$EngineStartedCompletion engineStartedCompletion
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
zendesk.chat.DaggerChatSdkComponent: zendesk.chat.ChatEngine chat()
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
zendesk.chat.MainThreadPoster$4$1: long val$contentLength
zendesk.chat.SendCallbackManager: java.lang.String LOG_TAG
zendesk.chat.ChatEngine: zendesk.messaging.MenuItem MENU_ITEM_CHAT_TRANSCRIPT
zendesk.chat.ChatFormStage: java.lang.String LOG_TAG
zendesk.chat.MachineIdStorage: void clearMachineId()
com.google.android.gms.internal.measurement.zzcd$zzg: int zzai
zendesk.chat.ConnectionStateMachine: void onDnStatusChange(zendesk.chat.DnModels$Connection$Status)
zendesk.chat.TextField: zendesk.messaging.AgentDetails agentDetails
zendesk.chat.R$styleable: int AppCompatTheme_listMenuViewStyle
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
zendesk.chat.ZendeskChatProvider: zendesk.chat.ChatSessionManager access$000(zendesk.chat.ZendeskChatProvider)
zendesk.chat.Frames$Message: java.util.List messageAck
com.zendesk.service.ErrorResponseAdapter: ErrorResponseAdapter()
zendesk.chat.R$styleable: int[] AppCompatTextHelper
zendesk.chat.R$dimen: int abc_text_size_title_material
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.google.android.gms.internal.measurement.zzcd$zzb: int zzd
zendesk.chat.ChatState: java.lang.String getChatComment()
zendesk.chat.R$styleable: int ActionBar_indeterminateProgressStyle
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzju zzh
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.Frames$Base: long remoteSentTime
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
zendesk.chat.DnModels$Connection: boolean serverReady
zendesk.chat.R$styleable: int AppCompatTheme_listPopupWindowStyle
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
zendesk.chat.ChatProvidersStorage_Factory: ChatProvidersStorage_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
zendesk.chat.ChatSocketClient: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()
com.google.android.gms.internal.measurement.zzck$zzb: long zzg
zendesk.chat.DnConverterUtils: zendesk.chat.VisitorInfo visitorInfo(zendesk.chat.DnModels$LiveChat)
zendesk.chat.Connection: zendesk.chat.ChatSocketClient access$300(zendesk.chat.Connection)
com.google.gson.reflect.TypeToken: int hashCode()
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
zendesk.chat.MainThreadPoster: zendesk.chat.FileUploadListener wrapFileUploadListener(zendesk.chat.FileUploadListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.google.android.gms.internal.measurement.zzca$zzc: java.lang.String zze
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
zendesk.chat.DnUpdateModels: java.util.List PATH_TAGS
zendesk.chat.ChatEngineModule_ProvideUpdateActionListenerFactory
zendesk.chat.DefaultChatSession$17: long val$timestamp
zendesk.chat.ChatSessionStatus: zendesk.chat.ChatSessionStatus[] values()
zendesk.chat.FormField: boolean isComplete()
zendesk.chat.ChatSocketClient: java.util.concurrent.Executor getExecutor()
zendesk.chat.ChatStatusCheckStage$1: zendesk.chat.ChatStatusCheckStage this$0
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.LoginDetails loginDetails
zendesk.chat.DeliveryStatus$1: DeliveryStatus$1(zendesk.chat.DeliveryStatus)
zendesk.chat.DefaultChatSession: java.lang.String LOG_TAG
zendesk.chat.SendCallbackManager$Transmission: java.util.concurrent.ScheduledFuture access$200(zendesk.chat.SendCallbackManager$Transmission)
zendesk.chat.R$styleable: int AppCompatTheme_actionBarStyle
zendesk.chat.Agent: Agent(java.lang.String,java.lang.String,java.lang.String,boolean)
zendesk.messaging.ui.SystemMessageView
zendesk.chat.ChatLogMapper: boolean isImageAttachment(zendesk.chat.ChatLog$AttachmentMessage)
zendesk.chat.PayloadChatTimeout: long getTimeout()
zendesk.chat.R$style: int Widget_AppCompat_Light_ActionBar
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
zendesk.chat.DnModels$ChatLog: zendesk.chat.DnModels$ChatLog$Type type
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
zendesk.chat.R$style: int Base_Widget_AppCompat_Button_Colored
zendesk.chat.ZendeskProfileProvider_Factory: ZendeskProfileProvider_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.R$color: int material_grey_900
zendesk.chat.R$dimen: int abc_action_bar_content_inset_material
zendesk.chat.ChatConnectionSupervisor: void activate()
com.google.android.gms.internal.measurement.zzcd$zzk: java.lang.String zzf
kotlinx.coroutines.InvokeOnCancelling: int _invoked
zendesk.chat.AccountStatus
zendesk.chat.R$color: int primary_text_default_material_light
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
zendesk.chat.VisitorActiveSignal$VisitorActiveRunnable: zendesk.chat.Connection connection
zendesk.chat.IdentityManager: zendesk.chat.ChatProvidersStorage chatProvidersStorage
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
zendesk.chat.FrameFactory: void updateClocks(long)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
zendesk.chat.R$styleable: int View_paddingEnd
zendesk.chat.Department: zendesk.chat.DepartmentStatus getStatus()
zendesk.chat.DefaultChatSession$20: java.lang.String val$message
zendesk.chat.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
zendesk.chat.ChatModel_Factory: javax.inject.Provider settingsProvider
zendesk.chat.PathValueSender: void failAll(com.zendesk.service.ErrorResponse)
zendesk.chat.NetworkConnectivityProvider$3
zendesk.chat.ChatSocketClient$Builder: ChatSocketClient$Builder(zendesk.chat.MediatorEndpoint)
zendesk.chat.DnModels$Agent: int hashCode()
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
zendesk.chat.R$styleable: int Toolbar_titleMarginEnd
com.google.android.gms.internal.measurement.zzca$zza: boolean zze
zendesk.chat.R$color: int dim_foreground_disabled_material_dark
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
zendesk.commonui.AlmostRealProgressBar: AlmostRealProgressBar(android.content.Context,android.util.AttributeSet)
zendesk.chat.BaseModule_RetrofitFactory: javax.inject.Provider okHttpClientProvider
com.google.android.material.chip.Chip: float getTextEndPadding()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_chatProvider
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
zendesk.chat.ZendeskAccountProvider_Factory: ZendeskAccountProvider_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.R$styleable: int MenuItem_android_icon
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
zendesk.chat.DefaultChatSession: void processQueue()
zendesk.chat.ChatBotMessagingItems
zendesk.chat.ChatConnectionSupervisor_Factory: zendesk.chat.ChatConnectionSupervisor get()
com.google.android.gms.internal.measurement.zzck$zzb: java.lang.String zze
zendesk.chat.Chat: Chat(java.lang.String,int)
zendesk.chat.DnModels$ChatLog$Attachment$Metadata: DnModels$ChatLog$Attachment$Metadata(int,int)
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider contextProvider
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
zendesk.chat.R$attr: int colorAccent
zendesk.chat.IdentityManager: zendesk.chat.MainThreadPoster mainThreadPoster
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
zendesk.chat.ChatSocketConnection$State: zendesk.chat.ChatSocketConnection$State valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
zendesk.chat.R$id: int title_template
zendesk.chat.ZendeskAccountProvider_Factory: zendesk.chat.ZendeskAccountProvider newInstance(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,zendesk.chat.ObservableData)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
zendesk.chat.ChatSocketClient$Builder: zendesk.chat.ChatSocketClient$Builder withScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)
zendesk.messaging.ui.AttachmentsIndicator: AttachmentsIndicator(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$attr: int subtitleTextStyle
zendesk.chat.ChatStringProvider: java.lang.String phoneFieldHint()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
zendesk.chat.Agent
zendesk.chat.R$styleable: int AppCompatTheme_windowFixedWidthMinor
zendesk.chat.R$styleable: int AppCompatTheme_actionModeCloseDrawable
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider observableVisitorInfoProvider
zendesk.chat.VisitorActiveSignal: long INITIAL_DELAY
zendesk.chat.UserAgentAndClientHeadersInterceptor: java.lang.String X_ZENDESK_CLIENT_HEADER_VALUE_FORMAT
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
zendesk.chat.R$style: int Widget_AppCompat_SearchView
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
zendesk.chat.DataNode: java.lang.String LOG_TAG
zendesk.chat.ChatStatusCheckStage: zendesk.chat.ChatStringProvider chatStringProvider
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
zendesk.chat.PreChatFormFieldStatus: PreChatFormFieldStatus(java.lang.String,int)
com.google.android.material.button.MaterialButton: void setIconResource(int)
zendesk.chat.NetworkConnectivityProvider$1
zendesk.chat.IdentityManager$IdentityResetCompletion: boolean hasEndedChat
zendesk.chat.ChatEngine$1: zendesk.chat.ChatEngine this$0
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
com.google.android.gms.internal.measurement.zzck$zza
zendesk.chat.ZendeskConnectionProvider: zendesk.chat.ChatSessionManager chatSessionManager
zendesk.chat.R$style: int Base_V7_Theme_AppCompat_Light
zendesk.chat.R$drawable: int abc_btn_colored_material
zendesk.chat.Clock$1: void waitFor(long)
zendesk.chat.PathValueSender: java.util.concurrent.atomic.AtomicBoolean isConnected
zendesk.chat.R$styleable: int GradientColor_android_centerX
zendesk.chat.ChatLogBlacklister_Factory: zendesk.chat.ChatLogBlacklister get()
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
zendesk.chat.TextField: TextField(zendesk.chat.FormField$Status,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,zendesk.messaging.AgentDetails)
zendesk.chat.RequestSender
zendesk.chat.DataNode$ObservableBranch: DataNode$ObservableBranch(com.google.gson.Gson,java.util.List,java.lang.Class)
zendesk.chat.MachineIdStorage$InMemory: MachineIdStorage$InMemory()
zendesk.chat.ChatEngine: void start(zendesk.messaging.MessagingApi)
zendesk.chat.R$layout: int notification_action
zendesk.chat.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.zendesk.service.ErrorResponseAdapter: java.lang.String getResponseBodyType()
zendesk.chat.ChatFormStage: zendesk.chat.ChatFormDriver chatFormDriver
zendesk.chat.R$styleable: int SwitchCompat_thumbTextPadding
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserPropertyAs(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
zendesk.chat.DnModels$Agent: boolean isTyping()
zendesk.chat.DefaultChatSocketConnection
carnegietechnologies.gallery_saver.MediaType: carnegietechnologies.gallery_saver.MediaType valueOf(java.lang.String)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.android.gms.internal.measurement.zzbv$zzb: int zzc
zendesk.messaging.ui.MessageStatusView
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.google.android.gms.internal.measurement.zzbv$zza: int zzd
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzju zzm
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state$internal
zendesk.chat.ChatObserverFactory$1: void update(zendesk.chat.ChatState)
zendesk.chat.R$string: int zch_pre_chat_phone_field_message
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.google.android.gms.internal.measurement.zzbv$zzc: java.lang.String zzg
zendesk.chat.R$color: int abc_input_method_navigation_guard
zendesk.chat.ChatLog: boolean equals(java.lang.Object)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
zendesk.chat.R$attr: int titleMargin
zendesk.chat.R$styleable: int ActionBar_elevation
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
zendesk.chat.AndroidModule_V1StorageFactory: javax.inject.Provider gsonProvider
zendesk.chat.WebSocket$WebSocketListener: void webSocketException(com.zendesk.service.ErrorResponse)
zendesk.chat.DnModels$ChatLog: zendesk.chat.DnModels$ChatLog$Attachment attachment
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
zendesk.chat.ChatProvidersComponent$Builder: zendesk.chat.ChatProvidersComponent$Builder chatConfig(zendesk.chat.ChatConfig)
androidx.core.graphics.drawable.IconCompat: IconCompat()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
zendesk.chat.R$drawable: int abc_btn_check_material
zendesk.chat.ChatEngineModule_ChatFormStageFactory: javax.inject.Provider dateProvider
zendesk.chat.ChatProvidersStorage
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
zendesk.chat.DnModels$Channel
zendesk.chat.R$styleable: int AppCompatTheme_colorButtonNormal
zendesk.chat.SendCallbackManager$Transmission: SendCallbackManager$Transmission(zendesk.chat.PathValue,java.util.concurrent.ScheduledFuture,com.zendesk.service.ZendeskCallback,zendesk.chat.SendCallbackManager$1)
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice valueOf(java.lang.String)
zendesk.chat.DnUpdateModels$VisitorInfoUpdate
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
zendesk.chat.OfflineForm$1
zendesk.chat.R$styleable: int MenuView_android_horizontalDivider
zendesk.chat.IdentityManager$QueueItem: zendesk.chat.JwtAuthenticator jwtAuthenticator
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String userAgent
zendesk.chat.VisitorInfo$Builder: zendesk.chat.VisitorInfo$Builder withPhoneNumber(java.lang.String)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.google.android.gms.measurement.AppMeasurement
zendesk.chat.R$attr: int buttonBarPositiveButtonStyle
zendesk.chat.DaggerChatProvidersComponent$Builder: zendesk.chat.ChatProvidersComponent$Builder chatConfig(zendesk.chat.ChatConfig)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_identityManager: DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_identityManager(zendesk.chat.ChatProvidersComponent)
zendesk.chat.ZendeskChatProvider$1
zendesk.chat.R$color: int secondary_text_disabled_material_dark
zendesk.chat.R$id: int content
zendesk.chat.DefaultChatSession
zendesk.chat.R$id: int group_divider
zendesk.chat.R$styleable: int GradientColor_android_endX
zendesk.chat.R$styleable: int SwitchCompat_android_textOff
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
zendesk.chat.DnConverterUtils: java.util.List chatLogs(java.util.Map)
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
zendesk.chat.ChatSocketClient: ChatSocketClient(zendesk.chat.ChatSocketClient$Builder,zendesk.chat.ChatSocketClient$1)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
zendesk.chat.DnModels$Department: zendesk.chat.DnModels$Department$Status getStatus()
zendesk.chat.SendMessageRequest: void onError(com.zendesk.service.ErrorResponse)
zendesk.chat.ChatSocketConnection: void disconnect()
zendesk.chat.MainThreadPoster$4: zendesk.chat.FileUploadListener val$fileUploadListener
zendesk.chat.ZendeskPushNotificationsProvider: zendesk.chat.ChatSessionManager chatSessionManager
zendesk.chat.IdentityManager: void processQueue()
com.google.android.gms.common.internal.zzb: android.os.Parcelable$Creator CREATOR
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String sourceVersion
zendesk.chat.SendCallbackManager$Transmission: com.zendesk.service.ZendeskCallback callback
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
zendesk.chat.ConnectionStatus: zendesk.chat.ConnectionStatus CONNECTING
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
zendesk.chat.R$color: int abc_tint_switch_track
com.google.firebase.messaging.FirebaseMessagingService
zendesk.chat.ChatModel
zendesk.chat.R$style: int ThemeOverlay_AppCompat_Light
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
zendesk.chat.ChatAgentAvailabilityStage$AgentAvailableContinuation: void onAgentAvailable(zendesk.chat.ChatContext,java.util.List)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
zendesk.chat.R$attr: int trackTintMode
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
zendesk.chat.ChatModel: void onChatEnded(zendesk.chat.ChatContext)
zendesk.chat.JwtLoginDetailsProvider$1: java.util.concurrent.atomic.AtomicBoolean hasExecuted
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
zendesk.chat.ChatVisitorClient$Builder: ChatVisitorClient$Builder()
zendesk.chat.VisitorInfo: int hashCode()
zendesk.chat.DnModels$ChatLog$Attachment$Metadata: int hashCode()
zendesk.chat.MediatorEndpoint: java.lang.String MEDIATOR_URL_FORMAT
zendesk.chat.R$style: int Theme_AppCompat_DayNight
zendesk.chat.MainThreadPoster$1: zendesk.chat.Observer val$observer
zendesk.chat.IdentityManager: void access$1100(zendesk.chat.IdentityManager)
zendesk.chat.NetworkConnectivityProvider$2$2
zendesk.chat.R$styleable: int SearchView_layout
zendesk.chat.ChatConnectionSupervisor: void onAppForegrounded()
zendesk.chat.FileUploader$MeteredRequestBody: zendesk.chat.FileUploadListener listener
com.google.android.gms.internal.measurement.zzca$zza: int zzc
zendesk.chat.ZendeskChatProvider: zendesk.chat.MainThreadPoster mainThreadPoster
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue createVisitorTypingStatus(boolean)
zendesk.chat.DnModels$Profile: java.lang.String email
zendesk.chat.ChatModel: void onChatStarted(zendesk.chat.ChatContext)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
zendesk.chat.FrameFactory: java.lang.String LOG_TAG
zendesk.chat.R$attr: int tickMarkTint
zendesk.chat.R$attr: int actionOverflowButtonStyle
zendesk.chat.ChatModel_Factory: javax.inject.Provider chatBotMessagingItemsProvider
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider provideCompositeUpdateListenerProvider
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
zendesk.chat.MessageIdGenerator
zendesk.chat.R$id: int action_bar_activity_content
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
zendesk.chat.Frames: java.lang.String KEEP_ALIVE_PAYLOAD
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
zendesk.chat.R$styleable: int MenuItem_actionLayout
zendesk.chat.ChatStringProvider: java.lang.String departmentFieldPrompt()
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzg
zendesk.chat.Utils
zendesk.chat.R$styleable: int AppCompatTheme_actionModeSplitBackground
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.google.android.material.button.MaterialButton: int getIconSize()
zendesk.chat.Providers: zendesk.chat.PushNotificationsProvider pushNotificationsProvider()
zendesk.chat.ChatEngine$2: zendesk.chat.ChatEngine this$0
zendesk.chat.R$string: int abc_menu_shift_shortcut_label
zendesk.chat.DnUpdateModels$PushToken: DnUpdateModels$PushToken(java.lang.String)
zendesk.chat.ChatLogMapper: zendesk.messaging.AgentDetails createAgentDetails(zendesk.chat.ChatState,zendesk.chat.ChatLog)
androidx.lifecycle.ViewModel: ViewModel()
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Subhead
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
zendesk.chat.R$style: int Base_V28_Theme_AppCompat
zendesk.chat.DefaultChatSession: zendesk.chat.ChatLog$AttachmentMessage sendFile(java.io.File,com.zendesk.service.ZendeskCallback,zendesk.chat.FileUploadListener)
zendesk.chat.ChatLogMapper: zendesk.messaging.AgentDetails createAgentDetails(zendesk.chat.Agent)
com.google.android.material.bottomsheet.BottomSheetBehavior
zendesk.chat.R$attr: int collapseIcon
zendesk.chat.SharedPreferencesStorage: java.lang.String get(java.lang.String)
zendesk.chat.R$styleable: int StateListDrawable_android_enterFadeDuration
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
zendesk.chat.ChatLog$Type: zendesk.chat.ChatLog$Type ATTACHMENT_MESSAGE
zendesk.chat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
zendesk.chat.NetworkConnectivityProvider: zendesk.chat.NetworkConnectivity getNetworkConnectivity(android.content.Context,android.os.Handler)
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_chatProvider: java.lang.Object get()
zendesk.chat.ChatModel: zendesk.chat.ChatProvider chatProvider
zendesk.chat.R$style: int Base_DialogWindowTitleBackground_AppCompat
zendesk.chat.ObservationScope: ObservationScope()
zendesk.chat.DaggerChatProvidersComponent: javax.inject.Provider zendeskPushNotificationsProvider
zendesk.chat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
zendesk.chat.R$styleable: int Toolbar_titleMarginBottom
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
zendesk.chat.ZendeskProfileProvider: void update(zendesk.chat.ChatSession)
zendesk.chat.R$attr: int backgroundSplit
zendesk.chat.R$attr: int iconifiedByDefault
zendesk.chat.R$styleable: int AppCompatTheme_dividerVertical
zendesk.chat.DnModels$Connection: boolean equals(java.lang.Object)
zendesk.chat.R$styleable: int Toolbar_titleMarginTop
zendesk.chat.ChatFormStage$1: zendesk.chat.ChatFormStage this$0
zendesk.chat.R$drawable: int abc_ic_clear_material
zendesk.chat.ChatLog$AttachmentMessage: boolean equals(java.lang.Object)
zendesk.chat.DnModels$ChatLog$Type: zendesk.chat.DnModels$ChatLog$Type valueOf(java.lang.String)
com.google.firebase.iid.Registrar: com.google.firebase.iid.internal.FirebaseInstanceIdInternal lambda$getComponents$1$Registrar(com.google.firebase.components.ComponentContainer)
zendesk.chat.ChatStringProvider: java.lang.String preChatResponseAcceptedMessage()
zendesk.chat.ChatNetworkModule: zendesk.chat.ChatVisitorClient getChatVisitorClient(zendesk.chat.ChatConfig,okhttp3.OkHttpClient,java.util.concurrent.ScheduledExecutorService,zendesk.chat.NetworkConnectivity,zendesk.chat.ChatProvidersStorage,android.content.Context)
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
zendesk.belvedere.BelvedereUi$UiConfig: android.os.Parcelable$Creator CREATOR
zendesk.chat.JwtLoginDetailsProvider$2: void onSuccess(zendesk.chat.AuthenticationResponse)
zendesk.chat.Agent: boolean equals(java.lang.Object)
zendesk.chat.DefaultChatSocketConnection: zendesk.chat.ChatSocketConnection$State state
com.google.android.gms.internal.measurement.zzcd$zzk: float zzh
zendesk.chat.R$attr: int colorControlActivated
zendesk.chat.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
com.squareup.picasso.NetworkPolicy: com.squareup.picasso.NetworkPolicy[] values()
zendesk.chat.ChatSession: zendesk.chat.ChatLog$Message sendMessage(java.lang.String,com.zendesk.service.ZendeskCallback)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
zendesk.chat.R$dimen: int abc_dropdownitem_text_padding_left
com.google.android.material.bottomappbar.BottomAppBar$Behavior
zendesk.chat.MainThreadPoster_Factory: java.lang.Object get()
zendesk.chat.ChatEngineModule_ProvideCompositeUpdateListenerFactory: zendesk.messaging.components.CompositeActionListener get()
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_context: DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_context(zendesk.chat.ChatProvidersComponent)
zendesk.chat.ChatModel$2: void onSuccess(java.lang.Void)
zendesk.chat.FileUploader$MeteredRequestBody: okhttp3.MediaType contentType()
zendesk.chat.ChatStateStore$ChatLogMerger: zendesk.chat.ChatStateStore$ChatLogMerger ATTACHMENT_MESSAGE_CHAT_LOG_MERGER
zendesk.chat.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.google.android.gms.internal.measurement.zzca$zzb: long zzd
com.google.android.gms.internal.measurement.zzcd$zzc: com.google.android.gms.internal.measurement.zzju zzj
zendesk.messaging.Banner$Position: zendesk.messaging.Banner$Position[] values()
zendesk.chat.ChatSessionManager_Factory: javax.inject.Provider chatConfigProvider
zendesk.chat.R$styleable: int MenuItem_showAsAction
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus access$702(zendesk.chat.ChatConfiguration$Builder,zendesk.chat.PreChatFormFieldStatus)
zendesk.chat.DataNode$ObservableBranch: java.lang.Class branchClazz
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
zendesk.chat.R$id: int info
zendesk.chat.ZendeskConnectionProvider
zendesk.chat.DnModels$Account$Status: zendesk.chat.DnModels$Account$Status AWAY
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)
zendesk.chat.NetworkConnectivityProvider$2$2: zendesk.chat.NetworkConnectivityProvider$2 this$0
zendesk.chat.R$layout: int select_dialog_item_material
zendesk.chat.DnModels$LiveChat: DnModels$LiveChat(zendesk.chat.DnModels$Settings,zendesk.chat.DnModels$Channel,java.util.Map,zendesk.chat.DnModels$Account,java.util.Map,zendesk.chat.DnModels$Profile)
zendesk.chat.NetworkConnectivityProvider
zendesk.chat.ChatProvidersModule_ObservableVisitorInfoFactory
zendesk.chat.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
zendesk.chat.DefaultChatSession$17: void onCompleted(java.lang.Object)
zendesk.chat.Frames$NewConnection: long keepAliveInterval
zendesk.chat.SendFileRequest: zendesk.chat.DeliveryStatusMonitor deliveryStatusMonitor
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
zendesk.chat.PayloadAnonymousVisitorLogin: java.lang.String getSourceVersion()
zendesk.chat.ChatFormStage$1
zendesk.chat.R$styleable: int AppCompatTextHelper_android_drawableStart
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
zendesk.chat.ChatEngineModule_ProvideBotMessageIdentifierFactory: java.lang.Object get()
zendesk.chat.ChatLog: long getLastModifiedTimestamp()
zendesk.chat.ChatFormStage$1: void onDispatch()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
zendesk.chat.Chat: void reset()
zendesk.chat.ChatModel$1: zendesk.chat.ObservationScope val$observationScope
zendesk.chat.ChatFormDriver: void handleFormCompletion(zendesk.chat.ChatContext,zendesk.chat.ChatForm)
zendesk.messaging.ui.TypingIndicatorView
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
zendesk.chat.ChatFormStage: zendesk.chat.ChatStringProvider chatStringProvider
zendesk.chat.R$styleable: int ActionBar_contentInsetEnd
zendesk.chat.R$styleable: int FontFamily_fontProviderAuthority
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
zendesk.chat.R$color: int abc_background_cache_hint_selector_material_dark
zendesk.chat.R$styleable: int MenuView_android_itemIconDisabledAlpha
zendesk.chat.DefaultChatSession$17
zendesk.chat.OfflineForm$Builder: zendesk.chat.VisitorInfo visitorInfo
zendesk.chat.R$styleable: int SearchView_iconifiedByDefault
com.google.android.gms.internal.measurement.zzcd$zzg: long zzk
com.google.android.gms.internal.measurement.zzcd$zzc: long zzg
zendesk.chat.DefaultChatStringProvider: java.lang.String departmentFieldPrompt()
com.google.android.gms.internal.measurement.zzbv$zze: java.lang.String zze
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
zendesk.chat.PayloadChatTimeout: java.util.List PATH
zendesk.chat.R$styleable: int ActionBar_navigationMode
zendesk.messaging.ui.StackedResponseOptionsView
zendesk.chat.JwtLoginDetailsProvider: boolean isFresh(zendesk.chat.AuthenticationWrapper)
zendesk.chat.ChatEngine: zendesk.chat.ChatEngine$InputProcessor inputProcessor
zendesk.chat.DefaultChatSession: void sendChatComment(java.lang.String,com.zendesk.service.ZendeskCallback)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
zendesk.chat.Frames$Base: double remoteSmoothSkewedTransitTimeIn
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
zendesk.chat.R$dimen: int tooltip_corner_radius
zendesk.chat.MainThreadPoster$4$1
zendesk.chat.CacheManager_Factory: java.lang.Object get()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.google.android.flexbox.FlexboxLayoutManager: FlexboxLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
zendesk.chat.RequestSender: zendesk.chat.PathValueSender pathValueSender
zendesk.chat.Chat
zendesk.chat.UserAgentAndClientHeadersInterceptor_Factory: zendesk.chat.UserAgentAndClientHeadersInterceptor get()
zendesk.chat.R$styleable: int ViewBackgroundHelper_backgroundTint
zendesk.chat.ChatFormDriver
androidx.cardview.widget.CardView: void setMinimumWidth(int)
zendesk.chat.VisitorActiveSignal$VisitorActiveRunnable: VisitorActiveSignal$VisitorActiveRunnable(zendesk.chat.Connection)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
zendesk.chat.ChatAgentAvailabilityStage: zendesk.chat.ChatAgentAvailabilityStage$AgentUnavailableContinuation agentUnavailableContinuation
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzbv$zza: int zzc
zendesk.chat.R$styleable: int FontFamilyFont_android_ttcIndex
zendesk.chat.ChatEngine: zendesk.chat.ChatStringProvider access$100(zendesk.chat.ChatEngine)
zendesk.chat.OkHttpWebSocket: okhttp3.WebSocket socket
zendesk.chat.R$dimen: int abc_button_padding_vertical_material
zendesk.chat.R$drawable: int abc_btn_radio_to_on_mtrl_000
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzaf
zendesk.chat.Attachment: Attachment(zendesk.chat.Attachment$Metadata,java.lang.String,java.lang.String,long,java.lang.String,java.io.File)
zendesk.chat.ChatAgentAvailabilityStage$1: zendesk.chat.ChatContext val$chatContext
zendesk.chat.R$attr: int titleMargins
zendesk.chat.R$styleable: int[] MenuView
zendesk.chat.R$dimen: int abc_seekbar_track_progress_height_material
zendesk.chat.R$dimen: int tooltip_precise_anchor_extra_offset
zendesk.chat.R$style: int TextAppearance_AppCompat_SearchResult_Title
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
zendesk.chat.R$styleable: int AlertDialog_listLayout
zendesk.chat.R$styleable: int ViewStubCompat_android_id
zendesk.chat.PersistentCookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
zendesk.chat.ChatLog: int hashCode()
zendesk.chat.ChatLog: java.util.Comparator CREATED_TIMESTAMP_COMPARATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.google.android.material.transformation.ExpandableTransformationBehavior
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
zendesk.chat.Attachment$Metadata: int width
zendesk.chat.ChatProvidersModule$1: boolean shouldNotifyObservers(zendesk.chat.JwtAuthenticator,zendesk.chat.JwtAuthenticator)
zendesk.chat.R$id: int scrollIndicatorUp
zendesk.chat.DnUpdateModels$VisitorTypingStatus: DnUpdateModels$VisitorTypingStatus(boolean,zendesk.chat.DnUpdateModels$1)
zendesk.chat.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
zendesk.chat.Chat: void init(android.content.Context,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
zendesk.chat.ChatMenuAction
zendesk.messaging.ui.AgentMessageView: AgentMessageView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setGravity(int)
zendesk.chat.ChatSession: void observeChatSettings(zendesk.chat.ObservationScope,zendesk.chat.Observer)
zendesk.chat.ChatModel$2: zendesk.chat.Department val$department
zendesk.chat.DataNode: com.google.gson.Gson gson
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
zendesk.chat.R$dimen: int compat_button_padding_horizontal_material
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
zendesk.chat.SendFileRequest: boolean validateFileSending(zendesk.chat.ChatSettings)
zendesk.chat.ChatEngineModule_ProvideBotMessageDispatcherFactory: javax.inject.Provider messageIdentifierProvider
zendesk.chat.ChatProvidersComponent: zendesk.chat.ObservableData observableAccount()
zendesk.chat.CacheManager_Factory: javax.inject.Provider observableAccountProvider
zendesk.messaging.MessagingItem$Query$Status: zendesk.messaging.MessagingItem$Query$Status[] values()
zendesk.chat.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
zendesk.chat.ChatConfig: ChatConfig(java.lang.String,java.lang.String,zendesk.chat.VisitorPath,java.lang.String)
zendesk.chat.DaggerChatProvidersComponent
zendesk.chat.ChatLog$Rating: boolean equals(java.lang.Object)
zendesk.chat.ChatLog$Type: zendesk.chat.ChatLog$Type RATING_REQUEST
zendesk.chat.DaggerChatProvidersComponent: zendesk.chat.ChatProvider chatProvider()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzz
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
zendesk.chat.ChatEngineModule
zendesk.chat.ChatState: boolean isChatting()
zendesk.chat.R$attr: int itemPadding
zendesk.chat.R$styleable: int[] TextAppearance
zendesk.chat.R$id: int activity_chooser_view_content
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
zendesk.chat.ChatProvider
zendesk.chat.DnModels$Department$Status: zendesk.chat.DnModels$Department$Status OFFLINE
zendesk.chat.R$styleable: int ActionBar_progressBarPadding
android.support.v4.media.MediaMetadataCompat
zendesk.chat.DnModels$Channel: boolean equals(java.lang.Object)
zendesk.chat.MainThreadPoster$4: void onProgress(java.lang.String,long,long)
zendesk.chat.ZendeskProfileProvider$1: zendesk.chat.ZendeskProfileProvider this$0
zendesk.messaging.ObservableEngine: void notifyObservers(zendesk.messaging.Update)
zendesk.chat.R$attr: int fontProviderFetchStrategy
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider accountProvider
zendesk.chat.R$attr: int panelBackground
zendesk.chat.R$styleable: int AppCompatTheme_actionModeCopyDrawable
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzi
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
zendesk.chat.R$styleable: int ActionBar_progressBarStyle
zendesk.chat.ZendeskAccountProvider: void getAccount(com.zendesk.service.ZendeskCallback)
zendesk.chat.R$integer
zendesk.chat.Frames$Base: long sequenceNumber
zendesk.chat.BaseStorage: void clear()
zendesk.chat.R$styleable: int AppCompatTheme_homeAsUpIndicator
zendesk.chat.ChatEngine_Factory: javax.inject.Provider connectionProvider
zendesk.messaging.ui.InputBox: void setAttachmentsCount(int)
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.ChatVisitorClient$Builder withOkHttpClient(okhttp3.OkHttpClient)
zendesk.chat.ProfileProvider
zendesk.chat.DefaultChatSocketConnection: void stateUpdated(zendesk.chat.WebSocket$WebSocketListener$WebSocketState)
zendesk.chat.ChatFormStage: void onAgentAvailable(zendesk.chat.ChatContext,java.util.List)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
zendesk.chat.R$attr: int dialogTheme
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
zendesk.chat.WebSocket$WebSocketListener: void stateUpdated(zendesk.chat.WebSocket$WebSocketListener$WebSocketState)
zendesk.chat.R$attr: int selectableItemBackground
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,java.lang.String)
zendesk.chat.OfflineForm$Builder: OfflineForm$Builder(java.lang.String)
zendesk.chat.DefaultChatSession$15
zendesk.chat.ChatSocketClient$Builder: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.PreChatFormFieldStatus access$602(zendesk.chat.ChatConfiguration$Builder,zendesk.chat.PreChatFormFieldStatus)
zendesk.chat.VisitorActiveSignal: void update(zendesk.chat.ConnectionStatus)
androidx.appcompat.widget.ActionBarContextView
zendesk.chat.R$id: int action_image
zendesk.chat.ChatEngineModule_ProvideDateProviderFactory: zendesk.messaging.components.DateProvider provideDateProvider()
zendesk.chat.ChatSession: void requestChat()
zendesk.chat.R$style: int Widget_AppCompat_ActionBar_Solid
zendesk.chat.ChatEngineModule: zendesk.messaging.components.ActionListener provideUpdateActionListener(zendesk.messaging.components.CompositeActionListener)
zendesk.chat.R$layout: int abc_screen_simple
zendesk.chat.R$styleable: int GradientColor_android_gradientRadius
zendesk.chat.ChatSocketClient: zendesk.chat.MediatorEndpoint mediatorEndpoint
zendesk.chat.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
zendesk.chat.R$styleable: int AppCompatTheme_actionMenuTextAppearance
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
androidx.lifecycle.ProcessLifecycleOwnerInitializer
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.NetworkConnectivity: NetworkConnectivity()
zendesk.chat.PathValue: java.util.List path
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Large
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzii zzh
zendesk.chat.ChatProvidersStorage: zendesk.chat.AuthenticationWrapper loadAuthenticationWrapper()
zendesk.chat.ChatStateStore$ChatLogMerger: zendesk.chat.ChatStateStore$ChatLogMerger MESSAGE_CHAT_LOG_MERGER
zendesk.chat.R$drawable: int abc_switch_track_mtrl_alpha
zendesk.chat.R$style: int Base_Widget_AppCompat_RatingBar_Small
zendesk.chat.SendCallbackManager$Transmission: com.zendesk.service.ZendeskCallback access$400(zendesk.chat.SendCallbackManager$Transmission)
zendesk.chat.R$styleable: int AlertDialog_showTitle
com.app.fixjedtechnician.MainActivity
zendesk.messaging.ui.EndUserImageCellView: EndUserImageCellView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
zendesk.chat.ChatSessionStatus: zendesk.chat.ChatSessionStatus STARTED
zendesk.chat.SendMessageRequest: void cancel()
zendesk.chat.IdentityManager$IdentityResetCompletion: boolean access$502(zendesk.chat.IdentityManager$IdentityResetCompletion,boolean)
zendesk.chat.ChatVisitorClient$Builder: zendesk.chat.ChatVisitorClient$Builder withSdkInfo(java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
zendesk.chat.ChatObserverFactory
zendesk.chat.DefaultChatSession$19: zendesk.chat.DefaultChatSession this$0
zendesk.chat.R$style: int Widget_AppCompat_DrawerArrowToggle
zendesk.chat.R$attr: int dividerHorizontal
zendesk.chat.R$attr: int paddingStart
zendesk.chat.R$styleable: int ActionMode_closeItemLayout
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
zendesk.chat.DefaultChatSession$11: void run()
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
zendesk.chat.ChatProvidersModule_ObservableJwtAuthenticatorFactory: zendesk.chat.ChatProvidersModule_ObservableJwtAuthenticatorFactory INSTANCE
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
zendesk.chat.DnUpdateModels: zendesk.chat.PathValue createVisitorTags(java.util.List)
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentContainerView
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
zendesk.chat.MainThreadPoster_Factory: MainThreadPoster_Factory(javax.inject.Provider)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
zendesk.chat.OkHttpWebSocket: okhttp3.WebSocketListener okHttpListener
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.measurement.internal.zzar: android.os.Parcelable$Creator CREATOR
zendesk.chat.DnUpdateModels$Tags$NewTags: java.util.List tags
zendesk.chat.ChatEngine: java.util.concurrent.atomic.AtomicBoolean askForTranscriptEmail
zendesk.messaging.ui.InputBox: void setHint(java.lang.String)
zendesk.chat.R$styleable: int StateListDrawable_android_constantSize
zendesk.chat.ChatSocketListener: void onPathUpdateReceived(java.util.List)
zendesk.chat.DnModels$Connection: int hashCode()
zendesk.chat.R$attr: int autoSizeStepGranularity
zendesk.chat.ChatLogMapper_Factory: java.lang.Object get()
io.flutter.embedding.engine.FlutterOverlaySurface: int id
zendesk.chat.R$styleable: int AppCompatTheme_actionBarTheme
zendesk.chat.DefaultChatSession: void sendOfflineForm(zendesk.chat.OfflineForm,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$string: int zch_pre_chat_email_field_hint
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
zendesk.chat.R$anim: int abc_slide_out_top
com.google.android.gms.internal.measurement.zzck$zzb: com.google.android.gms.internal.measurement.zzju zzl
zendesk.chat.DnModels$Agent: boolean equals(java.lang.Object)
zendesk.chat.R$styleable: int MenuItem_android_orderInCategory
zendesk.chat.PathValueSender: java.util.concurrent.atomic.AtomicBoolean isProcessing
zendesk.chat.ChatFormDriver: zendesk.messaging.components.DateProvider dateProvider
zendesk.chat.R$string: int zch_pre_chat_introduction_greeting
zendesk.chat.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
zendesk.chat.ChatEngine: zendesk.messaging.MenuItem MENU_ITEM_END_CHAT
zendesk.chat.DnModels$FileSending: long maxFileSizeLimit
zendesk.chat.ChatFormDriver_Factory
com.google.android.gms.common.api.internal.LifecycleCallback
zendesk.chat.DnModels$Department: java.lang.String getName()
zendesk.chat.ChatFormDriver: java.lang.String access$000(zendesk.chat.ChatFormDriver,zendesk.chat.ChatContext,zendesk.chat.ChatForm)
com.google.android.gms.internal.measurement.zzcd$zzh: int zzd
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
zendesk.chat.ChatStateStore: java.util.Map attachmentMessageLogsById
zendesk.chat.R$styleable: int AnimatedStateListDrawableCompat_android_visible
zendesk.chat.DnModels$ChatLog: java.lang.String nick
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_accountProvider: zendesk.chat.AccountProvider get()
zendesk.chat.DnModels$Channel: zendesk.chat.ChatRating getRating()
zendesk.chat.R$style: int TextAppearance_AppCompat_Caption
zendesk.chat.Utils: Utils()
zendesk.chat.ChatObserverFactory: zendesk.chat.Observer chatSettingsObserver(zendesk.chat.ChatContext)
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
zendesk.chat.ChatConnectionSupervisor_Factory: javax.inject.Provider connectionProvider
zendesk.chat.AuthenticationWrapper: zendesk.chat.AuthenticationResponse getAuthenticationResponse()
zendesk.chat.R$drawable: int tooltip_frame_light
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
zendesk.chat.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
zendesk.chat.KeepAliveSignal$PingRunnable: KeepAliveSignal$PingRunnable(zendesk.chat.DefaultChatSocketConnection)
zendesk.chat.DefaultChatSession$14: com.zendesk.service.ZendeskCallback val$callback
zendesk.chat.EmailInputValidator_Factory: zendesk.chat.EmailInputValidator_Factory create(javax.inject.Provider)
zendesk.chat.R$layout: int abc_cascading_menu_item_layout
zendesk.chat.SendFileRequest: zendesk.chat.DataNode dataNode
zendesk.chat.ChatEngine: zendesk.chat.ChatFormDriver chatFormDriver
zendesk.chat.NetworkConnectivity$State: NetworkConnectivity$State(java.lang.String,int)
zendesk.chat.ChatConfiguration: zendesk.chat.FormField$Status getNameFieldStatus()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
zendesk.chat.DefaultChatSocketConnection: void send(zendesk.chat.PathValue,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
zendesk.chat.SendMessageRequest: java.lang.String LOG_TAG
zendesk.chat.R$styleable: int SearchView_closeIcon
zendesk.chat.FrameFactory: java.lang.StringBuilder getHeaderRawMessage()
zendesk.chat.ChatForm: java.lang.String getCompletionAcknowledgementMessage()
zendesk.chat.AuthenticationStorage: void saveAuthenticationWrapper(zendesk.chat.AuthenticationWrapper)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
zendesk.chat.ZendeskChatProvider: zendesk.chat.ChatConfig chatConfig
com.google.android.gms.internal.measurement.zzcd$zze: float zzg
zendesk.chat.R$attr: int listChoiceBackgroundIndicator
zendesk.chat.R$styleable: int ActionMode_subtitleTextStyle
zendesk.chat.ChatPhase: zendesk.chat.ChatPhase INIT
zendesk.chat.DnModels$Settings: int hashCode()
zendesk.chat.R$attr: int fontVariationSettings
zendesk.chat.DnUpdateModels$VisitorActive: long timestamp
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
zendesk.chat.CacheManager
zendesk.chat.MachineIdStorage$InMemory: void saveMachineId(java.lang.String)
zendesk.chat.R$styleable: int AppCompatTheme_textAppearanceListItem
zendesk.chat.Frames$NewConnection
zendesk.chat.R$styleable: int ActionBar_itemPadding
zendesk.chat.NetworkConnectivityProvider$3: void onLost(android.net.Network)
zendesk.chat.ChatProvider: void sendEmailTranscript(java.lang.String,com.zendesk.service.ZendeskCallback)
zendesk.chat.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
zendesk.chat.IdentityManager$IdentityResetCompletion$1: void onSuccess(java.lang.Object)
zendesk.chat.DefaultChatSession$15: zendesk.chat.DefaultChatSession this$0
androidx.appcompat.widget.AppCompatEditText
zendesk.chat.R$dimen: int abc_floating_window_z
zendesk.chat.ChatEngineModule$2: void onAction(java.lang.Object)
zendesk.chat.R$attr: int contentDescription
zendesk.chat.DaggerChatSdkComponent: javax.inject.Provider observableChatSettingsProvider
zendesk.chat.ConnectionStatus: zendesk.chat.ConnectionStatus[] $VALUES
zendesk.chat.DaggerChatSdkComponent$zendesk_chat_ChatProvidersComponent_identityManager: java.lang.Object get()
zendesk.chat.UserAgentAndClientHeadersInterceptor: java.lang.String USER_AGENT_HEADER_KEY
zendesk.chat.RequestSender: java.util.concurrent.atomic.AtomicBoolean processing
io.flutter.app.FlutterApplication
zendesk.chat.TimerModule: TimerModule()
zendesk.chat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
zendesk.chat.R$dimen: int abc_panel_menu_list_width
zendesk.chat.JwtLoginDetailsProvider: JwtLoginDetailsProvider(zendesk.chat.Clock,zendesk.chat.JwtAuthenticator,zendesk.chat.AuthenticationService,zendesk.chat.AuthenticationStorage,zendesk.chat.MachineIdStorage,zendesk.chat.LoginDetailsFactory,java.lang.String,zendesk.chat.AnonymousLoginDetailsProvider)
zendesk.chat.ChatFormDriver$2: void onDispatch()
android.support.v4.graphics.drawable.IconCompatParcelizer
zendesk.chat.ChatConnectionSupervisor: void deactivate()
zendesk.chat.TimerModule: zendesk.messaging.components.Timer$Factory timerFactory(android.os.Handler)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
zendesk.chat.DaggerChatSdkComponent$Builder: zendesk.chat.DaggerChatSdkComponent$Builder chatProvidersComponent(zendesk.chat.ChatProvidersComponent)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
zendesk.chat.Frames$Message: Frames$Message(long,double,long,zendesk.chat.Frames$Command,java.util.List,java.util.List)
zendesk.chat.AuthenticationResponse
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
zendesk.chat.ChatEngineModule$1: java.lang.String getId(java.lang.Object)
zendesk.chat.R$attr: int actionModeCloseDrawable
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
zendesk.chat.ChatFormStage: zendesk.messaging.components.IdProvider idProvider
zendesk.chat.R$attr: int panelMenuListWidth
zendesk.chat.OptionSelectField: zendesk.messaging.Update$State$UpdateInputFieldState getInputFieldState()
com.google.android.gms.internal.measurement.zzcd$zzk: java.lang.String zze
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
zendesk.chat.R$attr: int showText
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
zendesk.chat.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
zendesk.chat.ChatStatusCheckStage$ChatInitCompletion: void onChatInit(zendesk.chat.ChatContext)
zendesk.chat.Agent: int hashCode()
zendesk.chat.ChatNetworkModule_ChatServiceFactory: zendesk.chat.ChatService chatService(retrofit2.Retrofit)
zendesk.chat.CacheManager: zendesk.chat.ObservableData observableVisitorInfo
zendesk.chat.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
zendesk.chat.ChatNetworkModule_GetChatVisitorClientFactory: ChatNetworkModule_GetChatVisitorClientFactory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
zendesk.chat.R$styleable: int AppCompatTextView_fontFamily
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzbv$zzd zze
zendesk.chat.ChatConfiguration$Builder: zendesk.chat.ChatConfiguration$Builder withDepartmentFieldStatus(zendesk.chat.PreChatFormFieldStatus)
zendesk.chat.ZendeskProfileProvider: zendesk.chat.ChatSessionManager chatSessionManager
zendesk.chat.ZendeskChatProvider: void sendOfflineForm(zendesk.chat.OfflineForm,com.zendesk.service.ZendeskCallback)
zendesk.chat.DefaultChatStringProvider: java.lang.String nameFieldHint()
zendesk.chat.R$styleable: int CompoundButton_buttonTint
zendesk.chat.DeliveryStatusMonitor: java.lang.String logId(java.util.Map$Entry)
zendesk.chat.DefaultChatStringProvider_Factory: javax.inject.Provider contextProvider
zendesk.chat.DataStore: zendesk.chat.ConnectionStateMachine getConnectionStateMachine()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.snackbar.Snackbar$SnackbarLayout
zendesk.chat.R$style: int Widget_AppCompat_TextView_SpinnerItem
zendesk.chat.PushData$Type: PushData$Type(java.lang.String,int)
zendesk.chat.R$attr: int actionModeShareDrawable
zendesk.chat.JwtLoginDetailsProvider: com.zendesk.service.RetrofitZendeskCallbackAdapter access$100(zendesk.chat.JwtLoginDetailsProvider,zendesk.chat.CompletionCallback)
zendesk.chat.ChatModel_Factory: java.lang.Object get()
zendesk.chat.DefaultChatSocketConnection$1: int[] $SwitchMap$zendesk$chat$WebSocket$WebSocketListener$WebSocketState
zendesk.chat.SendFileRequest: zendesk.chat.FileUploader fileUploader
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
zendesk.chat.R$attr: int layout
zendesk.chat.R$styleable: int View_paddingStart
zendesk.chat.R$color: int bright_foreground_inverse_material_light
com.squareup.picasso.Picasso$Priority: com.squareup.picasso.Picasso$Priority valueOf(java.lang.String)
zendesk.chat.DnModels$Connection$Status: zendesk.chat.DnModels$Connection$Status REATTACHED
zendesk.chat.ChatState: java.util.List chatLogs
zendesk.chat.ChatRating: zendesk.chat.ChatRating valueOf(java.lang.String)
zendesk.chat.ChatState: java.util.Map agentsByNick
zendesk.chat.R$id: int action_bar_subtitle
zendesk.chat.BaseModule_GsonFactory: zendesk.chat.BaseModule_GsonFactory INSTANCE
zendesk.chat.DnUpdateModels$ChatMessage
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
zendesk.chat.ChatProvidersModule_ObservableJwtAuthenticatorFactory: java.lang.Object get()
zendesk.chat.ObservationToken: zendesk.chat.ObservationToken create(zendesk.chat.ObservableData,zendesk.chat.Observer,boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
zendesk.chat.CacheManager_Factory: CacheManager_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
zendesk.chat.R$attr: int colorSwitchThumbNormal
zendesk.chat.Attachment$Metadata: int height
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.google.android.material.datepicker.MaterialCalendar
zendesk.chat.ChatStateStore$ChatLogMerger: zendesk.chat.ChatLog merge(zendesk.chat.ChatLog,zendesk.chat.DnModels$ChatLog)
zendesk.chat.ObservationToken: zendesk.chat.ObservableData observableData
zendesk.chat.DataNode: void extendLocalWithRemote(com.google.gson.JsonObject,com.google.gson.JsonObject)
zendesk.chat.Account: Account(zendesk.chat.AccountStatus,java.util.List)
zendesk.chat.R$styleable: int View_android_focusable
zendesk.chat.JwtLoginDetailsProvider: void getLoginDetails(zendesk.chat.CompletionCallback)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
zendesk.chat.R$style: int Widget_AppCompat_ProgressBar
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
zendesk.chat.R$dimen: int abc_action_bar_stacked_max_height
androidx.activity.ComponentActivity: ComponentActivity()
zendesk.chat.ConnectionStatus: zendesk.chat.ConnectionStatus RECONNECTING
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton
